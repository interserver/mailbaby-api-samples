/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n# Overview\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n# Authentication\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A block entry from the clickhouse mailblocks server.
 */
public class OASMailBlockClickHouse implements OAS.MappedProperties {
    /**
     * Get r_date
     * @return r_date
     */
    public Date r_date { get; set; }

    /**
     * Get r_from
     * @return r_from
     */
    public String r_from { get; set; }

    /**
     * Get messageId
     * @return messageId
     */
    public String messageId { get; set; }

    /**
     * Get subject
     * @return subject
     */
    public String subject { get; set; }

    /**
     * Get to
     * @return to
     */
    public String to { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'date' => 'r_date',
        'from' => 'r_from'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'date' => 'r_date',
        'from' => 'r_from'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMailBlockClickHouse getExample() {
        OASMailBlockClickHouse mailBlockClickHouse = new OASMailBlockClickHouse();
          mailBlockClickHouse.r_date = Date.newInstance(2000, 1, 23);
          mailBlockClickHouse.r_from = '';
          mailBlockClickHouse.messageId = '';
          mailBlockClickHouse.subject = '';
          mailBlockClickHouse.to = '';
        return mailBlockClickHouse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMailBlockClickHouse) {           
            OASMailBlockClickHouse mailBlockClickHouse = (OASMailBlockClickHouse) obj;
            return this.r_date == mailBlockClickHouse.r_date
                && this.r_from == mailBlockClickHouse.r_from
                && this.messageId == mailBlockClickHouse.messageId
                && this.subject == mailBlockClickHouse.subject
                && this.to == mailBlockClickHouse.to;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (messageId == null ? 0 : System.hashCode(messageId));
        hashCode = (17 * hashCode) + (subject == null ? 0 : System.hashCode(subject));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        return hashCode;
    }
}

