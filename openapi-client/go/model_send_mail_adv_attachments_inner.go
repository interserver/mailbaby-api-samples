/*
MailBaby Email Delivery API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.0.1
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"os"
)

// SendMailAdvAttachmentsInner A File attachment for an email
type SendMailAdvAttachmentsInner struct {
	// (optional) Filename to specify for the attachment.
	Filename *string `json:"filename,omitempty"`
	// Contents of the attached file (must be base64 encoded)
	Data *os.File `json:"data"`
}

// NewSendMailAdvAttachmentsInner instantiates a new SendMailAdvAttachmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMailAdvAttachmentsInner(data *os.File) *SendMailAdvAttachmentsInner {
	this := SendMailAdvAttachmentsInner{}
	this.Data = data
	return &this
}

// NewSendMailAdvAttachmentsInnerWithDefaults instantiates a new SendMailAdvAttachmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMailAdvAttachmentsInnerWithDefaults() *SendMailAdvAttachmentsInner {
	this := SendMailAdvAttachmentsInner{}
	return &this
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *SendMailAdvAttachmentsInner) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailAdvAttachmentsInner) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *SendMailAdvAttachmentsInner) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *SendMailAdvAttachmentsInner) SetFilename(v string) {
	o.Filename = &v
}

// GetData returns the Data field value
func (o *SendMailAdvAttachmentsInner) GetData() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SendMailAdvAttachmentsInner) GetDataOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SendMailAdvAttachmentsInner) SetData(v *os.File) {
	o.Data = v
}

func (o SendMailAdvAttachmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSendMailAdvAttachmentsInner struct {
	value *SendMailAdvAttachmentsInner
	isSet bool
}

func (v NullableSendMailAdvAttachmentsInner) Get() *SendMailAdvAttachmentsInner {
	return v.value
}

func (v *NullableSendMailAdvAttachmentsInner) Set(val *SendMailAdvAttachmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMailAdvAttachmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMailAdvAttachmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMailAdvAttachmentsInner(val *SendMailAdvAttachmentsInner) *NullableSendMailAdvAttachmentsInner {
	return &NullableSendMailAdvAttachmentsInner{value: val, isSet: true}
}

func (v NullableSendMailAdvAttachmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMailAdvAttachmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


