/* tslint:disable */
/* eslint-disable */
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EmailAddressName } from './EmailAddressName';
import {
    instanceOfEmailAddressName,
    EmailAddressNameFromJSON,
    EmailAddressNameFromJSONTyped,
    EmailAddressNameToJSON,
} from './EmailAddressName';

/**
 * @type EmailAddressTypes
 * 
 * @export
 */
export type EmailAddressTypes = EmailAddressName | string;

export function EmailAddressTypesFromJSON(json: any): EmailAddressTypes {
    return EmailAddressTypesFromJSONTyped(json, false);
}

export function EmailAddressTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailAddressTypes {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfEmailAddressName(json)) {
        return EmailAddressNameFromJSONTyped(json, true);
    }

    return {} as any;
}

export function EmailAddressTypesToJSON(json: any): any {
    return EmailAddressTypesToJSONTyped(json, false);
}

export function EmailAddressTypesToJSONTyped(value?: EmailAddressTypes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfEmailAddressName(value)) {
        return EmailAddressNameToJSON(value as EmailAddressName);
    }

    return {};
}

