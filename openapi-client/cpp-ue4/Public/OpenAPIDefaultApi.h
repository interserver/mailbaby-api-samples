/**
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI 
{

class OPENAPI_API OpenAPIDefaultApi
{
public:
	OpenAPIDefaultApi();
	~OpenAPIDefaultApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class GetMailOrdersRequest;
	class GetMailOrdersResponse;
	class PingServerRequest;
	class PingServerResponse;
	class PlaceMailOrderRequest;
	class PlaceMailOrderResponse;
	class SendAdvMailRequest;
	class SendAdvMailResponse;
	class SendMailRequest;
	class SendMailResponse;
	class ValidateMailOrderRequest;
	class ValidateMailOrderResponse;
	class ViewMailLogRequest;
	class ViewMailLogResponse;
	
    DECLARE_DELEGATE_OneParam(FGetMailOrdersDelegate, const GetMailOrdersResponse&);
    DECLARE_DELEGATE_OneParam(FPingServerDelegate, const PingServerResponse&);
    DECLARE_DELEGATE_OneParam(FPlaceMailOrderDelegate, const PlaceMailOrderResponse&);
    DECLARE_DELEGATE_OneParam(FSendAdvMailDelegate, const SendAdvMailResponse&);
    DECLARE_DELEGATE_OneParam(FSendMailDelegate, const SendMailResponse&);
    DECLARE_DELEGATE_OneParam(FValidateMailOrderDelegate, const ValidateMailOrderResponse&);
    DECLARE_DELEGATE_OneParam(FViewMailLogDelegate, const ViewMailLogResponse&);
    
    bool GetMailOrders(const GetMailOrdersRequest& Request, const FGetMailOrdersDelegate& Delegate = FGetMailOrdersDelegate()) const;
    bool PingServer(const PingServerRequest& Request, const FPingServerDelegate& Delegate = FPingServerDelegate()) const;
    bool PlaceMailOrder(const PlaceMailOrderRequest& Request, const FPlaceMailOrderDelegate& Delegate = FPlaceMailOrderDelegate()) const;
    bool SendAdvMail(const SendAdvMailRequest& Request, const FSendAdvMailDelegate& Delegate = FSendAdvMailDelegate()) const;
    bool SendMail(const SendMailRequest& Request, const FSendMailDelegate& Delegate = FSendMailDelegate()) const;
    bool ValidateMailOrder(const ValidateMailOrderRequest& Request, const FValidateMailOrderDelegate& Delegate = FValidateMailOrderDelegate()) const;
    bool ViewMailLog(const ViewMailLogRequest& Request, const FViewMailLogDelegate& Delegate = FViewMailLogDelegate()) const;
    

private:
    void OnGetMailOrdersResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetMailOrdersDelegate Delegate, int AutoRetryCount) const;
    void OnPingServerResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPingServerDelegate Delegate, int AutoRetryCount) const;
    void OnPlaceMailOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaceMailOrderDelegate Delegate, int AutoRetryCount) const;
    void OnSendAdvMailResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSendAdvMailDelegate Delegate, int AutoRetryCount) const;
    void OnSendMailResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSendMailDelegate Delegate, int AutoRetryCount) const;
    void OnValidateMailOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FValidateMailOrderDelegate Delegate, int AutoRetryCount) const;
    void OnViewMailLogResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FViewMailLogDelegate Delegate, int AutoRetryCount) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
