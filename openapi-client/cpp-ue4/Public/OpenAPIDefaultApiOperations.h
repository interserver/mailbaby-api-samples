/**
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIDefaultApi.h"

#include "OpenAPIErrorResponse.h"
#include "OpenAPIGenericResponse.h"
#include "OpenAPIMailLog.h"
#include "OpenAPIMailOrder.h"
#include "OpenAPISendMail.h"

namespace OpenAPI 
{

/* displays a list of mail service orders

*/
class OPENAPI_API OpenAPIDefaultApi::GetMailOrdersRequest : public Request
{
public:
    virtual ~GetMailOrdersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* The ID of your mail order this will be sent through. */
	TOptional<int64> Id;
};

class OPENAPI_API OpenAPIDefaultApi::GetMailOrdersResponse : public Response
{
public:
    virtual ~GetMailOrdersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    TArray<OpenAPIMailOrder> Content;
};

/* Checks if the server is running

*/
class OPENAPI_API OpenAPIDefaultApi::PingServerRequest : public Request
{
public:
    virtual ~PingServerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
};

class OPENAPI_API OpenAPIDefaultApi::PingServerResponse : public Response
{
public:
    virtual ~PingServerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    
};

/* places a mail order
 *
 * Adds an item to the system
*/
class OPENAPI_API OpenAPIDefaultApi::PlaceMailOrderRequest : public Request
{
public:
    virtual ~PlaceMailOrderRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* Inventory item to add */
	TOptional<OpenAPIMailOrder> OpenAPIMailOrder;
};

class OPENAPI_API OpenAPIDefaultApi::PlaceMailOrderResponse : public Response
{
public:
    virtual ~PlaceMailOrderResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    
};

/* Sends an Email with Advanced Options
 *
 * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
*/
class OPENAPI_API OpenAPIDefaultApi::SendAdvMailByIdRequest : public Request
{
public:
    virtual ~SendAdvMailByIdRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPISendMail OpenAPISendMail;
};

class OPENAPI_API OpenAPIDefaultApi::SendAdvMailByIdResponse : public Response
{
public:
    virtual ~SendAdvMailByIdResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIGenericResponse Content;
};

/* Sends an Email
 *
 * Sends An email through one of your mail orders.
*/
class OPENAPI_API OpenAPIDefaultApi::SendMailByIdRequest : public Request
{
public:
    virtual ~SendMailByIdRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPISendMail OpenAPISendMail;
};

class OPENAPI_API OpenAPIDefaultApi::SendMailByIdResponse : public Response
{
public:
    virtual ~SendMailByIdResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIGenericResponse Content;
};

/* validatess order details before placing an order

*/
class OPENAPI_API OpenAPIDefaultApi::ValidateMailOrderRequest : public Request
{
public:
    virtual ~ValidateMailOrderRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
};

class OPENAPI_API OpenAPIDefaultApi::ValidateMailOrderResponse : public Response
{
public:
    virtual ~ValidateMailOrderResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    
};

/* displays the mail log
 *
 * By passing in the appropriate options, you can search for available inventory in the system 
*/
class OPENAPI_API OpenAPIDefaultApi::ViewMailLogByIdRequest : public Request
{
public:
    virtual ~ViewMailLogByIdRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* The ID of your mail order this will be sent through. */
	TOptional<int64> Id;
	/* pass an optional search string for looking up inventory */
	TOptional<FString> SearchString;
	/* number of records to skip for pagination */
	TOptional<int32> Skip;
	/* maximum number of records to return */
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPIDefaultApi::ViewMailLogByIdResponse : public Response
{
public:
    virtual ~ViewMailLogByIdResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    TArray<OpenAPIMailLog> Content;
};

}
