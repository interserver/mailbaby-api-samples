=begin comment

MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

The version of the OpenAPI document: 1.1.0
Contact: support@interserver.net
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package OpenAPIClient::HistoryApi;

require 5.6.0;
use strict;
use warnings;
use utf8;
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use OpenAPIClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'OpenAPIClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = OpenAPIClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# get_stats
#
# displays a list of blocked email addresses
#
{
    my $params = {
    };
    __PACKAGE__->method_documentation->{ 'get_stats' } = {
        summary => 'displays a list of blocked email addresses',
        params => $params,
        returns => 'ARRAY[GetStats200ResponseInner]',
        };
}
# @return ARRAY[GetStats200ResponseInner]
#
sub get_stats {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mail/stats';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(apiKeyAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ARRAY[GetStats200ResponseInner]', $response);
    return $_response_object;
}

#
# view_mail_log
#
# displays the mail log
#
# @param int $id The ID of your mail order this will be sent through. (optional)
# @param string $origin originating ip address sending mail (optional)
# @param string $mx mx record mail was sent to (optional)
# @param string $from from email address (optional)
# @param string $to to/destination email address (optional)
# @param string $subject subject containing this string (optional)
# @param string $mailid mail id (optional)
# @param int $skip number of records to skip for pagination (optional, default to 0)
# @param int $limit maximum number of records to return (optional, default to 100)
# @param int $start_date earliest date to get emails in unix timestamp format (optional)
# @param int $end_date earliest date to get emails in unix timestamp format (optional)
{
    my $params = {
    'id' => {
        data_type => 'int',
        description => 'The ID of your mail order this will be sent through.',
        required => '0',
    },
    'origin' => {
        data_type => 'string',
        description => 'originating ip address sending mail',
        required => '0',
    },
    'mx' => {
        data_type => 'string',
        description => 'mx record mail was sent to',
        required => '0',
    },
    'from' => {
        data_type => 'string',
        description => 'from email address',
        required => '0',
    },
    'to' => {
        data_type => 'string',
        description => 'to/destination email address',
        required => '0',
    },
    'subject' => {
        data_type => 'string',
        description => 'subject containing this string',
        required => '0',
    },
    'mailid' => {
        data_type => 'string',
        description => 'mail id',
        required => '0',
    },
    'skip' => {
        data_type => 'int',
        description => 'number of records to skip for pagination',
        required => '0',
    },
    'limit' => {
        data_type => 'int',
        description => 'maximum number of records to return',
        required => '0',
    },
    'start_date' => {
        data_type => 'int',
        description => 'earliest date to get emails in unix timestamp format',
        required => '0',
    },
    'end_date' => {
        data_type => 'int',
        description => 'earliest date to get emails in unix timestamp format',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'view_mail_log' } = {
        summary => 'displays the mail log',
        params => $params,
        returns => 'MailLog',
        };
}
# @return MailLog
#
sub view_mail_log {
    my ($self, %args) = @_;

    # parse inputs
    my $_resource_path = '/mail/log';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'id'}) {
        $query_params->{'id'} = $self->{api_client}->to_query_value($args{'id'});
    }

    # query params
    if ( exists $args{'origin'}) {
        $query_params->{'origin'} = $self->{api_client}->to_query_value($args{'origin'});
    }

    # query params
    if ( exists $args{'mx'}) {
        $query_params->{'mx'} = $self->{api_client}->to_query_value($args{'mx'});
    }

    # query params
    if ( exists $args{'from'}) {
        $query_params->{'from'} = $self->{api_client}->to_query_value($args{'from'});
    }

    # query params
    if ( exists $args{'to'}) {
        $query_params->{'to'} = $self->{api_client}->to_query_value($args{'to'});
    }

    # query params
    if ( exists $args{'subject'}) {
        $query_params->{'subject'} = $self->{api_client}->to_query_value($args{'subject'});
    }

    # query params
    if ( exists $args{'mailid'}) {
        $query_params->{'mailid'} = $self->{api_client}->to_query_value($args{'mailid'});
    }

    # query params
    if ( exists $args{'skip'}) {
        $query_params->{'skip'} = $self->{api_client}->to_query_value($args{'skip'});
    }

    # query params
    if ( exists $args{'limit'}) {
        $query_params->{'limit'} = $self->{api_client}->to_query_value($args{'limit'});
    }

    # query params
    if ( exists $args{'start_date'}) {
        $query_params->{'startDate'} = $self->{api_client}->to_query_value($args{'start_date'});
    }

    # query params
    if ( exists $args{'end_date'}) {
        $query_params->{'endDate'} = $self->{api_client}->to_query_value($args{'end_date'});
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(apiKeyAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('MailLog', $response);
    return $_response_object;
}

1;
