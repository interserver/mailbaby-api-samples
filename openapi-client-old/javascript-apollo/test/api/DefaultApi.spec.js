/**
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

// CommonJS-like environments that support module.exports, like Node.
factory(require('expect.js'), require(process.cwd()+'/src/index'));

'use strict';

var instance;

beforeEach(function() {
  instance = new MailBabyApi.DefaultApi();
});

var getProperty = function(object, getter, property) {
  // Use getter method if present; otherwise, get the property directly.
  if (typeof object[getter] === 'function')
    return object[getter]();
  else
    return object[property];
}

var setProperty = function(object, setter, property, value) {
  // Use setter method if present; otherwise, set the property directly.
  if (typeof object[setter] === 'function')
    object[setter](value);
  else
    object[property] = value;
}

describe('DefaultApi', function() {
    describe('getMailOrders', function() {
      it('should call getMailOrders successfully', function(done) {
        //uncomment below and update the code to test getMailOrders
        //instance.getMailOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pingServer', function() {
      it('should call pingServer successfully', function(done) {
        //uncomment below and update the code to test pingServer
        //instance.pingServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('placeMailOrder', function() {
      it('should call placeMailOrder successfully', function(done) {
        //uncomment below and update the code to test placeMailOrder
        //instance.placeMailOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendAdvMail', function() {
      it('should call sendAdvMail successfully', function(done) {
        //uncomment below and update the code to test sendAdvMail
        //instance.sendAdvMail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendMail', function() {
      it('should call sendMail successfully', function(done) {
        //uncomment below and update the code to test sendMail
        //instance.sendMail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateMailOrder', function() {
      it('should call validateMailOrder successfully', function(done) {
        //uncomment below and update the code to test validateMailOrder
        //instance.validateMailOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewMailLog', function() {
      it('should call viewMailLog successfully', function(done) {
        //uncomment below and update the code to test viewMailLog
        //instance.viewMailLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
});