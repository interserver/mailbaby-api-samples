# #MailBaby Email Delivery API
#
##**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
#
#The version of the OpenAPI document: 1.0.1
#Contact: support@interserver.net
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 7.0.0-SNAPSHOT
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for ::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "DefaultApi" do
  describe "test an instance of DefaultApi" do
    it "should create an instance of DefaultApi" do
      api_instance = ::DefaultApi.new
      # TODO expect(api_instance).to be_instance_of(::DefaultApi)
    end
  end

  # unit tests for get_mail_orders
  # displays a list of mail service orders
  # @param [Hash] opts the optional parameters
  # @return [Array(GetMailOrders200ResponseInner)]
  describe "get_mail_orders test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for ping_server
  # Checks if the server is running
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe "ping_server test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for send_adv_mail
  # Sends an Email with Advanced Options
  # Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
  # @param send_mail_adv 
  # @param [Hash] opts the optional parameters
  # @return [GenericResponse]
  describe "send_adv_mail test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for send_mail
  # Sends an Email
  # Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
  # @param to The Contact whom is the primary recipient of this email.
  # @param from The contact whom is the this email is from.
  # @param subject The subject or title of the email
  # @param body The main email contents.
  # @param [Hash] opts the optional parameters
  # @return [GenericResponse]
  describe "send_mail test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for view_mail_log
  # displays the mail log
  # By passing in the appropriate options, you can search for available inventory in the system 
  # @param [Hash] opts the optional parameters
  # @option opts [Int64] :id The ID of your mail order this will be sent through.
  # @option opts [String] :search pass an optional search string for looking up inventory
  # @option opts [Int32] :skip number of records to skip for pagination
  # @option opts [Int32] :limit maximum number of records to return
  # @option opts [Int64] :start_date earliest date to get emails in unix timestamp format
  # @option opts [Int64] :end_date earliest date to get emails in unix timestamp format
  # @return [MailLog]
  describe "view_mail_log test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
