14:18:26.454 [Thread-0] INFO  i.s.c.v3.config.CodegenConfigurator - 
VERBOSE MODE: ON. Additional debug options are injected
 - [debugSwagger] prints the swagger specification as interpreted by the codegen
 - [debugModels] prints models passed to the template engine
 - [debugOperations] prints operations passed to the template engine
 - [debugSupportingFiles] prints additional data passed to the template engine
{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Mail Baby API",
    "description" : "This is an API for accesssing the mail services.",
    "termsOfService" : "https://www.interserver.net/terms-of-service.html",
    "contact" : {
      "name" : "Joe Huss",
      "url" : "https://www.interserver.net/contact-information.html",
      "email" : "detain@interserver.net"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "https://www.interserver.net/blog/\n",
    "url" : "https://interserver.net/tips/"
  },
  "servers" : [ {
    "url" : "https://api.mailbaby.net/",
    "description" : "Live API Endpoint"
  }, {
    "url" : "http://mynew.interserver.net:8787/",
    "description" : "Temporary API Endpoint"
  }, {
    "url" : "https://virtserver.swaggerhub.com/InterServer/MailBaby/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "security" : [ {
    "apiLoginAuth" : [ ],
    "apiPasswordAuth" : [ ]
  }, {
    "apiLoginAuth" : [ ],
    "apiKeyAuth" : [ ]
  } ],
  "paths" : {
    "/ping" : {
      "get" : {
        "summary" : "Checks if the server is running",
        "operationId" : "pingServer",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Server is up and running"
          },
          "default" : {
            "description" : "Something is wrong"
          }
        },
        "security" : [ ]
      }
    },
    "/mail" : {
      "get" : {
        "summary" : "displays a list of mail service orders",
        "operationId" : "getMailOrders",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "links" : {
              "sendMailByIdLink" : {
                "operationId" : "sendMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                },
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}/send`."
              },
              "getMailByIdLink" : {
                "operationId" : "getMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                },
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}`."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/mail/order" : {
      "get" : {
        "summary" : "validatess order details before placing an order",
        "operationId" : "validateMailOrder",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "summary" : "places a mail order",
        "description" : "Adds an item to the system",
        "operationId" : "placeMailOrder",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "Inventory item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailOrder"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/mail/{id}" : {
      "get" : {
        "summary" : "Gets mail order information by id",
        "description" : "returns information about a mail order in the system with the given id.",
        "operationId" : "getMailById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrder"
                }
              }
            }
          }
        }
      }
    },
    "/mail/{id}/send" : {
      "post" : {
        "summary" : "Sends an Email",
        "description" : "Sends An email through one of your mail orders.",
        "operationId" : "sendMailById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "subject",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "body",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/mail/{id}/log" : {
      "get" : {
        "summary" : "displays the mail log",
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId" : "viewMailLogById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchString",
          "in" : "query",
          "description" : "pass an optional search string for looking up inventory",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "number of records to skip for pagination",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of records to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MailLog"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "GenericResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "ok"
          },
          "status_text" : {
            "type" : "string",
            "example" : "The command completed successfully."
          }
        }
      },
      "MailOrders" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/MailOrder"
        }
      },
      "MailOrder" : {
        "required" : [ "id", "status", "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1234
          },
          "status" : {
            "type" : "string",
            "example" : "active"
          },
          "username" : {
            "type" : "string",
            "example" : "mb1234"
          },
          "password" : {
            "type" : "string",
            "example" : "guest123"
          },
          "comment" : {
            "type" : "string",
            "example" : "main mail account"
          }
        }
      },
      "MailLog" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "description" : "Mail Order Details"
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters" : {
      "offsetParam" : {
        "name" : "offset",
        "in" : "query",
        "description" : "Number of items to skip before returning the results.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32",
          "default" : 0
        }
      },
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Maximum number of items to return.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32",
          "default" : 20
        }
      }
    },
    "examples" : { },
    "requestBodies" : { },
    "headers" : { },
    "securitySchemes" : {
      "apiLoginAuth" : {
        "type" : "apiKey",
        "name" : "X-API-LOGIN",
        "in" : "header"
      },
      "apiPasswordAuth" : {
        "type" : "apiKey",
        "name" : "X-API-PASS",
        "in" : "header"
      },
      "apiKeyAuth" : {
        "type" : "apiKey",
        "name" : "X-API-KEY",
        "in" : "header"
      }
    },
    "links" : { },
    "callbacks" : { }
  }
}
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.github.jknack.handlebars.context.MemberValueResolver (file:/home/sites/mailbaby-mail-api/swagger-codegen-cli.jar) to method java.util.Collections$EmptyMap.isEmpty()
WARNING: Please consider reporting this to the maintainers of com.github.jknack.handlebars.context.MemberValueResolver
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
14:18:27.444 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/src/Model/Error.php
14:18:27.447 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - File exists. Skipped overwriting /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/test/Model/ErrorTest.php
14:18:27.462 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/docs/Model/Error.md
14:18:27.603 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/src/Model/GenericResponse.php
14:18:27.603 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - File exists. Skipped overwriting /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/test/Model/GenericResponseTest.php
14:18:27.608 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/docs/Model/GenericResponse.md
14:18:27.687 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/src/Model/MailLog.php
14:18:27.688 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - File exists. Skipped overwriting /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/test/Model/MailLogTest.php
14:18:27.693 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/docs/Model/MailLog.md
14:18:27.802 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/src/Model/MailOrder.php
14:18:27.803 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - File exists. Skipped overwriting /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/test/Model/MailOrderTest.php
14:18:27.811 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/docs/Model/MailOrder.md
14:18:27.903 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/src/Model/MailOrders.php
14:18:27.904 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - File exists. Skipped overwriting /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/test/Model/MailOrdersTest.php
14:18:27.909 [Thread-0] INFO  i.s.codegen.v3.AbstractGenerator - writing file /home/sites/mailbaby-mail-api/mailbaby-api-samples/swagger-client/php/Api/docs/Model/MailOrders.md
14:18:27.910 [Thread-0] INFO  i.s.codegen.v3.DefaultGenerator - ############ Model info ############
[ {
  "schema" : {
    "required" : [ "code", "message" ],
    "type" : "object",
    "properties" : {
      "code" : {
        "type" : "string"
      },
      "message" : {
        "type" : "string"
      }
    }
  },
  "importPath" : "Interserver\\Mailbaby\\Model.Error",
  "model" : {
    "vendorExtensions" : {
      "x-is-alias" : false,
      "x-is-nullable" : false,
      "x-has-only-read-only" : false,
      "x-has-optional" : false,
      "x-has-vars" : true,
      "x-has-required" : true,
      "x-has-enums" : false
    },
    "name" : "Error",
    "classname" : "Error",
    "classVarName" : "error",
    "modelJson" : "{\n  \"required\" : [ \"code\", \"message\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"code\" : {\n      \"type\" : \"string\"\n    },\n    \"message\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
    "dataType" : "object",
    "classFilename" : "Error",
    "vars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "code",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Code",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "message",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "message",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Message",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "requiredVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "code",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Code",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "message",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "message",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Message",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "code",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Code",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "message",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "message",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Message",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "allVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "code",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Code",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "message",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "message",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "string",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Message",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "code", "message" ],
    "allMandatory" : [ "code", "message" ],
    "imports" : [ ],
    "emptyVars" : false,
    "isComposedModel" : false,
    "hasVars" : true,
    "hasOnlyReadOnly" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "hasRequired" : false,
    "hasOptional" : false,
    "hasChildren" : false,
    "isInteger" : false,
    "isNumber" : false,
    "hasHeaders" : false,
    "isString" : false,
    "isNumeric" : false,
    "isLong" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isByteArray" : false,
    "isBoolean" : false,
    "isDate" : false,
    "isDateTime" : false,
    "isUuid" : false,
    "isDefault" : false,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isMultipart" : false,
    "isResponseBinary" : false,
    "isResponseFile" : false,
    "isBinary" : false,
    "isFile" : false,
    "isArrayModel" : false,
    "isAlias" : false,
    "isObject" : false,
    "hasInnerObject" : false,
    "isNotContainer" : false,
    "isReadOnly" : false,
    "isNullable" : false,
    "isCollectionFormatMulti" : false,
    "hasMore" : false,
    "isContainer" : false,
    "isPrimitiveType" : false,
    "isEnum" : false
  }
}, {
  "schema" : {
    "type" : "object",
    "properties" : {
      "status" : {
        "type" : "string",
        "example" : "ok"
      },
      "status_text" : {
        "type" : "string",
        "example" : "The command completed successfully."
      }
    }
  },
  "importPath" : "Interserver\\Mailbaby\\Model.GenericResponse",
  "model" : {
    "vendorExtensions" : {
      "x-is-alias" : false,
      "x-is-nullable" : false,
      "x-has-only-read-only" : false,
      "x-has-optional" : true,
      "x-has-vars" : true,
      "x-has-required" : false,
      "x-has-enums" : false
    },
    "name" : "GenericResponse",
    "classname" : "GenericResponse",
    "classVarName" : "genericResponse",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\",\n      \"example\" : \"ok\"\n    },\n    \"status_text\" : {\n      \"type\" : \"string\",\n      \"example\" : \"The command completed successfully.\"\n    }\n  }\n}",
    "dataType" : "object",
    "classFilename" : "GenericResponse",
    "vars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "ok",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"ok\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "status_text",
      "getter" : "getStatusText",
      "setter" : "setStatusText",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "statusText",
      "defaultValueWithParam" : " = data.status_text;",
      "baseType" : "string",
      "example" : "The command completed successfully.",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"The command completed successfully.\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "StatusText",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "ok",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"ok\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "status_text",
      "getter" : "getStatusText",
      "setter" : "setStatusText",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "statusText",
      "defaultValueWithParam" : " = data.status_text;",
      "baseType" : "string",
      "example" : "The command completed successfully.",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"The command completed successfully.\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "StatusText",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "ok",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"ok\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "status_text",
      "getter" : "getStatusText",
      "setter" : "setStatusText",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "statusText",
      "defaultValueWithParam" : " = data.status_text;",
      "baseType" : "string",
      "example" : "The command completed successfully.",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"The command completed successfully.\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "StatusText",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "allVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "ok",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"ok\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "status_text",
      "getter" : "getStatusText",
      "setter" : "setStatusText",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "statusText",
      "defaultValueWithParam" : " = data.status_text;",
      "baseType" : "string",
      "example" : "The command completed successfully.",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"The command completed successfully.\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "StatusText",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ ],
    "emptyVars" : false,
    "isComposedModel" : false,
    "hasVars" : true,
    "hasOnlyReadOnly" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "hasChildren" : false,
    "isInteger" : false,
    "isNumber" : false,
    "hasHeaders" : false,
    "isString" : false,
    "isNumeric" : false,
    "isLong" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isByteArray" : false,
    "isBoolean" : false,
    "isDate" : false,
    "isDateTime" : false,
    "isUuid" : false,
    "isDefault" : false,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isMultipart" : false,
    "isResponseBinary" : false,
    "isResponseFile" : false,
    "isBinary" : false,
    "isFile" : false,
    "isArrayModel" : false,
    "isAlias" : false,
    "isObject" : false,
    "hasInnerObject" : false,
    "isNotContainer" : false,
    "isReadOnly" : false,
    "isNullable" : false,
    "isCollectionFormatMulti" : false,
    "hasMore" : false,
    "isContainer" : false,
    "isPrimitiveType" : false,
    "isEnum" : false
  }
}, {
  "schema" : {
    "type" : "object",
    "properties" : {
      "id" : {
        "type" : "integer",
        "format" : "int64"
      }
    },
    "description" : "Mail Order Details"
  },
  "importPath" : "Interserver\\Mailbaby\\Model.MailLog",
  "model" : {
    "vendorExtensions" : {
      "x-is-alias" : false,
      "x-is-nullable" : false,
      "x-has-only-read-only" : false,
      "x-has-optional" : true,
      "x-has-vars" : true,
      "x-has-required" : false,
      "x-has-enums" : false
    },
    "name" : "MailLog",
    "classname" : "MailLog",
    "description" : "Mail Order Details",
    "classVarName" : "mailLog",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int64\"\n    }\n  },\n  \"description\" : \"Mail Order Details\"\n}",
    "dataType" : "object",
    "classFilename" : "MailLog",
    "unescapedDescription" : "Mail Order Details",
    "vars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-long" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "dataFormat" : "int64",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : true,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-long" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "dataFormat" : "int64",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : true,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-long" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "dataFormat" : "int64",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : true,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "allVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-long" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "dataFormat" : "int64",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : true,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ ],
    "emptyVars" : false,
    "isComposedModel" : false,
    "hasVars" : true,
    "hasOnlyReadOnly" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "hasChildren" : false,
    "isInteger" : false,
    "isNumber" : false,
    "hasHeaders" : false,
    "isString" : false,
    "isNumeric" : false,
    "isLong" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isByteArray" : false,
    "isBoolean" : false,
    "isDate" : false,
    "isDateTime" : false,
    "isUuid" : false,
    "isDefault" : false,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isMultipart" : false,
    "isResponseBinary" : false,
    "isResponseFile" : false,
    "isBinary" : false,
    "isFile" : false,
    "isArrayModel" : false,
    "isAlias" : false,
    "isObject" : false,
    "hasInnerObject" : false,
    "isNotContainer" : false,
    "isReadOnly" : false,
    "isNullable" : false,
    "isCollectionFormatMulti" : false,
    "hasMore" : false,
    "isContainer" : false,
    "isPrimitiveType" : false,
    "isEnum" : false
  }
}, {
  "schema" : {
    "required" : [ "id", "status", "username" ],
    "type" : "object",
    "properties" : {
      "id" : {
        "type" : "integer",
        "example" : 1234
      },
      "status" : {
        "type" : "string",
        "example" : "active"
      },
      "username" : {
        "type" : "string",
        "example" : "mb1234"
      },
      "password" : {
        "type" : "string",
        "example" : "guest123"
      },
      "comment" : {
        "type" : "string",
        "example" : "main mail account"
      }
    }
  },
  "importPath" : "Interserver\\Mailbaby\\Model.MailOrder",
  "model" : {
    "vendorExtensions" : {
      "x-is-alias" : false,
      "x-is-nullable" : false,
      "x-has-only-read-only" : false,
      "x-has-optional" : true,
      "x-has-vars" : true,
      "x-has-required" : true,
      "x-has-enums" : false
    },
    "name" : "MailOrder",
    "classname" : "MailOrder",
    "classVarName" : "mailOrder",
    "modelJson" : "{\n  \"required\" : [ \"id\", \"status\", \"username\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"integer\",\n      \"example\" : 1234\n    },\n    \"status\" : {\n      \"type\" : \"string\",\n      \"example\" : \"active\"\n    },\n    \"username\" : {\n      \"type\" : \"string\",\n      \"example\" : \"mb1234\"\n    },\n    \"password\" : {\n      \"type\" : \"string\",\n      \"example\" : \"guest123\"\n    },\n    \"comment\" : {\n      \"type\" : \"string\",\n      \"example\" : \"main mail account\"\n    }\n  }\n}",
    "dataType" : "object",
    "classFilename" : "MailOrder",
    "vars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-integer" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "example" : "1234",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"example\" : 1234\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : true,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "active",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"active\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "username",
      "getter" : "getUsername",
      "setter" : "setUsername",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "username",
      "defaultValueWithParam" : " = data.username;",
      "baseType" : "string",
      "example" : "mb1234",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"mb1234\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Username",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "password",
      "getter" : "getPassword",
      "setter" : "setPassword",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "password",
      "defaultValueWithParam" : " = data.password;",
      "baseType" : "string",
      "example" : "guest123",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"guest123\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Password",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "comment",
      "getter" : "getComment",
      "setter" : "setComment",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "comment",
      "defaultValueWithParam" : " = data.comment;",
      "baseType" : "string",
      "example" : "main mail account",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"main mail account\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Comment",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "requiredVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-integer" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "example" : "1234",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"example\" : 1234\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : true,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "active",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"active\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "username",
      "getter" : "getUsername",
      "setter" : "setUsername",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "username",
      "defaultValueWithParam" : " = data.username;",
      "baseType" : "string",
      "example" : "mb1234",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"mb1234\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Username",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "optionalVars" : [ {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "password",
      "getter" : "getPassword",
      "setter" : "setPassword",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "password",
      "defaultValueWithParam" : " = data.password;",
      "baseType" : "string",
      "example" : "guest123",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"guest123\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Password",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "comment",
      "getter" : "getComment",
      "setter" : "setComment",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "comment",
      "defaultValueWithParam" : " = data.comment;",
      "baseType" : "string",
      "example" : "main mail account",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"main mail account\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Comment",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-integer" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "example" : "1234",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"example\" : 1234\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : true,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "active",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"active\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "username",
      "getter" : "getUsername",
      "setter" : "setUsername",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "username",
      "defaultValueWithParam" : " = data.username;",
      "baseType" : "string",
      "example" : "mb1234",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"mb1234\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Username",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "password",
      "getter" : "getPassword",
      "setter" : "setPassword",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "password",
      "defaultValueWithParam" : " = data.password;",
      "baseType" : "string",
      "example" : "guest123",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"guest123\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Password",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-is-string" : true
      },
      "baseName" : "comment",
      "getter" : "getComment",
      "setter" : "setComment",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "comment",
      "defaultValueWithParam" : " = data.comment;",
      "baseType" : "string",
      "example" : "main mail account",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"main mail account\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Comment",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : false,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : false,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : false,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    } ],
    "allVars" : [ {
      "vendorExtensions" : {
        "x-is-numeric" : true,
        "x-is-integer" : true,
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true
      },
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int",
      "datatypeWithEnum" : "int",
      "name" : "id",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int",
      "example" : "1234",
      "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"example\" : 1234\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Id",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : true,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : false,
      "isNumeric" : true,
      "isLong" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isByteArray" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isDefault" : false,
      "isMapContainer" : false,
      "isListContainer" : false,
      "isMultipart" : false,
      "isResponseBinary" : false,
      "isResponseFile" : false,
      "isBinary" : false,
      "isFile" : false,
      "isArrayModel" : false,
      "isAlias" : false,
      "isObject" : false,
      "hasInnerObject" : false,
      "isNotContainer" : true,
      "isReadOnly" : false,
      "isNullable" : false,
      "isCollectionFormatMulti" : false,
      "hasMore" : true,
      "isContainer" : false,
      "isPrimitiveType" : true,
      "isEnum" : false
    }, {
      "vendorExtensions" : {
        "x-is-nullable" : false,
        "x-is-not-container" : true,
        "x-is-primitive-type" : true,
        "x-has-more" : true,
        "x-has-more-non-read-only" : true,
        "x-is-string" : true
      },
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "datatype" : "string",
      "datatypeWithEnum" : "string",
      "name" : "status",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "string",
      "example" : "active",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"example\" : \"active\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "secondaryParam" : false,
      "nullable" : false,
      "nameInCamelCase" : "Status",
      "iexclusiveMaximum" : false,
      "moreNonReadOnly" : true,
      "isInteger" : false,
      "isNumber" : false,
      "hasHeaders" : false,
      "isString" : true,
      "isNumeric" : fals