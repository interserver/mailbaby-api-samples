extends Resource
class_name MailStatsTypeVolumeTo

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# MailStatsTypeVolumeTo Model


# Required: False
# isArray: false
@export var clientAtdomainPeriodcom: int:
	set(value):
		__clientAtdomainPeriodcom__was__set = true
		clientAtdomainPeriodcom = value
var __clientAtdomainPeriodcom__was__set := false

# Required: False
# isArray: false
@export var userAtsitePeriodnet: int:
	set(value):
		__userAtsitePeriodnet__was__set = true
		userAtsitePeriodnet = value
var __userAtsitePeriodnet__was__set := false

# Required: False
# isArray: false
@export var salesAtcompanyPeriodcom: int:
	set(value):
		__salesAtcompanyPeriodcom__was__set = true
		salesAtcompanyPeriodcom = value
var __salesAtcompanyPeriodcom__was__set := false

# Required: False
# isArray: false
@export var clientAtanothersitePeriodcom: int:
	set(value):
		__clientAtanothersitePeriodcom__was__set = true
		clientAtanothersitePeriodcom = value
var __clientAtanothersitePeriodcom__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__clientAtdomainPeriodcom__was__set:
		bzz_dictionary["clientAtdomainPeriodcom"] = self.clientAtdomainPeriodcom
	if self.__userAtsitePeriodnet__was__set:
		bzz_dictionary["userAtsitePeriodnet"] = self.userAtsitePeriodnet
	if self.__salesAtcompanyPeriodcom__was__set:
		bzz_dictionary["salesAtcompanyPeriodcom"] = self.salesAtcompanyPeriodcom
	if self.__clientAtanothersitePeriodcom__was__set:
		bzz_dictionary["clientAtanothersitePeriodcom"] = self.clientAtanothersitePeriodcom
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("clientAtdomainPeriodcom"):
		me.clientAtdomainPeriodcom = from_dict["clientAtdomainPeriodcom"]
	if from_dict.has("userAtsitePeriodnet"):
		me.userAtsitePeriodnet = from_dict["userAtsitePeriodnet"]
	if from_dict.has("salesAtcompanyPeriodcom"):
		me.salesAtcompanyPeriodcom = from_dict["salesAtcompanyPeriodcom"]
	if from_dict.has("clientAtanothersitePeriodcom"):
		me.clientAtanothersitePeriodcom = from_dict["clientAtanothersitePeriodcom"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

