--  Mail Baby API
--  This is an API defintion for accesssing the Mail.Baby mail service.
--
--  The version of the OpenAPI document: 1.0.0
--  Contact: detain@interserver.net
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.1.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  Gets mail order information by id
   --  returns information about a mail order in the system with the given id.
   procedure Get_Mail_By_Id
      (Client : in out Client_Type;
       Id : in Swagger.Long;
       Result : out .Models.MailOrder_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/mail/{id}");
      URI.Set_Path_Param ("id", Swagger.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Mail_By_Id;

   --  displays a list of mail service orders
   procedure Get_Mail_Orders
      (Client : in out Client_Type;
       Result : out .Models.MailOrder_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.APPLICATION_XML,
                          Swagger.Clients.TEXT_PLAIN));

      URI.Set_Path ("/mail");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Mail_Orders;

   --  Checks if the server is running
   procedure Ping_Server
      (Client : in out Client_Type) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/ping");
      Client.Call (Swagger.Clients.GET, URI);
   end Ping_Server;

   --  places a mail order
   --  Adds an item to the system
   procedure Place_Mail_Order
      (Client : in out Client_Type;
       Mail_Order_Type : in .Models.MailOrder_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", Mail_Order_Type);

      URI.Set_Path ("/mail/order");
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Place_Mail_Order;

   --  Sends an Email with Advanced Options
   --  Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
   procedure Send_Adv_Mail_By_Id
      (Client : in out Client_Type;
       Id : in Swagger.Long;
       Send_Mail_Type : in .Models.SendMail_Type;
       Result : out .Models.GenericResponse_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (Swagger.Clients.APPLICATION_JSON,
                               Swagger.Clients.APPLICATION_XML,
                               Swagger.Clients.APPLICATION_X_WWW_FORM_URLENCODED,
                               Swagger.Clients.TEXT_PLAIN));
      .Models.Serialize (Req.Stream, "", Send_Mail_Type);

      URI.Set_Path ("/mail/{id}/advsend");
      URI.Set_Path_Param ("id", Swagger.To_String (Id));
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Send_Adv_Mail_By_Id;

   --  Sends an Email
   --  Sends An email through one of your mail orders.
   procedure Send_Mail_By_Id
      (Client : in out Client_Type;
       Id : in Swagger.Long;
       Subject : in Swagger.Nullable_UString;
       P_Body : in Swagger.Nullable_UString;
       To : in Swagger.Nullable_UString;
       To_Name : in Swagger.Nullable_UString;
       From : in Swagger.Nullable_UString;
       From_Name : in Swagger.Nullable_UString;
       Result : out .Models.GenericResponse_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("subject", Subject);
      URI.Add_Param ("body", P_Body);
      URI.Add_Param ("to", To);
      URI.Add_Param ("toName", To_Name);
      URI.Add_Param ("from", From);
      URI.Add_Param ("fromName", From_Name);
      URI.Set_Path ("/mail/{id}/send");
      URI.Set_Path_Param ("id", Swagger.To_String (Id));
      Client.Call (Swagger.Clients.POST, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Send_Mail_By_Id;

   --  validatess order details before placing an order
   procedure Validate_Mail_Order
      (Client : in out Client_Type) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/mail/order");
      Client.Call (Swagger.Clients.GET, URI);
   end Validate_Mail_Order;

   --  displays the mail log
   --  By passing in the appropriate options, you can search for
   --  available inventory in the system
   procedure View_Mail_Log_By_Id
      (Client : in out Client_Type;
       Id : in Swagger.Long;
       Search_String : in Swagger.Nullable_UString;
       Skip : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Result : out .Models.MailLog_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("searchString", Search_String);
      URI.Add_Param ("skip", Skip);
      URI.Add_Param ("limit", Limit);
      URI.Set_Path ("/mail/{id}/log");
      URI.Set_Path_Param ("id", Swagger.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end View_Mail_Log_By_Id;
end .Clients;
