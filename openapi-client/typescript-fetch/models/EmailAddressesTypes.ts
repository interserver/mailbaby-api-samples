/* tslint:disable */
/* eslint-disable */
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @type EmailAddressesTypes
 * 
 * @export
 */
export type EmailAddressesTypes = Array<EmailAddressName> | string;

export function EmailAddressesTypesFromJSON(json: any): EmailAddressesTypes {
    return EmailAddressesTypesFromJSONTyped(json, false);
}

export function EmailAddressesTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailAddressesTypes {
    if (json == null) {
        return json;
    }
    if (instanceOfArray<EmailAddressName>(json)) {
        return Array<EmailAddressName>FromJSONTyped(json, true);
    }
    if (instanceOfstring(json)) {
        return stringFromJSONTyped(json, true);
    }

    return {} as any;
}

export function EmailAddressesTypesToJSON(value?: EmailAddressesTypes | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfArray<EmailAddressName>(value)) {
        return Array<EmailAddressName>ToJSON(value as Array<EmailAddressName>);
    }
    if (instanceOfstring(value)) {
        return stringToJSON(value as string);
    }

    return {};
}

