//
// SendMailAdv.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details for an Email */
open class SendMailAdv: JSONEncodable {
    /** The subject or title of the email */
    public var subject: String?
    /** The main email contents. */
    public var body: String?
    public var from: SendMailAdvFrom?
    /** A list of destionation email addresses to send this to */
    public var to: [SendMailAdvTo]?
    /** (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address. */
    public var replyto: [SendMailAdvReplyto]?
    /** (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well. */
    public var cc: [SendMailAdvCc]?
    /** (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list. */
    public var bcc: [SendMailAdvBcc]?
    /** (optional) File attachments to include in the email.  The file contents must be base64 encoded! */
    public var attachments: [SendMailAdvAttachments]?
    /** (optional)  ID of the Mail order within our system to use as the Mail Account. */
    public var id: Int64?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["subject"] = self.subject
        nillableDictionary["body"] = self.body
        nillableDictionary["from"] = self.from?.encodeToJSON()
        nillableDictionary["to"] = self.to?.encodeToJSON()
        nillableDictionary["replyto"] = self.replyto?.encodeToJSON()
        nillableDictionary["cc"] = self.cc?.encodeToJSON()
        nillableDictionary["bcc"] = self.bcc?.encodeToJSON()
        nillableDictionary["attachments"] = self.attachments?.encodeToJSON()
        nillableDictionary["id"] = self.id?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
