/*
MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.1.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MailStatsTypeVolumeIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailStatsTypeVolumeIp{}

// MailStatsTypeVolumeIp struct for MailStatsTypeVolumeIp
type MailStatsTypeVolumeIp struct {
	Var1111 *int32 `json:"1.1.1.1,omitempty"`
	Var2222 *int32 `json:"2.2.2.2,omitempty"`
	Var3333 *int32 `json:"3.3.3.3,omitempty"`
	Var4444 *int32 `json:"4.4.4.4,omitempty"`
}

// NewMailStatsTypeVolumeIp instantiates a new MailStatsTypeVolumeIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailStatsTypeVolumeIp() *MailStatsTypeVolumeIp {
	this := MailStatsTypeVolumeIp{}
	return &this
}

// NewMailStatsTypeVolumeIpWithDefaults instantiates a new MailStatsTypeVolumeIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailStatsTypeVolumeIpWithDefaults() *MailStatsTypeVolumeIp {
	this := MailStatsTypeVolumeIp{}
	return &this
}

// GetVar1111 returns the Var1111 field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeIp) GetVar1111() int32 {
	if o == nil || IsNil(o.Var1111) {
		var ret int32
		return ret
	}
	return *o.Var1111
}

// GetVar1111Ok returns a tuple with the Var1111 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeIp) GetVar1111Ok() (*int32, bool) {
	if o == nil || IsNil(o.Var1111) {
		return nil, false
	}
	return o.Var1111, true
}

// HasVar1111 returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeIp) HasVar1111() bool {
	if o != nil && !IsNil(o.Var1111) {
		return true
	}

	return false
}

// SetVar1111 gets a reference to the given int32 and assigns it to the Var1111 field.
func (o *MailStatsTypeVolumeIp) SetVar1111(v int32) {
	o.Var1111 = &v
}

// GetVar2222 returns the Var2222 field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeIp) GetVar2222() int32 {
	if o == nil || IsNil(o.Var2222) {
		var ret int32
		return ret
	}
	return *o.Var2222
}

// GetVar2222Ok returns a tuple with the Var2222 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeIp) GetVar2222Ok() (*int32, bool) {
	if o == nil || IsNil(o.Var2222) {
		return nil, false
	}
	return o.Var2222, true
}

// HasVar2222 returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeIp) HasVar2222() bool {
	if o != nil && !IsNil(o.Var2222) {
		return true
	}

	return false
}

// SetVar2222 gets a reference to the given int32 and assigns it to the Var2222 field.
func (o *MailStatsTypeVolumeIp) SetVar2222(v int32) {
	o.Var2222 = &v
}

// GetVar3333 returns the Var3333 field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeIp) GetVar3333() int32 {
	if o == nil || IsNil(o.Var3333) {
		var ret int32
		return ret
	}
	return *o.Var3333
}

// GetVar3333Ok returns a tuple with the Var3333 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeIp) GetVar3333Ok() (*int32, bool) {
	if o == nil || IsNil(o.Var3333) {
		return nil, false
	}
	return o.Var3333, true
}

// HasVar3333 returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeIp) HasVar3333() bool {
	if o != nil && !IsNil(o.Var3333) {
		return true
	}

	return false
}

// SetVar3333 gets a reference to the given int32 and assigns it to the Var3333 field.
func (o *MailStatsTypeVolumeIp) SetVar3333(v int32) {
	o.Var3333 = &v
}

// GetVar4444 returns the Var4444 field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeIp) GetVar4444() int32 {
	if o == nil || IsNil(o.Var4444) {
		var ret int32
		return ret
	}
	return *o.Var4444
}

// GetVar4444Ok returns a tuple with the Var4444 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeIp) GetVar4444Ok() (*int32, bool) {
	if o == nil || IsNil(o.Var4444) {
		return nil, false
	}
	return o.Var4444, true
}

// HasVar4444 returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeIp) HasVar4444() bool {
	if o != nil && !IsNil(o.Var4444) {
		return true
	}

	return false
}

// SetVar4444 gets a reference to the given int32 and assigns it to the Var4444 field.
func (o *MailStatsTypeVolumeIp) SetVar4444(v int32) {
	o.Var4444 = &v
}

func (o MailStatsTypeVolumeIp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailStatsTypeVolumeIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var1111) {
		toSerialize["1.1.1.1"] = o.Var1111
	}
	if !IsNil(o.Var2222) {
		toSerialize["2.2.2.2"] = o.Var2222
	}
	if !IsNil(o.Var3333) {
		toSerialize["3.3.3.3"] = o.Var3333
	}
	if !IsNil(o.Var4444) {
		toSerialize["4.4.4.4"] = o.Var4444
	}
	return toSerialize, nil
}

type NullableMailStatsTypeVolumeIp struct {
	value *MailStatsTypeVolumeIp
	isSet bool
}

func (v NullableMailStatsTypeVolumeIp) Get() *MailStatsTypeVolumeIp {
	return v.value
}

func (v *NullableMailStatsTypeVolumeIp) Set(val *MailStatsTypeVolumeIp) {
	v.value = val
	v.isSet = true
}

func (v NullableMailStatsTypeVolumeIp) IsSet() bool {
	return v.isSet
}

func (v *NullableMailStatsTypeVolumeIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailStatsTypeVolumeIp(val *MailStatsTypeVolumeIp) *NullableMailStatsTypeVolumeIp {
	return &NullableMailStatsTypeVolumeIp{value: val, isSet: true}
}

func (v NullableMailStatsTypeVolumeIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailStatsTypeVolumeIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


