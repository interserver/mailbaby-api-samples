/**
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MailAttachment from './MailAttachment';
import MailContact from './MailContact';

/**
* The SendMail model module.
* @module model/SendMail
* @version 1.0.0
*/
export default class SendMail {
    /**
    * Constructs a new <code>SendMail</code>.
    * Details for an Email
    * @alias module:model/SendMail
    * @class
    * @param id {Number} The ID of the Mail order within our system to use as the Mail Account.
    * @param from {module:model/MailContact} 
    * @param to {Array.<module:model/MailContact>} The Contact whom is the primary recipient of this email.
    * @param subject {String} The subject or title of the email
    * @param body {String} The main email contents.
    */

    constructor(id, from, to, subject, body) {
        
        
        this['id'] = id;
        this['from'] = from;
        this['to'] = to;
        this['subject'] = subject;
        this['body'] = body;
        
    }

    /**
    * Constructs a <code>SendMail</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SendMail} obj Optional instance to populate.
    * @return {module:model/SendMail} The populated <code>SendMail</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendMail();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = MailContact.constructFromObject(data['from']);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], [MailContact]);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('replyto')) {
                obj['replyto'] = ApiClient.convertToType(data['replyto'], [MailContact]);
            }
            if (data.hasOwnProperty('cc')) {
                obj['cc'] = ApiClient.convertToType(data['cc'], [MailContact]);
            }
            if (data.hasOwnProperty('bcc')) {
                obj['bcc'] = ApiClient.convertToType(data['bcc'], [MailContact]);
            }
            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ApiClient.convertToType(data['attachments'], [MailAttachment]);
            }
        }
        return obj;
    }

    /**
    * The ID of the Mail order within our system to use as the Mail Account.
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * @member {module:model/MailContact} from
    */
    'from' = undefined;
    /**
    * The Contact whom is the primary recipient of this email.
    * @member {Array.<module:model/MailContact>} to
    */
    'to' = undefined;
    /**
    * The subject or title of the email
    * @member {String} subject
    */
    'subject' = undefined;
    /**
    * The main email contents.
    * @member {String} body
    */
    'body' = undefined;
    /**
    * Optional list of Contacts that specify where replies to the email should be sent instead of the _from_ address.
    * @member {Array.<module:model/MailContact>} replyto
    */
    'replyto' = undefined;
    /**
    * Optional list of Contacts that should receive copies of the email.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
    * @member {Array.<module:model/MailContact>} cc
    */
    'cc' = undefined;
    /**
    * Optional list of Contacts that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
    * @member {Array.<module:model/MailContact>} bcc
    */
    'bcc' = undefined;
    /**
    * Optional file attachments to include in the email
    * @member {Array.<module:model/MailAttachment>} attachments
    */
    'attachments' = undefined;




}
