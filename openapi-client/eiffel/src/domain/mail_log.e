note
 description:"[
		MailBaby Email Delivery API
 		**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
  		The version of the OpenAPI document: 1.1.0
 	    Contact: support@interserver.net

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MAIL_LOG




feature --Access

 	total: INTEGER_32
    	 -- total number of mail log entries
 	skip: INTEGER_32
    	 -- number of emails skipped in listing
 	limit: INTEGER_32
    	 -- number of emails to return
    emails: detachable LIST [MAIL_LOG_ENTRY]
      

feature -- Change Element

    set_total (a_name: like total)
        -- Set 'total' with 'a_name'.
      do
        total := a_name
      ensure
        total_set: total = a_name
      end

    set_skip (a_name: like skip)
        -- Set 'skip' with 'a_name'.
      do
        skip := a_name
      ensure
        skip_set: skip = a_name
      end

    set_limit (a_name: like limit)
        -- Set 'limit' with 'a_name'.
      do
        limit := a_name
      ensure
        limit_set: limit = a_name
      end

    set_emails (a_name: like emails)
        -- Set 'emails' with 'a_name'.
      do
        emails := a_name
      ensure
        emails_set: emails = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MAIL_LOG%N")
        if attached total as l_total then
          Result.append ("%Ntotal:")
          Result.append (l_total.out)
          Result.append ("%N")
        end
        if attached skip as l_skip then
          Result.append ("%Nskip:")
          Result.append (l_skip.out)
          Result.append ("%N")
        end
        if attached limit as l_limit then
          Result.append ("%Nlimit:")
          Result.append (l_limit.out)
          Result.append ("%N")
        end
        if attached emails as l_emails then
          across l_emails as ic loop
            Result.append ("%N emails:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

