# NOTE: This file is auto generated by OpenAPI Generator 8.0.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MailBabyEmailDeliveryAndManagementServiceAPI.Api.Sending do
  @moduledoc """
  API calls for all endpoints tagged `Sending`.
  """

  alias MailBabyEmailDeliveryAndManagementServiceAPI.Connection
  import MailBabyEmailDeliveryAndManagementServiceAPI.RequestBuilder

  @doc """
  Sends an Email with Advanced Options
  Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.  Here are 9 examples showing the various ways to call the advsend operation showing the different ways you can pass the to, cc, bcc, and replyto information. The first several examples are all for the application/x-www-form-urlencoded content-type while the later ones are for application/json content-types.  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=user@domain.com \\ --data to=support@interserver.net ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=user@domain.com \\ --data \"to[0][name]=Joe\" \\ --data \"to[0][email]=support@interserver.net\" ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=\"Joe <user@domain.com>\" \\ --data to=\"Joe <support@interserver.net>\" ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=user@domain.com \\ --data \"to=support@interserver.net, support@interserver.net\" ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=user@domain.com \\ --data \"to=Joe <support@interserver.net>, Joe <support@interserver.net>\" ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data 'subject=Welcome' \\ --data 'body=Hello' \\ --data from=user@domain.com \\ --data \"to[0][name]=Joe\" \\ --data \"to[0][email]=support@interserver.net\" \\ --data \"to[1][name]=Joe\" \\ --data \"to[1][email]=support@interserver.net\" ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/json' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data '{ \"subject\": \"Welcome\", \"body\": \"Hello\", \"from\": \"user@domain.com\", \"to\": \"support@interserver.net\" }' ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/json' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data '{ \"subject\": \"Welcome\", \"body\": \"Hello\", \"from\": {\"name\": \"Joe\", \"email\": \"user@domain.com\"}, \"to\": [{\"name\": \"Joe\", \"email\": \"support@interserver.net\"}] }' ```  ``` curl -i --request POST --url https://api.mailbaby.net/mail/advsend \\ --header 'Accept: application/json' \\ --header 'Content-Type: application/json' \\ --header 'X-API-KEY: YOUR_API_KEY' \\ --data '{ \"subject\": \"Welcome\", \"body\": \"Hello\", \"from\": \"Joe <user@domain.com>\", \"to\": \"Joe <support@interserver.net>\" }' ``` 

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `subject` (String.t): The subject or title of the email
  - `body` (String.t): The main email contents.
  - `from` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressTypes.t): 
  - `to` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressesTypes.t): 
  - `opts` (keyword): Optional parameters
    - `:replyto` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressesTypes.t): 
    - `:cc` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressesTypes.t): 
    - `:bcc` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressesTypes.t): 
    - `:attachments` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailAttachment.t]): (optional) File attachments to include in the email.  The file contents must be base64 encoded!
    - `:id` (integer()): (optional)  ID of the Mail order within our system to use as the Mail Account.

  ### Returns

  - `{:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec send_adv_mail(Tesla.Env.client, String.t, String.t, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressTypes.t, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressesTypes.t, keyword()) :: {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage.t} | {:error, Tesla.Env.t}
  def send_adv_mail(connection, subject, body, from, to, opts \\ []) do
    optional_params = %{
      :replyto => :form,
      :cc => :form,
      :bcc => :form,
      :attachments => :form,
      :id => :form
    }

    request =
      %{}
      |> method(:post)
      |> url("/mail/advsend")
      |> add_param(:form, :subject, subject)
      |> add_param(:form, :body, body)
      |> add_param(:form, :from, from)
      |> add_param(:form, :to, to)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse},
      {400, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage},
      {401, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage},
      {404, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage}
    ])
  end

  @doc """
  Sends an Email
  Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `to` (String.t): The Contact whom is the primary recipient of this email.
  - `from` (String.t): The contact whom is the this email is from.
  - `subject` (String.t): The subject or title of the email
  - `body` (String.t): The main email contents.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec send_mail(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage.t} | {:error, Tesla.Env.t}
  def send_mail(connection, to, from, subject, body, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/mail/send")
      |> add_param(:form, :to, to)
      |> add_param(:form, :from, from)
      |> add_param(:form, :subject, subject)
      |> add_param(:form, :body, body)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse},
      {400, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage},
      {401, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage},
      {404, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage}
    ])
  end
end
