/*
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.SendMailAdvAttachments;
import io.swagger.model.SendMailAdvBcc;
import io.swagger.model.SendMailAdvCc;
import io.swagger.model.SendMailAdvFrom;
import io.swagger.model.SendMailAdvReplyto;
import io.swagger.model.SendMailAdvTo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Details for an Email
 */
@Schema(description = "Details for an Email")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2023-01-10T22:49:59.262341-05:00[America/New_York]")public class SendMailAdv   {
  @JsonProperty("subject")
  private String subject = null;

  @JsonProperty("body")
  private String body = null;

  @JsonProperty("from")
  private SendMailAdvFrom from = null;

  @JsonProperty("to")
  private List<SendMailAdvTo> to = new ArrayList<SendMailAdvTo>();

  @JsonProperty("replyto")
  private List<SendMailAdvReplyto> replyto = null;

  @JsonProperty("cc")
  private List<SendMailAdvCc> cc = null;

  @JsonProperty("bcc")
  private List<SendMailAdvBcc> bcc = null;

  @JsonProperty("attachments")
  private List<SendMailAdvAttachments> attachments = null;

  @JsonProperty("id")
  private Long id = null;

  public SendMailAdv subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * The subject or title of the email
   * @return subject
   **/
  @JsonProperty("subject")
  @Schema(example = "Your Package has been Delivered!", required = true, description = "The subject or title of the email")
  @NotNull
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public SendMailAdv body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The main email contents.
   * @return body
   **/
  @JsonProperty("body")
  @Schema(example = "The package you ordered on 2021-01-23 has been delivered. If the package is broken into many pieces, please blaim someone else.", required = true, description = "The main email contents.")
  @NotNull
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public SendMailAdv from(SendMailAdvFrom from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   **/
  @JsonProperty("from")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public SendMailAdvFrom getFrom() {
    return from;
  }

  public void setFrom(SendMailAdvFrom from) {
    this.from = from;
  }

  public SendMailAdv to(List<SendMailAdvTo> to) {
    this.to = to;
    return this;
  }

  public SendMailAdv addToItem(SendMailAdvTo toItem) {
    this.to.add(toItem);
    return this;
  }

  /**
   * A list of destionation email addresses to send this to
   * @return to
   **/
  @JsonProperty("to")
  @Schema(required = true, description = "A list of destionation email addresses to send this to")
  @NotNull
  @Valid
  public List<SendMailAdvTo> getTo() {
    return to;
  }

  public void setTo(List<SendMailAdvTo> to) {
    this.to = to;
  }

  public SendMailAdv replyto(List<SendMailAdvReplyto> replyto) {
    this.replyto = replyto;
    return this;
  }

  public SendMailAdv addReplytoItem(SendMailAdvReplyto replytoItem) {
    if (this.replyto == null) {
      this.replyto = new ArrayList<SendMailAdvReplyto>();
    }
    this.replyto.add(replytoItem);
    return this;
  }

  /**
   * (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
   * @return replyto
   **/
  @JsonProperty("replyto")
  @Schema(description = "(optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.")
  @Valid
  public List<SendMailAdvReplyto> getReplyto() {
    return replyto;
  }

  public void setReplyto(List<SendMailAdvReplyto> replyto) {
    this.replyto = replyto;
  }

  public SendMailAdv cc(List<SendMailAdvCc> cc) {
    this.cc = cc;
    return this;
  }

  public SendMailAdv addCcItem(SendMailAdvCc ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<SendMailAdvCc>();
    }
    this.cc.add(ccItem);
    return this;
  }

  /**
   * (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
   * @return cc
   **/
  @JsonProperty("cc")
  @Schema(description = "(optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.")
  @Valid
  public List<SendMailAdvCc> getCc() {
    return cc;
  }

  public void setCc(List<SendMailAdvCc> cc) {
    this.cc = cc;
  }

  public SendMailAdv bcc(List<SendMailAdvBcc> bcc) {
    this.bcc = bcc;
    return this;
  }

  public SendMailAdv addBccItem(SendMailAdvBcc bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<SendMailAdvBcc>();
    }
    this.bcc.add(bccItem);
    return this;
  }

  /**
   * (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
   * @return bcc
   **/
  @JsonProperty("bcc")
  @Schema(description = "(optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.")
  @Valid
  public List<SendMailAdvBcc> getBcc() {
    return bcc;
  }

  public void setBcc(List<SendMailAdvBcc> bcc) {
    this.bcc = bcc;
  }

  public SendMailAdv attachments(List<SendMailAdvAttachments> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SendMailAdv addAttachmentsItem(SendMailAdvAttachments attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<SendMailAdvAttachments>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * (optional) File attachments to include in the email.  The file contents must be base64 encoded!
   * @return attachments
   **/
  @JsonProperty("attachments")
  @Schema(description = "(optional) File attachments to include in the email.  The file contents must be base64 encoded!")
  @Valid
  public List<SendMailAdvAttachments> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<SendMailAdvAttachments> attachments) {
    this.attachments = attachments;
  }

  public SendMailAdv id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * (optional)  ID of the Mail order within our system to use as the Mail Account.
   * @return id
   **/
  @JsonProperty("id")
  @Schema(example = "5000", description = "(optional)  ID of the Mail order within our system to use as the Mail Account.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendMailAdv sendMailAdv = (SendMailAdv) o;
    return Objects.equals(this.subject, sendMailAdv.subject) &&
        Objects.equals(this.body, sendMailAdv.body) &&
        Objects.equals(this.from, sendMailAdv.from) &&
        Objects.equals(this.to, sendMailAdv.to) &&
        Objects.equals(this.replyto, sendMailAdv.replyto) &&
        Objects.equals(this.cc, sendMailAdv.cc) &&
        Objects.equals(this.bcc, sendMailAdv.bcc) &&
        Objects.equals(this.attachments, sendMailAdv.attachments) &&
        Objects.equals(this.id, sendMailAdv.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, body, from, to, replyto, cc, bcc, attachments, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendMailAdv {\n");
    
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    replyto: ").append(toIndentedString(replyto)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
