/*
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.GenericResponse;
import org.openapitools.model.GetMailOrders200ResponseInner;
import org.openapitools.model.GetMailOrders401Response;
import org.openapitools.model.MailLog;
import org.openapitools.model.SendMailAdv;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2023-05-09T00:49:41.503062-04:00[America/New_York]")
@Client("${openapi-micronaut-client-base-path}")
public interface DefaultApi {
    /**
     * displays a list of mail service orders
     *
     * @return List&lt;GetMailOrders200ResponseInner&gt;
     */
    @Get(uri="/mail")
    @Consumes({"application/json"})
    Mono<List<GetMailOrders200ResponseInner>> getMailOrders();

    /**
     * Checks if the server is running
     *
     */
    @Get(uri="/ping")
    Mono<Void> pingServer();

    /**
     * Sends an Email with Advanced Options
     * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
     *
     * @param sendMailAdv  (required)
     * @return GenericResponse
     */
    @Post(uri="/mail/advsend")
    @Consumes({"application/json"})
    @Produces({"application/json", "application/x-www-form-urlencoded"})
    Mono<GenericResponse> sendAdvMail(
        @Body @NotNull @Valid SendMailAdv sendMailAdv
    );

    /**
     * Sends an Email
     * Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
     *
     * @param to The Contact whom is the primary recipient of this email. (required)
     * @param from The contact whom is the this email is from. (required)
     * @param subject The subject or title of the email (required)
     * @param _body The main email contents. (required)
     * @return GenericResponse
     */
    @Post(uri="/mail/send")
    @Consumes({"application/json"})
    @Produces({"application/x-www-form-urlencoded", "application/json"})
    Mono<GenericResponse> sendMail(
        @NotNull String to, 
        @NotNull String from, 
        @NotNull String subject, 
        @NotNull String _body
    );

    /**
     * displays the mail log
     * Get a listing of the emails sent through this system 
     *
     * @param id The ID of your mail order this will be sent through. (optional)
     * @param origin originating ip address sending mail (optional)
     * @param mx mx record mail was sent to (optional)
     * @param from from email address (optional)
     * @param to to/destination email address (optional)
     * @param subject subject containing this string (optional)
     * @param mailid mail id (optional)
     * @param skip number of records to skip for pagination (optional, default to 0)
     * @param limit maximum number of records to return (optional, default to 100)
     * @param startDate earliest date to get emails in unix timestamp format (optional)
     * @param endDate earliest date to get emails in unix timestamp format (optional)
     * @return MailLog
     */
    @Get(uri="/mail/log")
    @Consumes({"application/json"})
    Mono<MailLog> viewMailLog(
        @QueryValue(value="id") @Nullable Long id, 
        @QueryValue(value="origin") @Nullable String origin, 
        @QueryValue(value="mx") @Nullable String mx, 
        @QueryValue(value="from") @Nullable String from, 
        @QueryValue(value="to") @Nullable String to, 
        @QueryValue(value="subject") @Nullable String subject, 
        @QueryValue(value="mailid") @Nullable String mailid, 
        @QueryValue(value="skip", defaultValue="0") @Nullable @Min(0) Integer skip, 
        @QueryValue(value="limit", defaultValue="100") @Nullable @Min(1) @Max(10000) Integer limit, 
        @QueryValue(value="startDate") @Nullable @Min(0L) @Max(9999999999L) Long startDate, 
        @QueryValue(value="endDate") @Nullable @Min(0L) @Max(9999999999L) Long endDate
    );

}
