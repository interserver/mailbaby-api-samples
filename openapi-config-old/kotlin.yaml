# Description: source folder for generated code
sourceFolder: src/main/kotlin

# Description: Generated artifact package name.
packageName: org.openapitools.client

# Description: suffix for api classes
apiSuffix: Api

# Description: Generated artifact package's organization (i.e. maven groupId).
groupId: org.openapitools

# Description: Generated artifact id (name of jar).
artifactId: kotlin-client

# Description: Generated artifact's package version.
artifactVersion: 1.0.0

# Description: Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'
enumPropertyNaming: camelCase

# Description: What serialization library to use: 'moshi' (default), or 'gson' or 'jackson'
serializationLibrary: moshi

# Description: toggle "@Parcelize" for generated models
# parcelizeModels: 

# Description: boolean - toggle "implements Serializable" for generated models
# serializableModel: 

# Description: Sort method arguments to place required parameters before optional parameters.
# sortParamsByRequiredFlag: 

# Description: Sort model properties to place required parameters before optional parameters.
# sortModelPropertiesByRequiredFlag: 

# Description: Create mutable models
modelMutable: false

# Description: Option. Date library to use
# Available Values:
#    threetenbp-localdatetime
#         Threetenbp - Backport of JSR310 (jvm only, for legacy app only)
#    string
#         String
#    java8-localdatetime
#         Java 8 native JSR310 (jvm only, for legacy app only)
#    java8
#         Java 8 native JSR310 (jvm only, preferred for jdk 1.8+)
#    threetenbp
#         Threetenbp - Backport of JSR310 (jvm only, preferred for jdk < 1.8)
dateLibrary: java8

# Description: Option. Collection type to use
# Available Values:
#    array
#         kotlin.Array
#    list
#         kotlin.collections.List
collectionType: list

# Description: Library template (sub-template) to use
# Available Values:
#    jvm-okhttp4
#         [DEFAULT] Platform: Java Virtual Machine. HTTP client: OkHttp 4.2.0 (Android 5.0+ and Java 8+). JSON processing: Moshi 1.8.0.
#    jvm-okhttp3
#         Platform: Java Virtual Machine. HTTP client: OkHttp 3.12.4 (Android 2.3+ and Java 7+). JSON processing: Moshi 1.8.0.
#    jvm-retrofit2
#         Platform: Java Virtual Machine. HTTP client: Retrofit 2.6.2.
#    multiplatform
#         Platform: Kotlin multiplatform. HTTP client: Ktor 1.2.4. JSON processing: Kotlinx Serialization: 0.12.0.
library: jvm-okhttp4

# Description: JVM-Option. Defines in how to handle date-time objects that are used for a request (as query or parameter)
# Available Values:
#    toJson
#         [DEFAULT] Date formater option using a json converter.
#    toString
#         Use the 'toString'-method of the date-time object to retrieve the related string representation.
requestDateConverter: toJson

# Description: Whether to use the RxJava adapter with the retrofit2 library.
useRxJava: false

# Description: Whether to use the RxJava2 adapter with the retrofit2 library.
useRxJava2: false

# Description: Whether to use the RxJava3 adapter with the retrofit2 library.
useRxJava3: false

# Description: Whether to use the Coroutines adapter with the retrofit2 library.
useCoroutines: false

