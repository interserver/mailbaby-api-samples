/*
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 5.1.1-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://virtserver.swaggerhub.com/InterServer/MailBaby/1.0.0";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/ping", () => {
        let url = BASE_URL + `/ping`;
        // Request No. 1
        let request = http.get(url);
        check(request, {
            "Server is up and running": (r) => r.status === 200
        });
        check(request, {
            "Something is wrong": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
    group("/mail", () => {
        let id = "TODO_EDIT_THE_ID";
        let url = BASE_URL + `/mail?id=${id}`;
        // Request No. 1
        let request = http.get(url);
        check(request, {
            "OK": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
    group("/mail/send", () => {
        let url = BASE_URL + `/mail/send`;
        // Request No. 1
        // TODO: edit the parameters of the request body.
        let body = {"to": "string", "from": "string", "subject": "string", "body": "string"};
        let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
        let request = http.post(url, body, params);
        check(request, {
            "search results matching criteria": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
    group("/mail/advsend", () => {
        let url = BASE_URL + `/mail/advsend`;
        // Request No. 1
        // TODO: edit the parameters of the request body.
        let body = {"subject": "string", "body": "string", "from": [{"email": "string", "name": "string"}], "to": [{"email": "string", "name": "string"}], "id": "long", "replyto": [{"email": "string", "name": "string"}], "cc": [{"email": "string", "name": "string"}], "bcc": [{"email": "string", "name": "string"}], "attachments": [{"data": "file", "filename": "string"}]};
        let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
        let request = http.post(url, body, params);
        check(request, {
            "search results matching criteria": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
    group("/mail/log", () => {
        let searchString = "TODO_EDIT_THE_SEARCHSTRING";
        let limit = "TODO_EDIT_THE_LIMIT";
        let skip = "TODO_EDIT_THE_SKIP";
        let id = "TODO_EDIT_THE_ID";
        let url = BASE_URL + `/mail/log?id=${id}&searchString=${searchString}&skip=${skip}&limit=${limit}`;
        // Request No. 1
        let request = http.get(url);
        check(request, {
            "search results matching criteria": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
    group("/mail/order", () => {
        let url = BASE_URL + `/mail/order`;
        // Request No. 1
        let request = http.get(url);
        check(request, {
            "list of mail orders": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);

        // Request No. 2
        // TODO: edit the parameters of the request body.
        body = {"id": "integer", "status": "string", "username": "string", "password": "string", "comment": "string"};
        params = {headers: {"Content-Type": "application/json"}};
        request = http.post(url, body, params);
        check(request, {
            "list of mail orders": (r) => r.status === 200
        });
        sleep(SLEEP_DURATION);
    });
}
