/*
MailBaby Email Delivery API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.0.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SendMailAdvBccInner An Email Contact
type SendMailAdvBccInner struct {
	// The email address
	Email string `json:"email"`
	// (optional) Name to use for the BCC contact.
	Name *string `json:"name,omitempty"`
}

// NewSendMailAdvBccInner instantiates a new SendMailAdvBccInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMailAdvBccInner(email string) *SendMailAdvBccInner {
	this := SendMailAdvBccInner{}
	this.Email = email
	return &this
}

// NewSendMailAdvBccInnerWithDefaults instantiates a new SendMailAdvBccInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMailAdvBccInnerWithDefaults() *SendMailAdvBccInner {
	this := SendMailAdvBccInner{}
	return &this
}

// GetEmail returns the Email field value
func (o *SendMailAdvBccInner) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SendMailAdvBccInner) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SendMailAdvBccInner) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SendMailAdvBccInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMailAdvBccInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SendMailAdvBccInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SendMailAdvBccInner) SetName(v string) {
	o.Name = &v
}

func (o SendMailAdvBccInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableSendMailAdvBccInner struct {
	value *SendMailAdvBccInner
	isSet bool
}

func (v NullableSendMailAdvBccInner) Get() *SendMailAdvBccInner {
	return v.value
}

func (v *NullableSendMailAdvBccInner) Set(val *SendMailAdvBccInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMailAdvBccInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMailAdvBccInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMailAdvBccInner(val *SendMailAdvBccInner) *NullableSendMailAdvBccInner {
	return &NullableSendMailAdvBccInner{value: val, isSet: true}
}

func (v NullableSendMailAdvBccInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMailAdvBccInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


