# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SendMailAdvAttachments(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, filename: str=None, data: str=None):  # noqa: E501
        """SendMailAdvAttachments - a model defined in Swagger

        :param filename: The filename of this SendMailAdvAttachments.  # noqa: E501
        :type filename: str
        :param data: The data of this SendMailAdvAttachments.  # noqa: E501
        :type data: str
        """
        self.swagger_types = {
            'filename': str,
            'data': str
        }

        self.attribute_map = {
            'filename': 'filename',
            'data': 'data'
        }
        self._filename = filename
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'SendMailAdvAttachments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SendMailAdv_attachments of this SendMailAdvAttachments.  # noqa: E501
        :rtype: SendMailAdvAttachments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self) -> str:
        """Gets the filename of this SendMailAdvAttachments.

        (optional) Filename to specify for the attachment.  # noqa: E501

        :return: The filename of this SendMailAdvAttachments.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename: str):
        """Sets the filename of this SendMailAdvAttachments.

        (optional) Filename to specify for the attachment.  # noqa: E501

        :param filename: The filename of this SendMailAdvAttachments.
        :type filename: str
        """

        self._filename = filename

    @property
    def data(self) -> str:
        """Gets the data of this SendMailAdvAttachments.

        Contents of the attached file (must be base64 encoded)  # noqa: E501

        :return: The data of this SendMailAdvAttachments.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data: str):
        """Sets the data of this SendMailAdvAttachments.

        Contents of the attached file (must be base64 encoded)  # noqa: E501

        :param data: The data of this SendMailAdvAttachments.
        :type data: str
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data
