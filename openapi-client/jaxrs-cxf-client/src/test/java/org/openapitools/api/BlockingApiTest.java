/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.DenyRuleRecord;
import org.openapitools.model.ErrorMessage;
import org.openapitools.model.GenericResponse;
import org.openapitools.model.MailBlocks;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * MailBaby Email Delivery and Management Service API
 *
 * <p>**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * API tests for BlockingApi
 */
public class BlockingApiTest {


    private BlockingApi api;

    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);

        api = JAXRSClientFactory.create("https://api.mailbaby.net", BlockingApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Creates a new email deny rule.
     *
     * Adds a new email deny rule into the system to block new emails that match the given criteria
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRuleTest() {
        String type = null;
        String data = null;
        String user = null;
        //GenericResponse response = api.addRule(type, data, user);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Removes an deny mail rule.
     *
     * Removes one of the configured deny mail rules from the system.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRuleTest() {
        Integer ruleId = null;
        //GenericResponse response = api.deleteRule(ruleId);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Removes an email address from the blocked list
     *
     * Removes an email address from the various block lists. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void delistBlockTest() {
        String body = null;
        //GenericResponse response = api.delistBlock(body);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * displays a list of blocked email addresses
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMailBlocksTest() {
        //MailBlocks response = api.getMailBlocks();
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Displays a listing of deny email rules.
     *
     * Returns a listing of all the deny block rules you have configured.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRulesTest() {
        //List<DenyRuleRecord> response = api.getRules();
        //assertNotNull(response);
        // TODO: test validations


    }
    
}
