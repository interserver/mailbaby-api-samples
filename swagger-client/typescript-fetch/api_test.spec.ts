/**
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # 📌 Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # 🔐 Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.0.1
 * Contact: support@interserver.net
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("DefaultApi", () => {
  let instance: api.DefaultApi
  beforeEach(function() {
    instance = new api.DefaultApi(config)
  });

  test("getMailOrders", () => {
    return expect(instance.getMailOrders({})).resolves.toBe(null)
  })
  test("pingServer", () => {
    return expect(instance.pingServer({})).resolves.toBe(null)
  })
  test("sendAdvMail", () => {
    const body: api.SendMailAdv = undefined
    return expect(instance.sendAdvMail(body, {})).resolves.toBe(null)
  })
  test("sendMail", () => {
    const to: string = "to_example"
    const from: string = "from_example"
    const subject: string = "subject_example"
    const body: string = "body_example"
    return expect(instance.sendMail(to, from, subject, body, {})).resolves.toBe(null)
  })
  test("viewMailLog", () => {
    const id: number = 789
    const search: string = "search_example"
    const skip: number = 56
    const limit: number = 56
    const startDate: number = 789
    const endDate: number = 789
    return expect(instance.viewMailLog(id, search, skip, limit, startDate, endDate, {})).resolves.toBe(null)
  })
})

