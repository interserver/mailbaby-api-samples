/**
 * Mail Baby API
 * This is an API for accesssing the mail services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MailAttachment model module.
 * @module model/MailAttachment
 * @version 1.0.0
 */
class MailAttachment {
    /**
     * Constructs a new <code>MailAttachment</code>.
     * A File attachment for an email
     * @alias module:model/MailAttachment
     * @param data {File} Contents of the attached file
     */
    constructor(data) { 
        
        MailAttachment.initialize(this, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data) { 
        obj['data'] = data;
    }

    /**
     * Constructs a <code>MailAttachment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MailAttachment} obj Optional instance to populate.
     * @return {module:model/MailAttachment} The populated <code>MailAttachment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MailAttachment();

            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], File);
            }
        }
        return obj;
    }


}

/**
 * Optional filename to specify for the attachment.
 * @member {String} filename
 */
MailAttachment.prototype['filename'] = undefined;

/**
 * Contents of the attached file
 * @member {File} data
 */
MailAttachment.prototype['data'] = undefined;






export default MailAttachment;

