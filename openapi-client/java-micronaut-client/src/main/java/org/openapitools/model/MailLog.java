/*
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.MailLogEntry;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Mail log records
 */
@JsonPropertyOrder({
  MailLog.JSON_PROPERTY_TOTAL,
  MailLog.JSON_PROPERTY_SKIP,
  MailLog.JSON_PROPERTY_LIMIT,
  MailLog.JSON_PROPERTY_EMAILS
})
@JsonTypeName("MailLog")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-12-29T00:30:49.002573-05:00[America/New_York]")
@Introspected
public class MailLog {
    public static final String JSON_PROPERTY_TOTAL = "total";
    private Integer total;

    public static final String JSON_PROPERTY_SKIP = "skip";
    private Integer skip;

    public static final String JSON_PROPERTY_LIMIT = "limit";
    private Integer limit;

    public static final String JSON_PROPERTY_EMAILS = "emails";
    private List<MailLogEntry> emails = new ArrayList<>();

    public MailLog(Integer total, Integer skip, Integer limit, List<MailLogEntry> emails) {
        this.total = total;
        this.skip = skip;
        this.limit = limit;
        this.emails = emails;
    }

    public MailLog total(Integer total) {
        this.total = total;
        return this;
    }

    /**
     * total number of mail log entries
     * @return total
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getTotal() {
        return total;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTotal(Integer total) {
        this.total = total;
    }

    public MailLog skip(Integer skip) {
        this.skip = skip;
        return this;
    }

    /**
     * number of emails skipped in listing
     * @return skip
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_SKIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getSkip() {
        return skip;
    }

    @JsonProperty(JSON_PROPERTY_SKIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSkip(Integer skip) {
        this.skip = skip;
    }

    public MailLog limit(Integer limit) {
        this.limit = limit;
        return this;
    }

    /**
     * number of emails to return
     * @return limit
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_LIMIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getLimit() {
        return limit;
    }

    @JsonProperty(JSON_PROPERTY_LIMIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public MailLog emails(List<MailLogEntry> emails) {
        this.emails = emails;
        return this;
    }

    public MailLog addEmailsItem(MailLogEntry emailsItem) {
        this.emails.add(emailsItem);
        return this;
    }

    /**
     * Get emails
     * @return emails
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_EMAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<MailLogEntry> getEmails() {
        return emails;
    }

    @JsonProperty(JSON_PROPERTY_EMAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEmails(List<MailLogEntry> emails) {
        this.emails = emails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MailLog mailLog = (MailLog) o;
        return Objects.equals(this.total, mailLog.total) &&
            Objects.equals(this.skip, mailLog.skip) &&
            Objects.equals(this.limit, mailLog.limit) &&
            Objects.equals(this.emails, mailLog.emails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(total, skip, limit, emails);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MailLog {\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    skip: ").append(toIndentedString(skip)).append("\n");
        sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
        sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
