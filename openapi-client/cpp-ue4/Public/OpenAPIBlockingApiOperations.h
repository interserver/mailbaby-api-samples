/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIBlockingApi.h"

#include "OpenAPIDenyRuleRecord.h"
#include "OpenAPIErrorMessage.h"
#include "OpenAPIGenericResponse.h"
#include "OpenAPIMailBlocks.h"

namespace OpenAPI
{

/* Creates a new email deny rule.
 *
 * Adds a new email deny rule into the system to block new emails that match the given criteria
*/
class OPENAPI_API OpenAPIBlockingApi::AddRuleRequest : public Request
{
public:
    virtual ~AddRuleRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	enum class TypeEnum
	{
		Domain,
		Email,
		Startswith,
		Destination,
  	};

	static FString EnumToString(const TypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, TypeEnum& EnumValue);
	/* The type of deny rule. */
	TypeEnum Type;
	/* The content of the rule.  If a domain type rule then an example would be google.com. For a begins with type an example would be msgid-.  For the email typer an example would be user@server.com. */
	FString Data;
	/* Mail account username that will be tied to this rule.  If not specified the first active mail order will be used. */
	TOptional<FString> User;
};

class OPENAPI_API OpenAPIBlockingApi::AddRuleResponse : public Response
{
public:
    virtual ~AddRuleResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGenericResponse Content;
};

/* Removes an deny mail rule.
 *
 * Removes one of the configured deny mail rules from the system.
*/
class OPENAPI_API OpenAPIBlockingApi::DeleteRuleRequest : public Request
{
public:
    virtual ~DeleteRuleRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The ID of the Rules entry. */
	int32 RuleId = 0;
};

class OPENAPI_API OpenAPIBlockingApi::DeleteRuleResponse : public Response
{
public:
    virtual ~DeleteRuleResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGenericResponse Content;
};

/* Removes an email address from the blocked list
 *
 * Removes an email address from the various block lists. 
*/
class OPENAPI_API OpenAPIBlockingApi::DelistBlockRequest : public Request
{
public:
    virtual ~DelistBlockRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Body;
};

class OPENAPI_API OpenAPIBlockingApi::DelistBlockResponse : public Response
{
public:
    virtual ~DelistBlockResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGenericResponse Content;
};

/* displays a list of blocked email addresses

*/
class OPENAPI_API OpenAPIBlockingApi::GetMailBlocksRequest : public Request
{
public:
    virtual ~GetMailBlocksRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIBlockingApi::GetMailBlocksResponse : public Response
{
public:
    virtual ~GetMailBlocksResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIMailBlocks Content;
};

/* Displays a listing of deny email rules.
 *
 * Returns a listing of all the deny block rules you have configured.
*/
class OPENAPI_API OpenAPIBlockingApi::GetRulesRequest : public Request
{
public:
    virtual ~GetRulesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIBlockingApi::GetRulesResponse : public Response
{
public:
    virtual ~GetRulesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIDenyRuleRecord> Content;
};

}
