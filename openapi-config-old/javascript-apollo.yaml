# Description: Sort method arguments to place required parameters before optional parameters.
sortParamsByRequiredFlag: true

# Description: Sort model properties to place required parameters before optional parameters.
sortModelPropertiesByRequiredFlag: true

# Description: Whether to ensure parameter names are unique in an operation (rename parameters that are not).
ensureUniqueParams: true

# Description: boolean, toggles whether unicode identifiers are allowed in names or not, default is false
allowUnicodeIdentifiers: false

# Description: Add form or body parameters to the beginning of the parameter list.
prependFormOrBodyParameters: false

# Description: Set to false for generators with better support for discriminators. (Python, Java, Go, PowerShell, C#have this enabled by default).
# Available Values:
#    true
#         The mapping in the discriminator includes descendent schemas that allOf inherit from self and the discriminator mapping schemas in the OAS document.
#    false
#         The mapping in the discriminator includes any descendent schemas that allOf inherit from self, any oneOf schemas, any anyOf schemas, any x-discriminator-values, and the discriminator mapping schemas in the OAS document AND Codegen validates that oneOf and anyOf schemas contain the required discriminator and throws an error if the discriminator is missing.
legacyDiscriminatorBehavior: true

# Description: If false, the 'additionalProperties' implementation (set to true by default) is compliant with the OAS and JSON schema specifications. If true (default), keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default.
# Available Values:
#    false
#         The 'additionalProperties' implementation is compliant with the OAS and JSON schema specifications.
#    true
#         Keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default.
disallowAdditionalPropertiesIfNotPresent: true

# Description: source folder for generated code
sourceFolder: src

# Description: root package for generated code
# invokerPackage: 

# Description: package for generated api classes
# apiPackage: 

# Description: package for generated models
# modelPackage: 

# Description: name of the project (Default: generated from info.title or "openapi-js-client")
# projectName: 

# Description: module name for AMD, Node or globals (Default: generated from <projectName>)
# moduleName: 

# Description: description of the project (Default: using info.description or "Client library of <projectName>")
# projectDescription: 

# Description: version of the project (Default: using info.version or "1.0.0")
# projectVersion: 

# Description: name of the license the project uses (Default: using info.license.name)
# licenseName: 

# Description: generate JSDoc comments
emitJSDoc: true

# Description: use JavaScript prototype chains & delegation for inheritance
useInheritance: true

# Description: Hides the generation timestamp when files are generated.
hideGenerationTimestamp: true

# Description: Naming convention for the property: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name
modelPropertyNaming: camelCase

# Description: Use this property to set an url your private npmRepo in the package.json
# npmRepository: 

