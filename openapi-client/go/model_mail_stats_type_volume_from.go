/*
MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.1.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MailStatsTypeVolumeFrom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailStatsTypeVolumeFrom{}

// MailStatsTypeVolumeFrom struct for MailStatsTypeVolumeFrom
type MailStatsTypeVolumeFrom struct {
	BillingsomedomainCom *int32 `json:"billing@somedomain.com,omitempty"`
	SalessomedomainCom *int32 `json:"sales@somedomain.com,omitempty"`
}

// NewMailStatsTypeVolumeFrom instantiates a new MailStatsTypeVolumeFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailStatsTypeVolumeFrom() *MailStatsTypeVolumeFrom {
	this := MailStatsTypeVolumeFrom{}
	return &this
}

// NewMailStatsTypeVolumeFromWithDefaults instantiates a new MailStatsTypeVolumeFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailStatsTypeVolumeFromWithDefaults() *MailStatsTypeVolumeFrom {
	this := MailStatsTypeVolumeFrom{}
	return &this
}

// GetBillingsomedomainCom returns the BillingsomedomainCom field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeFrom) GetBillingsomedomainCom() int32 {
	if o == nil || IsNil(o.BillingsomedomainCom) {
		var ret int32
		return ret
	}
	return *o.BillingsomedomainCom
}

// GetBillingsomedomainComOk returns a tuple with the BillingsomedomainCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeFrom) GetBillingsomedomainComOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingsomedomainCom) {
		return nil, false
	}
	return o.BillingsomedomainCom, true
}

// HasBillingsomedomainCom returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeFrom) HasBillingsomedomainCom() bool {
	if o != nil && !IsNil(o.BillingsomedomainCom) {
		return true
	}

	return false
}

// SetBillingsomedomainCom gets a reference to the given int32 and assigns it to the BillingsomedomainCom field.
func (o *MailStatsTypeVolumeFrom) SetBillingsomedomainCom(v int32) {
	o.BillingsomedomainCom = &v
}

// GetSalessomedomainCom returns the SalessomedomainCom field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeFrom) GetSalessomedomainCom() int32 {
	if o == nil || IsNil(o.SalessomedomainCom) {
		var ret int32
		return ret
	}
	return *o.SalessomedomainCom
}

// GetSalessomedomainComOk returns a tuple with the SalessomedomainCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeFrom) GetSalessomedomainComOk() (*int32, bool) {
	if o == nil || IsNil(o.SalessomedomainCom) {
		return nil, false
	}
	return o.SalessomedomainCom, true
}

// HasSalessomedomainCom returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeFrom) HasSalessomedomainCom() bool {
	if o != nil && !IsNil(o.SalessomedomainCom) {
		return true
	}

	return false
}

// SetSalessomedomainCom gets a reference to the given int32 and assigns it to the SalessomedomainCom field.
func (o *MailStatsTypeVolumeFrom) SetSalessomedomainCom(v int32) {
	o.SalessomedomainCom = &v
}

func (o MailStatsTypeVolumeFrom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailStatsTypeVolumeFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingsomedomainCom) {
		toSerialize["billing@somedomain.com"] = o.BillingsomedomainCom
	}
	if !IsNil(o.SalessomedomainCom) {
		toSerialize["sales@somedomain.com"] = o.SalessomedomainCom
	}
	return toSerialize, nil
}

type NullableMailStatsTypeVolumeFrom struct {
	value *MailStatsTypeVolumeFrom
	isSet bool
}

func (v NullableMailStatsTypeVolumeFrom) Get() *MailStatsTypeVolumeFrom {
	return v.value
}

func (v *NullableMailStatsTypeVolumeFrom) Set(val *MailStatsTypeVolumeFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableMailStatsTypeVolumeFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableMailStatsTypeVolumeFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailStatsTypeVolumeFrom(val *MailStatsTypeVolumeFrom) *NullableMailStatsTypeVolumeFrom {
	return &NullableMailStatsTypeVolumeFrom{value: val, isSet: true}
}

func (v NullableMailStatsTypeVolumeFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailStatsTypeVolumeFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


