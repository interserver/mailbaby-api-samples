/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.74
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import MailStatsTypeVolume from './MailStatsTypeVolume';

/**
 * The MailStatsType model module.
 * @module model/MailStatsType
 * @version 1.1.0
 */
export default class MailStatsType {
  /**
   * Constructs a new <code>MailStatsType</code>.
   * Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
   * @alias module:model/MailStatsType
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>MailStatsType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MailStatsType} obj Optional instance to populate.
   * @return {module:model/MailStatsType} The populated <code>MailStatsType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MailStatsType();
      if (data.hasOwnProperty('time'))
        obj.time = ApiClient.convertToType(data['time'], 'String');
      if (data.hasOwnProperty('usage'))
        obj.usage = ApiClient.convertToType(data['usage'], 'Number');
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'String');
      if (data.hasOwnProperty('currencySymbol'))
        obj.currencySymbol = ApiClient.convertToType(data['currencySymbol'], 'String');
      if (data.hasOwnProperty('cost'))
        obj.cost = ApiClient.convertToType(data['cost'], 'Number');
      if (data.hasOwnProperty('received'))
        obj.received = ApiClient.convertToType(data['received'], 'Number');
      if (data.hasOwnProperty('sent'))
        obj.sent = ApiClient.convertToType(data['sent'], 'Number');
      if (data.hasOwnProperty('volume'))
        obj.volume = MailStatsTypeVolume.constructFromObject(data['volume']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>time</code> property.
 * @enum {String}
 * @readonly
 */
MailStatsType.TimeEnum = {
  /**
   * value: "all"
   * @const
   */
  all: "all",

  /**
   * value: "billing"
   * @const
   */
  billing: "billing",

  /**
   * value: "month"
   * @const
   */
  month: "month",

  /**
   * value: "7d"
   * @const
   */
  _7d: "7d",

  /**
   * value: "24h"
   * @const
   */
  _24h: "24h",

  /**
   * value: "today"
   * @const
   */
  today: "today",

  /**
   * value: "1h"
   * @const
   */
  _1h: "1h"
};
/**
 * @member {module:model/MailStatsType.TimeEnum} time
 * @default '1h'
 */
MailStatsType.prototype.time = '1h';

/**
 * @member {Number} usage
 */
MailStatsType.prototype.usage = undefined;

/**
 * @member {String} currency
 */
MailStatsType.prototype.currency = undefined;

/**
 * @member {String} currencySymbol
 */
MailStatsType.prototype.currencySymbol = undefined;

/**
 * @member {Number} cost
 */
MailStatsType.prototype.cost = undefined;

/**
 * @member {Number} received
 */
MailStatsType.prototype.received = undefined;

/**
 * @member {Number} sent
 */
MailStatsType.prototype.sent = undefined;

/**
 * @member {module:model/MailStatsTypeVolume} volume
 */
MailStatsType.prototype.volume = undefined;

