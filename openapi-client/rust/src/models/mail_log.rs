/*
 * MailBaby Email Delivery API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # 📌 Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # 🔐 Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

/// MailLog : Mail log records



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MailLog {
    /// total number of mail log entries
    #[serde(rename = "total")]
    pub total: i32,
    /// number of emails skipped in listing
    #[serde(rename = "skip")]
    pub skip: i32,
    /// number of emails to return
    #[serde(rename = "limit")]
    pub limit: i32,
    #[serde(rename = "emails")]
    pub emails: Vec<crate::models::MailLogEntry>,
}

impl MailLog {
    /// Mail log records
    pub fn new(total: i32, skip: i32, limit: i32, emails: Vec<crate::models::MailLogEntry>) -> MailLog {
        MailLog {
            total,
            skip,
            limit,
            emails,
        }
    }
}


