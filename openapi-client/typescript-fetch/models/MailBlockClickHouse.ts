/* tslint:disable */
/* eslint-disable */
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A block entry from the clickhouse mailblocks server.
 * @export
 * @interface MailBlockClickHouse
 */
export interface MailBlockClickHouse {
    /**
     * 
     * @type {Date}
     * @memberof MailBlockClickHouse
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof MailBlockClickHouse
     */
    from: string;
    /**
     * 
     * @type {string}
     * @memberof MailBlockClickHouse
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof MailBlockClickHouse
     */
    subject: string;
    /**
     * 
     * @type {string}
     * @memberof MailBlockClickHouse
     */
    to: string;
}

/**
 * Check if a given object implements the MailBlockClickHouse interface.
 */
export function instanceOfMailBlockClickHouse(value: object): value is MailBlockClickHouse {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('messageId' in value) || value['messageId'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function MailBlockClickHouseFromJSON(json: any): MailBlockClickHouse {
    return MailBlockClickHouseFromJSONTyped(json, false);
}

export function MailBlockClickHouseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailBlockClickHouse {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'from': json['from'],
        'messageId': json['messageId'],
        'subject': json['subject'],
        'to': json['to'],
    };
}

export function MailBlockClickHouseToJSON(value?: MailBlockClickHouse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'date': ((value['date']).toISOString().substring(0,10)),
        'from': value['from'],
        'messageId': value['messageId'],
        'subject': value['subject'],
        'to': value['to'],
    };
}

