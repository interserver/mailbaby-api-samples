/*
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

/// DenyRuleNew : The data for a email deny rule record.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DenyRuleNew {
    /// Mail account username that will be tied to this rule.  If not specified the first active mail order will be used.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    /// The type of deny rule.
    #[serde(rename = "type")]
    pub r#type: RHashType,
    /// The content of the rule.  If a domain type rule then an example would be google.com. For a begins with type an example would be msgid-.  For the email typer an example would be user@server.com.
    #[serde(rename = "data")]
    pub data: String,
}

impl DenyRuleNew {
    /// The data for a email deny rule record.
    pub fn new(r#type: RHashType, data: String) -> DenyRuleNew {
        DenyRuleNew {
            user: None,
            r#type,
            data,
        }
    }
}

/// The type of deny rule.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "domain")]
    Domain,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "startswith")]
    Startswith,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Domain
    }
}

