/*
 * Mail Baby API
 * This is an API for accesssing the mail services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.MailLog;
import org.openapitools.client.model.MailOrder;
import org.openapitools.client.model.SendMail;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Gets mail order information by id
     *
     * returns information about a mail order in the system with the given id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMailByIdTest() throws ApiException {
        Long id = null;
        MailOrder response = api.getMailById(id);

        // TODO: test validations
    }
    
    /**
     * displays a list of mail service orders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMailOrdersTest() throws ApiException {
        List<MailOrder> response = api.getMailOrders();

        // TODO: test validations
    }
    
    /**
     * Checks if the server is running
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void pingServerTest() throws ApiException {
        api.pingServer();

        // TODO: test validations
    }
    
    /**
     * places a mail order
     *
     * Adds an item to the system
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void placeMailOrderTest() throws ApiException {
        MailOrder mailOrder = null;
        api.placeMailOrder(mailOrder);

        // TODO: test validations
    }
    
    /**
     * Sends an Email with Advanced Options
     *
     * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendAdvMailByIdTest() throws ApiException {
        Long id = null;
        SendMail sendMail = null;
        GenericResponse response = api.sendAdvMailById(id, sendMail);

        // TODO: test validations
    }
    
    /**
     * Sends an Email
     *
     * Sends An email through one of your mail orders.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendMailByIdTest() throws ApiException {
        Long id = null;
        String subject = null;
        String body = null;
        String to = null;
        String toName = null;
        String from = null;
        String fromName = null;
        GenericResponse response = api.sendMailById(id, subject, body, to, toName, from, fromName);

        // TODO: test validations
    }
    
    /**
     * validatess order details before placing an order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateMailOrderTest() throws ApiException {
        api.validateMailOrder();

        // TODO: test validations
    }
    
    /**
     * displays the mail log
     *
     * By passing in the appropriate options, you can search for available inventory in the system 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void viewMailLogByIdTest() throws ApiException {
        Long id = null;
        String searchString = null;
        Integer skip = null;
        Integer limit = null;
        List<MailLog> response = api.viewMailLogById(id, searchString, skip, limit);

        // TODO: test validations
    }
    
}
