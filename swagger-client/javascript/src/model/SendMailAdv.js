/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {EmailAddressName} from './EmailAddressName';
import {MailAttachment} from './MailAttachment';

/**
 * The SendMailAdv model module.
 * @module model/SendMailAdv
 * @version 1.1.0
 */
export class SendMailAdv {
  /**
   * Constructs a new <code>SendMailAdv</code>.
   * Details for an Email
   * @alias module:model/SendMailAdv
   * @class
   * @param subject {String} The subject or title of the email
   * @param body {String} The main email contents.
   * @param from {module:model/EmailAddressName} 
   * @param to {Array.<module:model/EmailAddressName>} A list of destionation email addresses to send this to
   */
  constructor(subject, body, from, to) {
    this.subject = subject;
    this.body = body;
    this.from = from;
    this.to = to;
  }

  /**
   * Constructs a <code>SendMailAdv</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SendMailAdv} obj Optional instance to populate.
   * @return {module:model/SendMailAdv} The populated <code>SendMailAdv</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SendMailAdv();
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
      if (data.hasOwnProperty('from'))
        obj.from = EmailAddressName.constructFromObject(data['from']);
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], [EmailAddressName]);
      if (data.hasOwnProperty('replyto'))
        obj.replyto = ApiClient.convertToType(data['replyto'], [EmailAddressName]);
      if (data.hasOwnProperty('cc'))
        obj.cc = ApiClient.convertToType(data['cc'], [EmailAddressName]);
      if (data.hasOwnProperty('bcc'))
        obj.bcc = ApiClient.convertToType(data['bcc'], [EmailAddressName]);
      if (data.hasOwnProperty('attachments'))
        obj.attachments = ApiClient.convertToType(data['attachments'], [MailAttachment]);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
    }
    return obj;
  }
}

/**
 * The subject or title of the email
 * @member {String} subject
 */
SendMailAdv.prototype.subject = undefined;

/**
 * The main email contents.
 * @member {String} body
 */
SendMailAdv.prototype.body = undefined;

/**
 * @member {module:model/EmailAddressName} from
 */
SendMailAdv.prototype.from = undefined;

/**
 * A list of destionation email addresses to send this to
 * @member {Array.<module:model/EmailAddressName>} to
 */
SendMailAdv.prototype.to = undefined;

/**
 * (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
 * @member {Array.<module:model/EmailAddressName>} replyto
 */
SendMailAdv.prototype.replyto = undefined;

/**
 * (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
 * @member {Array.<module:model/EmailAddressName>} cc
 */
SendMailAdv.prototype.cc = undefined;

/**
 * (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
 * @member {Array.<module:model/EmailAddressName>} bcc
 */
SendMailAdv.prototype.bcc = undefined;

/**
 * (optional) File attachments to include in the email.  The file contents must be base64 encoded!
 * @member {Array.<module:model/MailAttachment>} attachments
 */
SendMailAdv.prototype.attachments = undefined;

/**
 * (optional)  ID of the Mail order within our system to use as the Mail Account.
 * @member {Number} id
 */
SendMailAdv.prototype.id = undefined;

