--  MailBaby Email Delivery and Management Service API
--  **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
--
--  The version of the OpenAPI document: 1.1.0
--  Contact: support@interserver.net
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.6.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.


package body .Models is
   pragma Style_Checks ("-mr");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;



   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecordAllOf_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("created", Value.Created);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecordAllOf_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecordAllOf_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecordAllOf_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : DenyRuleRecordAllOf_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMailOrders401Response_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("code", Value.Code);
      Into.Write_Entity ("message", Value.Message);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMailOrders401Response_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetMailOrders401Response_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "code", Value.Code);
      Swagger.Streams.Deserialize (Object, "message", Value.Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetMailOrders401Response_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GetMailOrders401Response_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddress_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("email", Value.Email);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddress_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmailAddress_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "email", Value.Email);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmailAddress_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EmailAddress_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockRspamd_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("from", Value.From);
      Into.Write_Entity ("subject", Value.Subject);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockRspamd_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockRspamd_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "from", Value.From);
      Swagger.Streams.Deserialize (Object, "subject", Value.Subject);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockRspamd_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailBlockRspamd_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailOrder_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("username", Value.Username);
      Into.Write_Entity ("comment", Value.Comment);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailOrder_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailOrder_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "username", Value.Username);
      Swagger.Streams.Deserialize (Object, "comment", Value.Comment);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailOrder_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailOrder_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecord_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("data", Value.Data);
      Into.Write_Entity ("user", Value.User);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecord_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecord_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "data", Value.Data);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecord_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : DenyRuleRecord_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("text", Value.Text);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "text", Value.Text);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GenericResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMail_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("to", Value.To);
      Into.Write_Entity ("from", Value.From);
      Into.Write_Entity ("subject", Value.Subject);
      Into.Write_Entity ("body", Value.P_Body);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMail_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMail_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "to", Value.To);
      Swagger.Streams.Deserialize (Object, "from", Value.From);
      Swagger.Streams.Deserialize (Object, "subject", Value.Subject);
      Swagger.Streams.Deserialize (Object, "body", Value.P_Body);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMail_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : SendMail_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleNew_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("data", Value.Data);
      Into.Write_Entity ("user", Value.User);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleNew_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleNew_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "data", Value.Data);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleNew_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : DenyRuleNew_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockClickHouse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("date", Value.Date);
      Into.Write_Entity ("from", Value.From);
      Into.Write_Entity ("messageId", Value.Message_Id);
      Into.Write_Entity ("subject", Value.Subject);
      Into.Write_Entity ("to", Value.To);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockClickHouse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockClickHouse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "date", Value.Date);
      Swagger.Streams.Deserialize (Object, "from", Value.From);
      Swagger.Streams.Deserialize (Object, "messageId", Value.Message_Id);
      Swagger.Streams.Deserialize (Object, "subject", Value.Subject);
      Swagger.Streams.Deserialize (Object, "to", Value.To);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockClickHouse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailBlockClickHouse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlocks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "local", Value.Local);
      Serialize (Into, "mbtrap", Value.Mbtrap);
      Serialize (Into, "subject", Value.Subject);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlocks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlocks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "local", Value.Local);
      Deserialize (Object, "mbtrap", Value.Mbtrap);
      Deserialize (Object, "subject", Value.Subject);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlocks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailBlocks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLogEntry_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_id", Value.P__id);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("from", Value.From);
      Into.Write_Entity ("to", Value.To);
      Into.Write_Entity ("subject", Value.Subject);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("time", Value.Time);
      Into.Write_Entity ("user", Value.User);
      Into.Write_Entity ("transtype", Value.Transtype);
      Into.Write_Entity ("origin", Value.Origin);
      Into.Write_Entity ("interface", Value.P_Interface);
      Into.Write_Entity ("sendingZone", Value.Sending_Zone);
      Into.Write_Entity ("bodySize", Value.Body_Size);
      Into.Write_Entity ("seq", Value.Seq);
      Into.Write_Entity ("recipient", Value.Recipient);
      Into.Write_Entity ("domain", Value.Domain);
      Into.Write_Entity ("locked", Value.Locked);
      Into.Write_Entity ("lockTime", Value.Lock_Time);
      Into.Write_Entity ("assigned", Value.Assigned);
      Into.Write_Entity ("queued", Value.Queued);
      Into.Write_Entity ("mxHostname", Value.Mx_Hostname);
      Into.Write_Entity ("response", Value.Response);
      Into.Write_Entity ("messageId", Value.Message_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLogEntry_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLogEntry_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_id", Value.P__id);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "from", Value.From);
      Swagger.Streams.Deserialize (Object, "to", Value.To);
      Swagger.Streams.Deserialize (Object, "subject", Value.Subject);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "time", Value.Time);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
      Swagger.Streams.Deserialize (Object, "transtype", Value.Transtype);
      Swagger.Streams.Deserialize (Object, "origin", Value.Origin);
      Swagger.Streams.Deserialize (Object, "interface", Value.P_Interface);
      Swagger.Streams.Deserialize (Object, "sendingZone", Value.Sending_Zone);
      Swagger.Streams.Deserialize (Object, "bodySize", Value.Body_Size);
      Swagger.Streams.Deserialize (Object, "seq", Value.Seq);
      Swagger.Streams.Deserialize (Object, "recipient", Value.Recipient);
      Swagger.Streams.Deserialize (Object, "domain", Value.Domain);
      Swagger.Streams.Deserialize (Object, "locked", Value.Locked);
      Swagger.Streams.Deserialize (Object, "lockTime", Value.Lock_Time);
      Swagger.Streams.Deserialize (Object, "assigned", Value.Assigned);
      Swagger.Streams.Deserialize (Object, "queued", Value.Queued);
      Swagger.Streams.Deserialize (Object, "mxHostname", Value.Mx_Hostname);
      Swagger.Streams.Deserialize (Object, "response", Value.Response);
      Swagger.Streams.Deserialize (Object, "messageId", Value.Message_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLogEntry_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailLogEntry_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLog_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("total", Value.Total);
      Into.Write_Entity ("skip", Value.Skip);
      Into.Write_Entity ("limit", Value.Limit);
      Serialize (Into, "emails", Value.Emails);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLog_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLog_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "total", Value.Total);
      Swagger.Streams.Deserialize (Object, "skip", Value.Skip);
      Swagger.Streams.Deserialize (Object, "limit", Value.Limit);
      Deserialize (Object, "emails", Value.Emails);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLog_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MailLog_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetStats200ResponseInner_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("username", Value.Username);
      Into.Write_Entity ("password", Value.Password);
      Into.Write_Entity ("comment", Value.Comment);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetStats200ResponseInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetStats200ResponseInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "username", Value.Username);
      Swagger.Streams.Deserialize (Object, "password", Value.Password);
      Swagger.Streams.Deserialize (Object, "comment", Value.Comment);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetStats200ResponseInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GetStats200ResponseInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMailAdv_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("subject", Value.Subject);
      Into.Write_Entity ("body", Value.P_Body);
      Serialize (Into, "from", Value.From);
      Serialize (Into, "to", Value.To);
      Serialize (Into, "replyto", Value.Replyto);
      Serialize (Into, "cc", Value.Cc);
      Serialize (Into, "bcc", Value.Bcc);
      Serialize (Into, "attachments", Value.Attachments);
      Into.Write_Entity ("id", Value.Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMailAdv_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMailAdv_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "subject", Value.Subject);
      Swagger.Streams.Deserialize (Object, "body", Value.P_Body);
      Deserialize (Object, "from", Value.From);
      Deserialize (Object, "to", Value.To);
      Deserialize (Object, "replyto", Value.Replyto);
      Deserialize (Object, "cc", Value.Cc);
      Deserialize (Object, "bcc", Value.Bcc);
      Deserialize (Object, "attachments", Value.Attachments);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMailAdv_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : SendMailAdv_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;



end .Models;
