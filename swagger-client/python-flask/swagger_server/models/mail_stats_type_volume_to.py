# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MailStatsTypeVolumeTo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, clientdomain_com: int=None, usersite_net: int=None, salescompany_com: int=None, clientanothersite_com: int=None):  # noqa: E501
        """MailStatsTypeVolumeTo - a model defined in Swagger

        :param clientdomain_com: The clientdomain_com of this MailStatsTypeVolumeTo.  # noqa: E501
        :type clientdomain_com: int
        :param usersite_net: The usersite_net of this MailStatsTypeVolumeTo.  # noqa: E501
        :type usersite_net: int
        :param salescompany_com: The salescompany_com of this MailStatsTypeVolumeTo.  # noqa: E501
        :type salescompany_com: int
        :param clientanothersite_com: The clientanothersite_com of this MailStatsTypeVolumeTo.  # noqa: E501
        :type clientanothersite_com: int
        """
        self.swagger_types = {
            'clientdomain_com': int,
            'usersite_net': int,
            'salescompany_com': int,
            'clientanothersite_com': int
        }

        self.attribute_map = {
            'clientdomain_com': 'client@domain.com',
            'usersite_net': 'user@site.net',
            'salescompany_com': 'sales@company.com',
            'clientanothersite_com': 'client@anothersite.com'
        }
        self._clientdomain_com = clientdomain_com
        self._usersite_net = usersite_net
        self._salescompany_com = salescompany_com
        self._clientanothersite_com = clientanothersite_com

    @classmethod
    def from_dict(cls, dikt) -> 'MailStatsTypeVolumeTo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MailStatsType_volume_to of this MailStatsTypeVolumeTo.  # noqa: E501
        :rtype: MailStatsTypeVolumeTo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clientdomain_com(self) -> int:
        """Gets the clientdomain_com of this MailStatsTypeVolumeTo.


        :return: The clientdomain_com of this MailStatsTypeVolumeTo.
        :rtype: int
        """
        return self._clientdomain_com

    @clientdomain_com.setter
    def clientdomain_com(self, clientdomain_com: int):
        """Sets the clientdomain_com of this MailStatsTypeVolumeTo.


        :param clientdomain_com: The clientdomain_com of this MailStatsTypeVolumeTo.
        :type clientdomain_com: int
        """

        self._clientdomain_com = clientdomain_com

    @property
    def usersite_net(self) -> int:
        """Gets the usersite_net of this MailStatsTypeVolumeTo.


        :return: The usersite_net of this MailStatsTypeVolumeTo.
        :rtype: int
        """
        return self._usersite_net

    @usersite_net.setter
    def usersite_net(self, usersite_net: int):
        """Sets the usersite_net of this MailStatsTypeVolumeTo.


        :param usersite_net: The usersite_net of this MailStatsTypeVolumeTo.
        :type usersite_net: int
        """

        self._usersite_net = usersite_net

    @property
    def salescompany_com(self) -> int:
        """Gets the salescompany_com of this MailStatsTypeVolumeTo.


        :return: The salescompany_com of this MailStatsTypeVolumeTo.
        :rtype: int
        """
        return self._salescompany_com

    @salescompany_com.setter
    def salescompany_com(self, salescompany_com: int):
        """Sets the salescompany_com of this MailStatsTypeVolumeTo.


        :param salescompany_com: The salescompany_com of this MailStatsTypeVolumeTo.
        :type salescompany_com: int
        """

        self._salescompany_com = salescompany_com

    @property
    def clientanothersite_com(self) -> int:
        """Gets the clientanothersite_com of this MailStatsTypeVolumeTo.


        :return: The clientanothersite_com of this MailStatsTypeVolumeTo.
        :rtype: int
        """
        return self._clientanothersite_com

    @clientanothersite_com.setter
    def clientanothersite_com(self, clientanothersite_com: int):
        """Sets the clientanothersite_com of this MailStatsTypeVolumeTo.


        :param clientanothersite_com: The clientanothersite_com of this MailStatsTypeVolumeTo.
        :type clientanothersite_com: int
        """

        self._clientanothersite_com = clientanothersite_com
