/*
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n\n\n# üìå Overview\n\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n\n\n# üîê Authentication\n\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  \n\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An email record
 */
public class OASMailLogEntry implements OAS.MappedProperties {
    /**
     * internal db id
     * @return id
     */
    public Integer id { get; set; }

    /**
     * mail id
     * @return id
     */
    public String id { get; set; }

    /**
     * from address
     * @return r_from
     */
    public String r_from { get; set; }

    /**
     * to address
     * @return to
     */
    public String to { get; set; }

    /**
     * email subject
     * @return subject
     */
    public String subject { get; set; }

    /**
     * message id
     * @return messageId
     */
    public String messageId { get; set; }

    /**
     * creation date
     * @return created
     */
    public String created { get; set; }

    /**
     * creation timestamp
     * @return r_time
     */
    public Integer r_time { get; set; }

    /**
     * user account
     * @return user
     */
    public String user { get; set; }

    /**
     * transaction type
     * @return transtype
     */
    public String transtype { get; set; }

    /**
     * transaction host
     * @return transhost
     */
    public String transhost { get; set; }

    /**
     * origin host
     * @return originhost
     */
    public String originhost { get; set; }

    /**
     * origin ip
     * @return origin
     */
    public String origin { get; set; }

    /**
     * interface name
     * @return r_interface
     */
    public String r_interface { get; set; }

    /**
     * date processed
     * @return r_date
     */
    public String r_date { get; set; }

    /**
     * sending zone
     * @return sendingZone
     */
    public String sendingZone { get; set; }

    /**
     * email body size in bytes
     * @return bodySize
     */
    public Integer bodySize { get; set; }

    /**
     * md5 sum of the email
     * @return sourceMd5
     */
    public String sourceMd5 { get; set; }

    /**
     * delivery sequency
     * @return seq
     */
    public Integer seq { get; set; }

    /**
     * to address domain
     * @return domain
     */
    public String domain { get; set; }

    /**
     * email receiver address
     * @return recipient
     */
    public String recipient { get; set; }

    /**
     * locked status
     * @return locked
     */
    public Integer locked { get; set; }

    /**
     * lock timestamp
     * @return lockTime
     */
    public Integer lockTime { get; set; }

    /**
     * assigned server
     * @return assigned
     */
    public String assigned { get; set; }

    /**
     * queued timestamp
     * @return queued
     */
    public String queued { get; set; }

    /**
     * lock id
     * @return lock
     */
    public String lock { get; set; }

    /**
     * logger
     * @return logger
     */
    public String logger { get; set; }

    /**
     * mx port number
     * @return mxPort
     */
    public Integer mxPort { get; set; }

    /**
     * connection key
     * @return connectionKey
     */
    public String connectionKey { get; set; }

    /**
     * mx hostname
     * @return mxHostname
     */
    public String mxHostname { get; set; }

    /**
     * body hash
     * @return sentBodyHash
     */
    public String sentBodyHash { get; set; }

    /**
     * sent body size in bytes
     * @return sentBodySize
     */
    public Integer sentBodySize { get; set; }

    /**
     * md5 checksum matching result
     * @return md5Match
     */
    public Integer md5Match { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_id' => 'id',
        'from' => 'r_from',
        'time' => 'r_time',
        'interface' => 'r_interface',
        'date' => 'r_date',
        '_lock' => 'lock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMailLogEntry getExample() {
        OASMailLogEntry mailLogEntry = new OASMailLogEntry();
          mailLogEntry.id = 103172;
          mailLogEntry.id = '17c7eda538e0005d03';
          mailLogEntry.r_from = 'person@mysite.com';
          mailLogEntry.to = 'client@isp.com';
          mailLogEntry.subject = 'sell 0.005 shares';
          mailLogEntry.messageId = '<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>';
          mailLogEntry.created = '2021-10-14 08:50:10';
          mailLogEntry.r_time = 1634215809;
          mailLogEntry.user = 'mb5658';
          mailLogEntry.transtype = 'ESMTPSA';
          mailLogEntry.transhost = 'relay0.mailbaby.net';
          mailLogEntry.originhost = '199.231.189.154';
          mailLogEntry.origin = '199.231.189.154';
          mailLogEntry.r_interface = 'feeder';
          mailLogEntry.r_date = 'Thu, 14 Oct 2021 08:50:09 -0400';
          mailLogEntry.sendingZone = 'interserver';
          mailLogEntry.bodySize = 63;
          mailLogEntry.sourceMd5 = '1d7058e6a30369f200b0c34fab2fac92';
          mailLogEntry.seq = 1;
          mailLogEntry.domain = 'interserver.net';
          mailLogEntry.recipient = 'client@isp.com';
          mailLogEntry.locked = 1;
          mailLogEntry.lockTime = 1634215818533;
          mailLogEntry.assigned = 'relay1';
          mailLogEntry.queued = '2021-10-14T12:50:15.487Z';
          mailLogEntry.lock = 'lock 17c7eda538e0005d03 001';
          mailLogEntry.logger = '';
          mailLogEntry.mxPort = 25;
          mailLogEntry.connectionKey = '206.72.200.46:interserver.net:25';
          mailLogEntry.mxHostname = 'mx.j.is.cc';
          mailLogEntry.sentBodyHash = '1d7058e6a30369f200b0c34fab2fac92';
          mailLogEntry.sentBodySize = 63;
          mailLogEntry.md5Match = 1;
        return mailLogEntry;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMailLogEntry) {           
            OASMailLogEntry mailLogEntry = (OASMailLogEntry) obj;
            return this.id == mailLogEntry.id
                && this.id == mailLogEntry.id
                && this.r_from == mailLogEntry.r_from
                && this.to == mailLogEntry.to
                && this.subject == mailLogEntry.subject
                && this.messageId == mailLogEntry.messageId
                && this.created == mailLogEntry.created
                && this.r_time == mailLogEntry.r_time
                && this.user == mailLogEntry.user
                && this.transtype == mailLogEntry.transtype
                && this.transhost == mailLogEntry.transhost
                && this.originhost == mailLogEntry.originhost
                && this.origin == mailLogEntry.origin
                && this.r_interface == mailLogEntry.r_interface
                && this.r_date == mailLogEntry.r_date
                && this.sendingZone == mailLogEntry.sendingZone
                && this.bodySize == mailLogEntry.bodySize
                && this.sourceMd5 == mailLogEntry.sourceMd5
                && this.seq == mailLogEntry.seq
                && this.domain == mailLogEntry.domain
                && this.recipient == mailLogEntry.recipient
                && this.locked == mailLogEntry.locked
                && this.lockTime == mailLogEntry.lockTime
                && this.assigned == mailLogEntry.assigned
                && this.queued == mailLogEntry.queued
                && this.lock == mailLogEntry.lock
                && this.logger == mailLogEntry.logger
                && this.mxPort == mailLogEntry.mxPort
                && this.connectionKey == mailLogEntry.connectionKey
                && this.mxHostname == mailLogEntry.mxHostname
                && this.sentBodyHash == mailLogEntry.sentBodyHash
                && this.sentBodySize == mailLogEntry.sentBodySize
                && this.md5Match == mailLogEntry.md5Match;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        hashCode = (17 * hashCode) + (subject == null ? 0 : System.hashCode(subject));
        hashCode = (17 * hashCode) + (messageId == null ? 0 : System.hashCode(messageId));
        hashCode = (17 * hashCode) + (created == null ? 0 : System.hashCode(created));
        hashCode = (17 * hashCode) + (r_time == null ? 0 : System.hashCode(r_time));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        hashCode = (17 * hashCode) + (transtype == null ? 0 : System.hashCode(transtype));
        hashCode = (17 * hashCode) + (transhost == null ? 0 : System.hashCode(transhost));
        hashCode = (17 * hashCode) + (originhost == null ? 0 : System.hashCode(originhost));
        hashCode = (17 * hashCode) + (origin == null ? 0 : System.hashCode(origin));
        hashCode = (17 * hashCode) + (r_interface == null ? 0 : System.hashCode(r_interface));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (sendingZone == null ? 0 : System.hashCode(sendingZone));
        hashCode = (17 * hashCode) + (bodySize == null ? 0 : System.hashCode(bodySize));
        hashCode = (17 * hashCode) + (sourceMd5 == null ? 0 : System.hashCode(sourceMd5));
        hashCode = (17 * hashCode) + (seq == null ? 0 : System.hashCode(seq));
        hashCode = (17 * hashCode) + (domain == null ? 0 : System.hashCode(domain));
        hashCode = (17 * hashCode) + (recipient == null ? 0 : System.hashCode(recipient));
        hashCode = (17 * hashCode) + (locked == null ? 0 : System.hashCode(locked));
        hashCode = (17 * hashCode) + (lockTime == null ? 0 : System.hashCode(lockTime));
        hashCode = (17 * hashCode) + (assigned == null ? 0 : System.hashCode(assigned));
        hashCode = (17 * hashCode) + (queued == null ? 0 : System.hashCode(queued));
        hashCode = (17 * hashCode) + (lock == null ? 0 : System.hashCode(lock));
        hashCode = (17 * hashCode) + (logger == null ? 0 : System.hashCode(logger));
        hashCode = (17 * hashCode) + (mxPort == null ? 0 : System.hashCode(mxPort));
        hashCode = (17 * hashCode) + (connectionKey == null ? 0 : System.hashCode(connectionKey));
        hashCode = (17 * hashCode) + (mxHostname == null ? 0 : System.hashCode(mxHostname));
        hashCode = (17 * hashCode) + (sentBodyHash == null ? 0 : System.hashCode(sentBodyHash));
        hashCode = (17 * hashCode) + (sentBodySize == null ? 0 : System.hashCode(sentBodySize));
        hashCode = (17 * hashCode) + (md5Match == null ? 0 : System.hashCode(md5Match));
        return hashCode;
    }
}

