# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MailBabyEmailDeliveryAndManagementServiceAPI.Api.Sending do
  @moduledoc """
  API calls for all endpoints tagged `Sending`.
  """

  alias MailBabyEmailDeliveryAndManagementServiceAPI.Connection
  import MailBabyEmailDeliveryAndManagementServiceAPI.RequestBuilder

  @doc """
  Sends an Email with Advanced Options
  Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `subject` (String.t): The subject or title of the email
  - `body` (String.t): The main email contents.
  - `from` (MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t): 
  - `to` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t]): A list of destionation email addresses to send this to
  - `opts` (keyword): Optional parameters
    - `:replyto` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t]): (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
    - `:cc` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t]): (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
    - `:bcc` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t]): (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
    - `:attachments` ([MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailAttachment.t]): (optional) File attachments to include in the email.  The file contents must be base64 encoded!
    - `:id` (integer()): (optional)  ID of the Mail order within our system to use as the Mail Account.

  ### Returns

  - `{:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec send_adv_mail(Tesla.Env.client, String.t, String.t, MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t.t, list(MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t), keyword()) :: {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response.t} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t} | {:error, Tesla.Env.t}
  def send_adv_mail(connection, subject, body, from, to, opts \\ []) do
    optional_params = %{
      :replyto => :form,
      :cc => :form,
      :bcc => :form,
      :attachments => :form,
      :id => :form
    }

    request =
      %{}
      |> method(:post)
      |> url("/mail/advsend")
      |> add_param(:form, :subject, subject)
      |> add_param(:form, :body, body)
      |> add_param(:form, :from, from)
      |> add_param(:form, :to, to)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse{}},
      {400, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}},
      {401, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}},
      {404, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}}
    ])
  end

  @doc """
  Sends an Email
  Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `to` (String.t): The Contact whom is the primary recipient of this email.
  - `from` (String.t): The contact whom is the this email is from.
  - `subject` (String.t): The subject or title of the email
  - `body` (String.t): The main email contents.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec send_mail(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response.t} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse.t} | {:error, Tesla.Env.t}
  def send_mail(connection, to, from, subject, body, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/mail/send")
      |> add_param(:form, :to, to)
      |> add_param(:form, :from, from)
      |> add_param(:form, :subject, subject)
      |> add_param(:form, :body, body)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GenericResponse{}},
      {400, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}},
      {401, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}},
      {404, %MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetMailOrders401Response{}}
    ])
  end
end
