/*
MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.1.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MailLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailLogEntry{}

// MailLogEntry An email record
type MailLogEntry struct {
	// internal db id
	Id int32 `json:"_id"`
	// mail id
	Id string `json:"id"`
	// from address
	From string `json:"from"`
	// to address
	To string `json:"to"`
	// email subject
	Subject string `json:"subject"`
	// message id
	MessageId *string `json:"messageId,omitempty"`
	// creation date
	Created string `json:"created"`
	// creation timestamp
	Time int32 `json:"time"`
	// user account
	User string `json:"user"`
	// transaction type
	Transtype string `json:"transtype"`
	// origin ip
	Origin string `json:"origin"`
	// interface name
	Interface string `json:"interface"`
	// sending zone
	SendingZone string `json:"sendingZone"`
	// email body size in bytes
	BodySize int32 `json:"bodySize"`
	// index of email in the to adderess list
	Seq int32 `json:"seq"`
	// to address this email is being sent to
	Recipient string `json:"recipient"`
	// to address domain
	Domain string `json:"domain"`
	// locked status
	Locked int32 `json:"locked"`
	// lock timestamp
	LockTime string `json:"lockTime"`
	// assigned server
	Assigned string `json:"assigned"`
	// queued timestamp
	Queued string `json:"queued"`
	// mx hostname
	MxHostname string `json:"mxHostname"`
	// mail delivery response
	Response string `json:"response"`
}

type _MailLogEntry MailLogEntry

// NewMailLogEntry instantiates a new MailLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailLogEntry(id int32, id string, from string, to string, subject string, created string, time int32, user string, transtype string, origin string, interface_ string, sendingZone string, bodySize int32, seq int32, recipient string, domain string, locked int32, lockTime string, assigned string, queued string, mxHostname string, response string) *MailLogEntry {
	this := MailLogEntry{}
	this.Id = id
	this.Id = id
	this.From = from
	this.To = to
	this.Subject = subject
	this.Created = created
	this.Time = time
	this.User = user
	this.Transtype = transtype
	this.Origin = origin
	this.Interface = interface_
	this.SendingZone = sendingZone
	this.BodySize = bodySize
	this.Seq = seq
	this.Recipient = recipient
	this.Domain = domain
	this.Locked = locked
	this.LockTime = lockTime
	this.Assigned = assigned
	this.Queued = queued
	this.MxHostname = mxHostname
	this.Response = response
	return &this
}

// NewMailLogEntryWithDefaults instantiates a new MailLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailLogEntryWithDefaults() *MailLogEntry {
	this := MailLogEntry{}
	return &this
}

// GetId returns the Id field value
func (o *MailLogEntry) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MailLogEntry) SetId(v int32) {
	o.Id = v
}

// GetId returns the Id field value
func (o *MailLogEntry) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MailLogEntry) SetId(v string) {
	o.Id = v
}

// GetFrom returns the From field value
func (o *MailLogEntry) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *MailLogEntry) SetFrom(v string) {
	o.From = v
}

// GetTo returns the To field value
func (o *MailLogEntry) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *MailLogEntry) SetTo(v string) {
	o.To = v
}

// GetSubject returns the Subject field value
func (o *MailLogEntry) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *MailLogEntry) SetSubject(v string) {
	o.Subject = v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *MailLogEntry) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *MailLogEntry) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *MailLogEntry) SetMessageId(v string) {
	o.MessageId = &v
}

// GetCreated returns the Created field value
func (o *MailLogEntry) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *MailLogEntry) SetCreated(v string) {
	o.Created = v
}

// GetTime returns the Time field value
func (o *MailLogEntry) GetTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *MailLogEntry) SetTime(v int32) {
	o.Time = v
}

// GetUser returns the User field value
func (o *MailLogEntry) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *MailLogEntry) SetUser(v string) {
	o.User = v
}

// GetTranstype returns the Transtype field value
func (o *MailLogEntry) GetTranstype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Transtype
}

// GetTranstypeOk returns a tuple with the Transtype field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetTranstypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transtype, true
}

// SetTranstype sets field value
func (o *MailLogEntry) SetTranstype(v string) {
	o.Transtype = v
}

// GetOrigin returns the Origin field value
func (o *MailLogEntry) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *MailLogEntry) SetOrigin(v string) {
	o.Origin = v
}

// GetInterface returns the Interface field value
func (o *MailLogEntry) GetInterface() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetInterfaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interface, true
}

// SetInterface sets field value
func (o *MailLogEntry) SetInterface(v string) {
	o.Interface = v
}

// GetSendingZone returns the SendingZone field value
func (o *MailLogEntry) GetSendingZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SendingZone
}

// GetSendingZoneOk returns a tuple with the SendingZone field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetSendingZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SendingZone, true
}

// SetSendingZone sets field value
func (o *MailLogEntry) SetSendingZone(v string) {
	o.SendingZone = v
}

// GetBodySize returns the BodySize field value
func (o *MailLogEntry) GetBodySize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BodySize
}

// GetBodySizeOk returns a tuple with the BodySize field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetBodySizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BodySize, true
}

// SetBodySize sets field value
func (o *MailLogEntry) SetBodySize(v int32) {
	o.BodySize = v
}

// GetSeq returns the Seq field value
func (o *MailLogEntry) GetSeq() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Seq
}

// GetSeqOk returns a tuple with the Seq field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetSeqOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seq, true
}

// SetSeq sets field value
func (o *MailLogEntry) SetSeq(v int32) {
	o.Seq = v
}

// GetRecipient returns the Recipient field value
func (o *MailLogEntry) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *MailLogEntry) SetRecipient(v string) {
	o.Recipient = v
}

// GetDomain returns the Domain field value
func (o *MailLogEntry) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *MailLogEntry) SetDomain(v string) {
	o.Domain = v
}

// GetLocked returns the Locked field value
func (o *MailLogEntry) GetLocked() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetLockedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *MailLogEntry) SetLocked(v int32) {
	o.Locked = v
}

// GetLockTime returns the LockTime field value
func (o *MailLogEntry) GetLockTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockTime
}

// GetLockTimeOk returns a tuple with the LockTime field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetLockTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockTime, true
}

// SetLockTime sets field value
func (o *MailLogEntry) SetLockTime(v string) {
	o.LockTime = v
}

// GetAssigned returns the Assigned field value
func (o *MailLogEntry) GetAssigned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Assigned
}

// GetAssignedOk returns a tuple with the Assigned field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetAssignedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assigned, true
}

// SetAssigned sets field value
func (o *MailLogEntry) SetAssigned(v string) {
	o.Assigned = v
}

// GetQueued returns the Queued field value
func (o *MailLogEntry) GetQueued() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Queued
}

// GetQueuedOk returns a tuple with the Queued field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetQueuedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Queued, true
}

// SetQueued sets field value
func (o *MailLogEntry) SetQueued(v string) {
	o.Queued = v
}

// GetMxHostname returns the MxHostname field value
func (o *MailLogEntry) GetMxHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MxHostname
}

// GetMxHostnameOk returns a tuple with the MxHostname field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetMxHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MxHostname, true
}

// SetMxHostname sets field value
func (o *MailLogEntry) SetMxHostname(v string) {
	o.MxHostname = v
}

// GetResponse returns the Response field value
func (o *MailLogEntry) GetResponse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Response
}

// GetResponseOk returns a tuple with the Response field value
// and a boolean to check if the value has been set.
func (o *MailLogEntry) GetResponseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Response, true
}

// SetResponse sets field value
func (o *MailLogEntry) SetResponse(v string) {
	o.Response = v
}

func (o MailLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_id"] = o.Id
	toSerialize["id"] = o.Id
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	toSerialize["subject"] = o.Subject
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	toSerialize["created"] = o.Created
	toSerialize["time"] = o.Time
	toSerialize["user"] = o.User
	toSerialize["transtype"] = o.Transtype
	toSerialize["origin"] = o.Origin
	toSerialize["interface"] = o.Interface
	toSerialize["sendingZone"] = o.SendingZone
	toSerialize["bodySize"] = o.BodySize
	toSerialize["seq"] = o.Seq
	toSerialize["recipient"] = o.Recipient
	toSerialize["domain"] = o.Domain
	toSerialize["locked"] = o.Locked
	toSerialize["lockTime"] = o.LockTime
	toSerialize["assigned"] = o.Assigned
	toSerialize["queued"] = o.Queued
	toSerialize["mxHostname"] = o.MxHostname
	toSerialize["response"] = o.Response
	return toSerialize, nil
}

func (o *MailLogEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"_id",
		"id",
		"from",
		"to",
		"subject",
		"created",
		"time",
		"user",
		"transtype",
		"origin",
		"interface",
		"sendingZone",
		"bodySize",
		"seq",
		"recipient",
		"domain",
		"locked",
		"lockTime",
		"assigned",
		"queued",
		"mxHostname",
		"response",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMailLogEntry := _MailLogEntry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMailLogEntry)

	if err != nil {
		return err
	}

	*o = MailLogEntry(varMailLogEntry)

	return err
}

type NullableMailLogEntry struct {
	value *MailLogEntry
	isSet bool
}

func (v NullableMailLogEntry) Get() *MailLogEntry {
	return v.value
}

func (v *NullableMailLogEntry) Set(val *MailLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableMailLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableMailLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailLogEntry(val *MailLogEntry) *NullableMailLogEntry {
	return &NullableMailLogEntry{value: val, isSet: true}
}

func (v NullableMailLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


