/* tslint:disable */
/* eslint-disable */
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MailBlockRspamd } from './MailBlockRspamd';
import {
    MailBlockRspamdFromJSON,
    MailBlockRspamdFromJSONTyped,
    MailBlockRspamdToJSON,
} from './MailBlockRspamd';
import type { MailBlockClickHouse } from './MailBlockClickHouse';
import {
    MailBlockClickHouseFromJSON,
    MailBlockClickHouseFromJSONTyped,
    MailBlockClickHouseToJSON,
} from './MailBlockClickHouse';

/**
 * The listing of blocked emails.
 * @export
 * @interface MailBlocks
 */
export interface MailBlocks {
    /**
     * 
     * @type {Array<MailBlockClickHouse>}
     * @memberof MailBlocks
     */
    local: Array<MailBlockClickHouse>;
    /**
     * 
     * @type {Array<MailBlockClickHouse>}
     * @memberof MailBlocks
     */
    mbtrap: Array<MailBlockClickHouse>;
    /**
     * 
     * @type {Array<MailBlockRspamd>}
     * @memberof MailBlocks
     */
    subject: Array<MailBlockRspamd>;
}

/**
 * Check if a given object implements the MailBlocks interface.
 */
export function instanceOfMailBlocks(value: object): value is MailBlocks {
    if (!('local' in value) || value['local'] === undefined) return false;
    if (!('mbtrap' in value) || value['mbtrap'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    return true;
}

export function MailBlocksFromJSON(json: any): MailBlocks {
    return MailBlocksFromJSONTyped(json, false);
}

export function MailBlocksFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailBlocks {
    if (json == null) {
        return json;
    }
    return {
        
        'local': ((json['local'] as Array<any>).map(MailBlockClickHouseFromJSON)),
        'mbtrap': ((json['mbtrap'] as Array<any>).map(MailBlockClickHouseFromJSON)),
        'subject': ((json['subject'] as Array<any>).map(MailBlockRspamdFromJSON)),
    };
}

export function MailBlocksToJSON(value?: MailBlocks | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'local': ((value['local'] as Array<any>).map(MailBlockClickHouseToJSON)),
        'mbtrap': ((value['mbtrap'] as Array<any>).map(MailBlockClickHouseToJSON)),
        'subject': ((value['subject'] as Array<any>).map(MailBlockRspamdToJSON)),
    };
}

