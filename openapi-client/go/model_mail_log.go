/*
MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.1.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MailLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailLog{}

// MailLog Mail log records
type MailLog struct {
	// total number of mail log entries
	Total int32 `json:"total"`
	// number of emails skipped in listing
	Skip int32 `json:"skip"`
	// number of emails to return
	Limit int32 `json:"limit"`
	Emails []MailLogEntry `json:"emails"`
}

// NewMailLog instantiates a new MailLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailLog(total int32, skip int32, limit int32, emails []MailLogEntry) *MailLog {
	this := MailLog{}
	this.Total = total
	this.Skip = skip
	this.Limit = limit
	this.Emails = emails
	return &this
}

// NewMailLogWithDefaults instantiates a new MailLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailLogWithDefaults() *MailLog {
	this := MailLog{}
	return &this
}

// GetTotal returns the Total field value
func (o *MailLog) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MailLog) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MailLog) SetTotal(v int32) {
	o.Total = v
}

// GetSkip returns the Skip field value
func (o *MailLog) GetSkip() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Skip
}

// GetSkipOk returns a tuple with the Skip field value
// and a boolean to check if the value has been set.
func (o *MailLog) GetSkipOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Skip, true
}

// SetSkip sets field value
func (o *MailLog) SetSkip(v int32) {
	o.Skip = v
}

// GetLimit returns the Limit field value
func (o *MailLog) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *MailLog) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *MailLog) SetLimit(v int32) {
	o.Limit = v
}

// GetEmails returns the Emails field value
func (o *MailLog) GetEmails() []MailLogEntry {
	if o == nil {
		var ret []MailLogEntry
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *MailLog) GetEmailsOk() ([]MailLogEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *MailLog) SetEmails(v []MailLogEntry) {
	o.Emails = v
}

func (o MailLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["skip"] = o.Skip
	toSerialize["limit"] = o.Limit
	toSerialize["emails"] = o.Emails
	return toSerialize, nil
}

type NullableMailLog struct {
	value *MailLog
	isSet bool
}

func (v NullableMailLog) Get() *MailLog {
	return v.value
}

func (v *NullableMailLog) Set(val *MailLog) {
	v.value = val
	v.isSet = true
}

func (v NullableMailLog) IsSet() bool {
	return v.isSet
}

func (v *NullableMailLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailLog(val *MailLog) *NullableMailLog {
	return &NullableMailLog{value: val, isSet: true}
}

func (v NullableMailLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


