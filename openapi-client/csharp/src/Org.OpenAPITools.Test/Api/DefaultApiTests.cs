/*
 * MailBaby Email Delivery API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DefaultApi
            //Assert.IsInstanceOf(typeof(DefaultApi), instance);
        }

        
        /// <summary>
        /// Test GetMailOrders
        /// </summary>
        [Test]
        public void GetMailOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMailOrders();
            //Assert.IsInstanceOf(typeof(List<GetMailOrders200ResponseInner>), response, "response is List<GetMailOrders200ResponseInner>");
        }
        
        /// <summary>
        /// Test PingServer
        /// </summary>
        [Test]
        public void PingServerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PingServer();
            
        }
        
        /// <summary>
        /// Test SendAdvMail
        /// </summary>
        [Test]
        public void SendAdvMailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendMailAdv sendMailAdv = null;
            //var response = instance.SendAdvMail(sendMailAdv);
            //Assert.IsInstanceOf(typeof(GenericResponse), response, "response is GenericResponse");
        }
        
        /// <summary>
        /// Test SendMail
        /// </summary>
        [Test]
        public void SendMailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string to = null;
            //string from = null;
            //string subject = null;
            //string body = null;
            //var response = instance.SendMail(to, from, subject, body);
            //Assert.IsInstanceOf(typeof(GenericResponse), response, "response is GenericResponse");
        }
        
        /// <summary>
        /// Test ViewMailLog
        /// </summary>
        [Test]
        public void ViewMailLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string origin = null;
            //string mx = null;
            //string from = null;
            //string to = null;
            //string subject = null;
            //string mailid = null;
            //int? skip = null;
            //int? limit = null;
            //long? startDate = null;
            //long? endDate = null;
            //var response = instance.ViewMailLog(id, origin, mx, from, to, subject, mailid, skip, limit, startDate, endDate);
            //Assert.IsInstanceOf(typeof(MailLog), response, "response is MailLog");
        }
        
    }

}
