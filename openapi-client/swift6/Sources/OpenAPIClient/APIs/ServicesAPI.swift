//
// ServicesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class ServicesAPI {

    /**
     displays a list of mail service orders
     
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [MailOrder]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getMailOrders(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> [MailOrder] {
        return try await getMailOrdersWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     displays a list of mail service orders
     - GET /mail
     - This will return a list of the mail orders you have in our system including their id, status, username, and optional comment.
     - API Key:
       - type: apiKey X-API-KEY (HEADER)
       - name: apiKeyAuth
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[MailOrder]> 
     */
    open class func getMailOrdersWithRequestBuilder(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<[MailOrder]> {
        let localVariablePath = "/mail"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[MailOrder]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
