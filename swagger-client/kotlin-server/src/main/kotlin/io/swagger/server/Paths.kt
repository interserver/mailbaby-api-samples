/**
* MailBaby Email Delivery and Management Service API
* **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
*
* OpenAPI spec version: 1.1.0
* Contact: support@interserver.net
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/package io.swagger.server

import io.ktor.application.ApplicationCall
import io.ktor.http.HttpMethod
import io.ktor.locations.handle
import io.ktor.locations.location
import io.ktor.locations.Location
import io.ktor.util.pipeline.PipelineContext
import io.ktor.routing.Route
import io.ktor.routing.method
import io.swagger.server.models.*;


// NOTE: ktor-location@0.9.0 is missing extension for Route.delete. This includes it.
inline fun <reified T : Any> Route.delete(noinline body: suspend PipelineContext<Unit, ApplicationCall>.(T) -> Unit): Route {
    return location(T::class) {
        method(HttpMethod.Delete) {
            handle(body)
        }
    }
}

object Paths {
    /**
     * Creates a new email deny rule.
     * Adds a new email deny rule into the system to block new emails that match the given criteria
     * @param user  
     * @param type  
     * @param &#x60;data&#x60;  
     */
    @Location("/mail/rules") class addRule(val user: kotlin.String, val type: kotlin.String, val &#x60;data&#x60;: kotlin.String)

    /**
     * Removes an deny mail rule.
     * Removes one of the configured deny mail rules from the system.
     * @param ruleId The ID of the Rules entry. 
     */
    @Location("/mail/rules/{ruleId}") class deleteRule(val ruleId: kotlin.Int)

    /**
     * Removes an email address from the blocked list
     * Removes an email address from the various block lists.

     * @param body  
     */
    @Location("/mail/blocks/delete") class delistBlock(val body: kotlin.String)

    /**
     * displays a list of blocked email addresses
     * 
     */
    @Location("/mail/blocks") class getMailBlocks()

    /**
     * Displays a listing of deny email rules.
     * Returns a listing of all the deny block rules you have configured.
     */
    @Location("/mail/rules") class getRules()

    /**
     * Account usage statistics.
     * Returns information about the usage on your mail accounts.
     * @param time The timeframe for the statistics. (optional)
     */
    @Location("/mail/stats") class getStats(val time: kotlin.String)

    /**
     * displays the mail log
     * Get a listing of the emails sent through this system

     * @param id The ID of your mail order this will be sent through. (optional)
     * @param origin originating ip address sending mail (optional)
     * @param mx mx record mail was sent to (optional)
     * @param from from email address (optional)
     * @param to to/destination email address (optional)
     * @param subject subject containing this string (optional)
     * @param mailid mail id (optional)
     * @param skip number of records to skip for pagination (optional, default to 0)
     * @param limit maximum number of records to return (optional, default to 100)
     * @param startDate earliest date to get emails in unix timestamp format (optional)
     * @param endDate earliest date to get emails in unix timestamp format (optional)
     * @param replyto Reply-To Email Address (optional)
     * @param headerfrom Header From Email Address (optional)
     * @param delivered Limiting the emails to wether or not they were delivered. (optional)
     */
    @Location("/mail/log") class viewMailLog(val id: kotlin.Long, val origin: kotlin.String, val mx: kotlin.String, val from: kotlin.String, val to: kotlin.String, val subject: kotlin.String, val mailid: kotlin.String, val skip: kotlin.Int, val limit: kotlin.Int, val startDate: kotlin.Long, val endDate: kotlin.Long, val replyto: kotlin.String, val headerfrom: kotlin.String, val delivered: kotlin.String)

    /**
     * Sends an Email with Advanced Options
     * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.

Here are 9 examples showing the various ways to call the advsend operation showing the different ways you can pass the to, cc, bcc, and replyto information. The first several examples are all for the application/x-www-form-urlencoded content-type while the later ones are for application/json content-types.

&#x60;&#x60;&#x60;BasicForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;user@domain.com \
--data to&#x3D;support@interserver.net
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;ArrayForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;user@domain.com \
--data &quot;to[0][name]&#x3D;Joe&quot; \
--data &quot;to[0][email]&#x3D;support@interserver.net&quot;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;NameEmailForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;&quot;Joe &lt;user@domain.com&gt;&quot; \
--data to&#x3D;&quot;Joe &lt;support@interserver.net&gt;&quot;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;MultToForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;user@domain.com \
--data &quot;to&#x3D;support@interserver.net, support@interserver.net&quot;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;MultToFullForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;user@domain.com \
--data &quot;to&#x3D;Joe &lt;support@interserver.net&gt;, Joe &lt;support@interserver.net&gt;&quot;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;MultToArrayForm
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;subject&#x3D;Welcome&#x27; \
--data &#x27;body&#x3D;Hello&#x27; \
--data from&#x3D;user@domain.com \
--data &quot;to[0][name]&#x3D;Joe&quot; \
--data &quot;to[0][email]&#x3D;support@interserver.net&quot; \
--data &quot;to[1][name]&#x3D;Joe&quot; \
--data &quot;to[1][email]&#x3D;support@interserver.net&quot;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;BasicJson
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/json&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;{
&quot;subject&quot;: &quot;Welcome&quot;,
&quot;body&quot;: &quot;Hello&quot;,
&quot;from&quot;: &quot;user@domain.com&quot;,
&quot;to&quot;: &quot;support@interserver.net&quot;
}&#x27;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;ArrayJson
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/json&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;{
&quot;subject&quot;: &quot;Welcome&quot;,
&quot;body&quot;: &quot;Hello&quot;,
&quot;from&quot;: {&quot;name&quot;: &quot;Joe&quot;, &quot;email&quot;: &quot;user@domain.com&quot;},
&quot;to&quot;: [{&quot;name&quot;: &quot;Joe&quot;, &quot;email&quot;: &quot;support@interserver.net&quot;}]
}&#x27;
&#x60;&#x60;&#x60;

&#x60;&#x60;&#x60;NameEmailJson
curl -i --request POST --url https://api.mailbaby.net/mail/advsend \
--header &#x27;Accept: application/json&#x27; \
--header &#x27;Content-Type: application/json&#x27; \
--header &#x27;X-API-KEY: YOUR_API_KEY&#x27; \
--data &#x27;{
&quot;subject&quot;: &quot;Welcome&quot;,
&quot;body&quot;: &quot;Hello&quot;,
&quot;from&quot;: &quot;Joe &lt;user@domain.com&gt;&quot;,
&quot;to&quot;: &quot;Joe &lt;support@interserver.net&gt;&quot;
}&#x27;
&#x60;&#x60;&#x60;

     * @param subject  
     * @param body  
     * @param from  
     * @param to  
     * @param replyto  
     * @param cc  
     * @param bcc  
     * @param attachments  
     * @param id  
     */
    @Location("/mail/advsend") class sendAdvMail(val subject: kotlin.String, val body: kotlin.String, val from: EmailAddressTypes, val to: EmailAddressesTypes, val replyto: EmailAddressesTypes, val cc: EmailAddressesTypes, val bcc: EmailAddressesTypes, val attachments: kotlin.Array<MailAttachment>, val id: kotlin.Long)

    /**
     * Sends an Email
     * Sends an email through one of your mail orders.

*Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead.

     * @param to  
     * @param from  
     * @param subject  
     * @param body  
     */
    @Location("/mail/send") class sendMail(val to: kotlin.String, val from: kotlin.String, val subject: kotlin.String, val body: kotlin.String)

    /**
     * displays a list of mail service orders
     * This will return a list of the mail orders you have in our system including their id, status, username, and optional comment.
     */
    @Location("/mail") class getMailOrders()

    /**
     * Checks if the server is running
     * 
     */
    @Location("/ping") class pingServer()

}
