/*
 * MailBaby Email Delivery API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

/// SendMailAdv : Details for an Email



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SendMailAdv {
    /// The subject or title of the email
    #[serde(rename = "subject")]
    pub subject: String,
    /// The main email contents.
    #[serde(rename = "body")]
    pub body: String,
    #[serde(rename = "from")]
    pub from: Box<crate::models::SendMailAdvFrom>,
    /// A list of destionation email addresses to send this to
    #[serde(rename = "to")]
    pub to: Vec<crate::models::SendMailAdvToInner>,
    /// (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
    #[serde(rename = "replyto", skip_serializing_if = "Option::is_none")]
    pub replyto: Option<Vec<crate::models::SendMailAdvReplytoInner>>,
    /// (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
    #[serde(rename = "cc", skip_serializing_if = "Option::is_none")]
    pub cc: Option<Vec<crate::models::SendMailAdvCcInner>>,
    /// (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
    #[serde(rename = "bcc", skip_serializing_if = "Option::is_none")]
    pub bcc: Option<Vec<crate::models::SendMailAdvBccInner>>,
    /// (optional) File attachments to include in the email.  The file contents must be base64 encoded!
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Vec<crate::models::SendMailAdvAttachmentsInner>>,
    /// (optional)  ID of the Mail order within our system to use as the Mail Account.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
}

impl SendMailAdv {
    /// Details for an Email
    pub fn new(subject: String, body: String, from: crate::models::SendMailAdvFrom, to: Vec<crate::models::SendMailAdvToInner>) -> SendMailAdv {
        SendMailAdv {
            subject,
            body,
            from: Box::new(from),
            to,
            replyto: None,
            cc: None,
            bcc: None,
            attachments: None,
            id: None,
        }
    }
}


