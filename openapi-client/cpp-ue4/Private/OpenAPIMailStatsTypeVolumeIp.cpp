/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIMailStatsTypeVolumeIp.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIMailStatsTypeVolumeIp::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (_1111.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("1.1.1.1")); WriteJsonValue(Writer, _1111.GetValue());
	}
	if (_2222.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("2.2.2.2")); WriteJsonValue(Writer, _2222.GetValue());
	}
	if (_3333.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("3.3.3.3")); WriteJsonValue(Writer, _3333.GetValue());
	}
	if (_4444.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("4.4.4.4")); WriteJsonValue(Writer, _4444.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIMailStatsTypeVolumeIp::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("1.1.1.1"), _1111);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("2.2.2.2"), _2222);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("3.3.3.3"), _3333);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("4.4.4.4"), _4444);

	return ParseSuccess;
}

}
