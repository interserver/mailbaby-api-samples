/*
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MailBlockClickHouse : A block entry from the clickhouse mailblocks server.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MailBlockClickHouse {
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "from")]
    pub from: String,
    #[serde(rename = "messageId")]
    pub message_id: String,
    #[serde(rename = "subject")]
    pub subject: String,
    #[serde(rename = "to")]
    pub to: String,
}

impl MailBlockClickHouse {
    /// A block entry from the clickhouse mailblocks server.
    pub fn new(date: String, from: String, message_id: String, subject: String, to: String) -> MailBlockClickHouse {
        MailBlockClickHouse {
            date,
            from,
            message_id,
            subject,
            to,
        }
    }
}

