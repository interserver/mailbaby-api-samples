/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n# Overview\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n# Authentication\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Details for an Email
 */
public class OASSendMailAdv implements OAS.MappedProperties {
    /**
     * The subject or title of the email
     * @return subject
     */
    public String subject { get; set; }

    /**
     * The main email contents.
     * @return body
     */
    public String body { get; set; }

    /**
     * Get r_from
     * @return r_from
     */
    public OASEmailAddressName r_from { get; set; }

    /**
     * A list of destionation email addresses to send this to
     * @return to
     */
    public List<OASEmailAddressName> to { get; set; }

    /**
     * (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
     * @return replyto
     */
    public List<OASEmailAddressName> replyto { get; set; }

    /**
     * (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
     * @return cc
     */
    public List<OASEmailAddressName> cc { get; set; }

    /**
     * (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
     * @return bcc
     */
    public List<OASEmailAddressName> bcc { get; set; }

    /**
     * (optional) File attachments to include in the email.  The file contents must be base64 encoded!
     * @return attachments
     */
    public List<OASMailAttachment> attachments { get; set; }

    /**
     * (optional)  ID of the Mail order within our system to use as the Mail Account.
     * @return id
     */
    public Long id { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'from' => 'r_from'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSendMailAdv() {
        to = new List<OASEmailAddressName>();
        replyto = new List<OASEmailAddressName>();
        cc = new List<OASEmailAddressName>();
        bcc = new List<OASEmailAddressName>();
        attachments = new List<OASMailAttachment>();
    }

    public static OASSendMailAdv getExample() {
        OASSendMailAdv sendMailAdv = new OASSendMailAdv();
          sendMailAdv.subject = 'Your Package has been Delivered!';
          sendMailAdv.body = 'The package you ordered on 2021-01-23 has been delivered. If the package is broken into many pieces, please blaim someone else.';
          sendMailAdv.r_from = OASEmailAddressName.getExample();
          sendMailAdv.to = new List<OASEmailAddressName>{OASEmailAddressName.getExample()};
          sendMailAdv.replyto = new List<OASEmailAddressName>{OASEmailAddressName.getExample()};
          sendMailAdv.cc = new List<OASEmailAddressName>{OASEmailAddressName.getExample()};
          sendMailAdv.bcc = new List<OASEmailAddressName>{OASEmailAddressName.getExample()};
          sendMailAdv.attachments = new List<OASMailAttachment>{OASMailAttachment.getExample()};
          sendMailAdv.id = 5000L;
        return sendMailAdv;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSendMailAdv) {           
            OASSendMailAdv sendMailAdv = (OASSendMailAdv) obj;
            return this.subject == sendMailAdv.subject
                && this.body == sendMailAdv.body
                && this.r_from == sendMailAdv.r_from
                && this.to == sendMailAdv.to
                && this.replyto == sendMailAdv.replyto
                && this.cc == sendMailAdv.cc
                && this.bcc == sendMailAdv.bcc
                && this.attachments == sendMailAdv.attachments
                && this.id == sendMailAdv.id;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (subject == null ? 0 : System.hashCode(subject));
        hashCode = (17 * hashCode) + (body == null ? 0 : System.hashCode(body));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        hashCode = (17 * hashCode) + (replyto == null ? 0 : System.hashCode(replyto));
        hashCode = (17 * hashCode) + (cc == null ? 0 : System.hashCode(cc));
        hashCode = (17 * hashCode) + (bcc == null ? 0 : System.hashCode(bcc));
        hashCode = (17 * hashCode) + (attachments == null ? 0 : System.hashCode(attachments));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        return hashCode;
    }
}

