/* tslint:disable */
/* eslint-disable */
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MailStatsTypeVolume } from './MailStatsTypeVolume';
import {
    MailStatsTypeVolumeFromJSON,
    MailStatsTypeVolumeFromJSONTyped,
    MailStatsTypeVolumeToJSON,
    MailStatsTypeVolumeToJSONTyped,
} from './MailStatsTypeVolume';

/**
 * Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
 * @export
 * @interface MailStatsType
 */
export interface MailStatsType {
    /**
     * 
     * @type {string}
     * @memberof MailStatsType
     */
    time?: MailStatsTypeTimeEnum;
    /**
     * 
     * @type {number}
     * @memberof MailStatsType
     */
    usage?: number;
    /**
     * 
     * @type {string}
     * @memberof MailStatsType
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof MailStatsType
     */
    currencySymbol?: string;
    /**
     * 
     * @type {number}
     * @memberof MailStatsType
     */
    cost?: number;
    /**
     * 
     * @type {number}
     * @memberof MailStatsType
     */
    received?: number;
    /**
     * 
     * @type {number}
     * @memberof MailStatsType
     */
    sent?: number;
    /**
     * 
     * @type {MailStatsTypeVolume}
     * @memberof MailStatsType
     */
    volume?: MailStatsTypeVolume;
}


/**
 * @export
 */
export const MailStatsTypeTimeEnum = {
    All: 'all',
    Billing: 'billing',
    Month: 'month',
    _7d: '7d',
    _24h: '24h',
    Today: 'today',
    _1h: '1h'
} as const;
export type MailStatsTypeTimeEnum = typeof MailStatsTypeTimeEnum[keyof typeof MailStatsTypeTimeEnum];


/**
 * Check if a given object implements the MailStatsType interface.
 */
export function instanceOfMailStatsType(value: object): value is MailStatsType {
    return true;
}

export function MailStatsTypeFromJSON(json: any): MailStatsType {
    return MailStatsTypeFromJSONTyped(json, false);
}

export function MailStatsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailStatsType {
    if (json == null) {
        return json;
    }
    return {
        
        'time': json['time'] == null ? undefined : json['time'],
        'usage': json['usage'] == null ? undefined : json['usage'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'currencySymbol': json['currencySymbol'] == null ? undefined : json['currencySymbol'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'received': json['received'] == null ? undefined : json['received'],
        'sent': json['sent'] == null ? undefined : json['sent'],
        'volume': json['volume'] == null ? undefined : MailStatsTypeVolumeFromJSON(json['volume']),
    };
}

export function MailStatsTypeToJSON(json: any): MailStatsType {
    return MailStatsTypeToJSONTyped(json, false);
}

export function MailStatsTypeToJSONTyped(value?: MailStatsType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'time': value['time'],
        'usage': value['usage'],
        'currency': value['currency'],
        'currencySymbol': value['currencySymbol'],
        'cost': value['cost'],
        'received': value['received'],
        'sent': value['sent'],
        'volume': MailStatsTypeVolumeToJSON(value['volume']),
    };
}

