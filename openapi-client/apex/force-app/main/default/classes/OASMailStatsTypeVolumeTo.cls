/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n# Overview\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n# Authentication\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASMailStatsTypeVolumeTo
 */
public class OASMailStatsTypeVolumeTo implements OAS.MappedProperties {
    /**
     * Get clientdomainCom
     * @return clientdomainCom
     */
    public Integer clientdomainCom { get; set; }

    /**
     * Get usersiteNet
     * @return usersiteNet
     */
    public Integer usersiteNet { get; set; }

    /**
     * Get salescompanyCom
     * @return salescompanyCom
     */
    public Integer salescompanyCom { get; set; }

    /**
     * Get clientanothersiteCom
     * @return clientanothersiteCom
     */
    public Integer clientanothersiteCom { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client@domain.com' => 'clientdomainCom',
        'user@site.net' => 'usersiteNet',
        'sales@company.com' => 'salescompanyCom',
        'client@anothersite.com' => 'clientanothersiteCom'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client@domain.com' => 'clientdomainCom',
        'user@site.net' => 'usersiteNet',
        'sales@company.com' => 'salescompanyCom',
        'client@anothersite.com' => 'clientanothersiteCom'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client@domain.com' => 'clientdomainCom',
        'user@site.net' => 'usersiteNet',
        'sales@company.com' => 'salescompanyCom',
        'client@anothersite.com' => 'clientanothersiteCom'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client@domain.com' => 'clientdomainCom',
        'user@site.net' => 'usersiteNet',
        'sales@company.com' => 'salescompanyCom',
        'client@anothersite.com' => 'clientanothersiteCom'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMailStatsTypeVolumeTo getExample() {
        OASMailStatsTypeVolumeTo mailStatsTypeVolumeTo = new OASMailStatsTypeVolumeTo();
          mailStatsTypeVolumeTo.clientdomainCom = 0;
          mailStatsTypeVolumeTo.usersiteNet = 0;
          mailStatsTypeVolumeTo.salescompanyCom = 0;
          mailStatsTypeVolumeTo.clientanothersiteCom = 0;
        return mailStatsTypeVolumeTo;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMailStatsTypeVolumeTo) {           
            OASMailStatsTypeVolumeTo mailStatsTypeVolumeTo = (OASMailStatsTypeVolumeTo) obj;
            return this.clientdomainCom == mailStatsTypeVolumeTo.clientdomainCom
                && this.usersiteNet == mailStatsTypeVolumeTo.usersiteNet
                && this.salescompanyCom == mailStatsTypeVolumeTo.salescompanyCom
                && this.clientanothersiteCom == mailStatsTypeVolumeTo.clientanothersiteCom;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (clientdomainCom == null ? 0 : System.hashCode(clientdomainCom));
        hashCode = (17 * hashCode) + (usersiteNet == null ? 0 : System.hashCode(usersiteNet));
        hashCode = (17 * hashCode) + (salescompanyCom == null ? 0 : System.hashCode(salescompanyCom));
        hashCode = (17 * hashCode) + (clientanothersiteCom == null ? 0 : System.hashCode(clientanothersiteCom));
        return hashCode;
    }
}

