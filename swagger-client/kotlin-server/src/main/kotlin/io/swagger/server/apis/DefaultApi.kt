/**
* MailBaby Email Delivery API
* **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
*
* OpenAPI spec version: 1.1.0
* Contact: support@interserver.net
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/package io.swagger.server.apis

import com.google.gson.Gson
import io.ktor.application.call
import io.ktor.auth.UserIdPrincipal
import io.ktor.auth.authentication
import io.ktor.auth.authenticate
import io.ktor.auth.OAuthAccessTokenResponse
import io.ktor.auth.OAuthServerSettings
import io.ktor.http.ContentType
import io.ktor.http.HttpStatusCode
import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.delete
import io.ktor.locations.get
import io.ktor.locations.post
import io.ktor.locations.put
import io.ktor.locations.patch
import io.ktor.response.respond
import io.ktor.response.respondText
import io.ktor.routing.Route
import io.ktor.routing.route

import io.swagger.server.Paths
import io.swagger.server.infrastructure.ApiPrincipal


import io.swagger.server.models.GenericResponse
import io.swagger.server.models.InlineResponse200
import io.swagger.server.models.InlineResponse401
import io.swagger.server.models.MailLog
import io.swagger.server.models.SendMail
import io.swagger.server.models.SendMailAdv
import io.swagger.server.models.SendMailAdvAttachments
import io.swagger.server.models.SendMailAdvBcc
import io.swagger.server.models.SendMailAdvCc
import io.swagger.server.models.SendMailAdvFrom
import io.swagger.server.models.SendMailAdvReplyto
import io.swagger.server.models.SendMailAdvTo

@KtorExperimentalLocationsAPI
fun Route.DefaultApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()
    get<Paths.getMailOrders> {  _: Paths.getMailOrders ->
        val principal = call.authentication.principal<ApiPrincipal>()
        if (principal == null) {
            call.respond(HttpStatusCode.Unauthorized)
        } else {
            val exampleContentType = "application/json"
            val exampleContentString = """[ {
  "password" : "guest123",
  "comment" : "main mail account",
  "id" : 1234,
  "status" : "active",
  "username" : "mb1234"
}, {
  "password" : "guest123",
  "comment" : "main mail account",
  "id" : 1234,
  "status" : "active",
  "username" : "mb1234"
} ]"""
            
            when(exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }        }
    }
    get<Paths.pingServer> {  _: Paths.pingServer ->
        call.respond(HttpStatusCode.NotImplemented)
    }
    post<Paths.sendAdvMail> {  _: Paths.sendAdvMail ->
        val principal = call.authentication.principal<ApiPrincipal>()
        if (principal == null) {
            call.respond(HttpStatusCode.Unauthorized)
        } else {
            val exampleContentType = "application/json"
            val exampleContentString = """{
  "text" : "The command completed successfully.",
  "status" : "ok"
}"""
            
            when(exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }        }
    }
    post<Paths.sendMail> {  _: Paths.sendMail ->
        val principal = call.authentication.principal<ApiPrincipal>()
        if (principal == null) {
            call.respond(HttpStatusCode.Unauthorized)
        } else {
            val exampleContentType = "application/json"
            val exampleContentString = """{
  "text" : "The command completed successfully.",
  "status" : "ok"
}"""
            
            when(exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }        }
    }
    get<Paths.viewMailLog> {  _: Paths.viewMailLog ->
        val principal = call.authentication.principal<ApiPrincipal>()
        if (principal == null) {
            call.respond(HttpStatusCode.Unauthorized)
        } else {
            val exampleContentType = "application/json"
            val exampleContentString = """{
  "emails" : [ {
    "subject" : "sell 0.005 shares",
    "created" : "2021-10-14 08:50:10",
    "transtype" : "ESMTPSA",
    "origin" : "199.231.189.154",
    "queued" : "2021-10-14T12:50:15.487Z",
    "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
    "sendingZone" : "interserver",
    "mxHostname" : "mx.j.is.cc",
    "interface" : "feeder",
    "lockTime" : 1634215818533,
    "response" : "250 2.0.0 Ok queued as C91D83E128C",
    "domain" : "interserver.net",
    "bodySize" : 63,
    "recipient" : "client@isp.com",
    "from" : "person@mysite.com",
    "assigned" : "relay1",
    "_id" : 103172,
    "id" : "17c7eda538e0005d03",
    "to" : "client@isp.com",
    "time" : 1634215809,
    "locked" : 1,
    "user" : "mb5658",
    "seq" : 1
  }, {
    "subject" : "sell 0.005 shares",
    "created" : "2021-10-14 08:50:10",
    "transtype" : "ESMTPSA",
    "origin" : "199.231.189.154",
    "queued" : "2021-10-14T12:50:15.487Z",
    "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
    "sendingZone" : "interserver",
    "mxHostname" : "mx.j.is.cc",
    "interface" : "feeder",
    "lockTime" : 1634215818533,
    "response" : "250 2.0.0 Ok queued as C91D83E128C",
    "domain" : "interserver.net",
    "bodySize" : 63,
    "recipient" : "client@isp.com",
    "from" : "person@mysite.com",
    "assigned" : "relay1",
    "_id" : 103172,
    "id" : "17c7eda538e0005d03",
    "to" : "client@isp.com",
    "time" : 1634215809,
    "locked" : 1,
    "user" : "mb5658",
    "seq" : 1
  } ],
  "total" : 10234,
  "limit" : 100,
  "skip" : 0
}"""
            
            when(exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }        }
    }
}
