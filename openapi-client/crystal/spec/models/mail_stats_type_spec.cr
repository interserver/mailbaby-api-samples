# #MailBaby Email Delivery and Management Service API
#
##**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
#
#The version of the OpenAPI document: 1.1.0
#Contact: support@interserver.net
#Generated by: https://openapi-generator.tech
#Generator version: 7.16.0
#

require "../spec_helper"

# Unit tests for OpenAPIClient::MailStatsType
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
Spectator.describe OpenAPIClient::MailStatsType do

  describe "test an instance of MailStatsType" do
    skip "should create an instance of MailStatsType" do
      #instance = OpenAPIClient::MailStatsType.new
      #expect(instance).to be_instance_of(OpenAPIClient::MailStatsType)
    end
  end
  describe "test attribute 'time'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Petstore::EnumTest::EnumAttributeValidator.new("String", ["all", "billing", "month", "7d", "24h", "today", "1h"])
      # validator.allowable_values.each do |value|
      #   expect { instance.time = value }.not_to raise_error
      # end
    end
  end

  describe "test attribute 'usage'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'currency'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'currency_symbol'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'cost'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'received'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'sent'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'volume'" do
    skip "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
