/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The SendMail model module.
 * @module model/SendMail
 * @version 1.1.0
 */
export default class SendMail {
  /**
   * Constructs a new <code>SendMail</code>.
   * Details for an Email
   * @alias module:model/SendMail
   * @class
   * @param to {String} The Contact whom is the primary recipient of this email.
   * @param from {String} The contact whom is the this email is from.
   * @param subject {String} The subject or title of the email
   * @param body {String} The main email contents.
   */
  constructor(to, from, subject, body) {
    this.to = to;
    this.from = from;
    this.subject = subject;
    this.body = body;
  }

  /**
   * Constructs a <code>SendMail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SendMail} obj Optional instance to populate.
   * @return {module:model/SendMail} The populated <code>SendMail</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SendMail();
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], 'String');
      if (data.hasOwnProperty('from'))
        obj.from = ApiClient.convertToType(data['from'], 'String');
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
    }
    return obj;
  }
}

/**
 * The Contact whom is the primary recipient of this email.
 * @member {String} to
 */
SendMail.prototype.to = undefined;

/**
 * The contact whom is the this email is from.
 * @member {String} from
 */
SendMail.prototype.from = undefined;

/**
 * The subject or title of the email
 * @member {String} subject
 */
SendMail.prototype.subject = undefined;

/**
 * The main email contents.
 * @member {String} body
 */
SendMail.prototype.body = undefined;

