/* 
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing HistoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class HistoryApiTests
    {
        private HistoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new HistoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HistoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' HistoryApi
            //Assert.IsInstanceOfType(typeof(HistoryApi), instance, "instance is a HistoryApi");
        }

        /// <summary>
        /// Test GetStats
        /// </summary>
        [Test]
        public void GetStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string time = null;
            //var response = instance.GetStats(time);
            //Assert.IsInstanceOf<MailStatsType> (response, "response is MailStatsType");
        }
        /// <summary>
        /// Test ViewMailLog
        /// </summary>
        [Test]
        public void ViewMailLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string origin = null;
            //string mx = null;
            //string from = null;
            //string to = null;
            //string subject = null;
            //string mailid = null;
            //int? skip = null;
            //int? limit = null;
            //long? startDate = null;
            //long? endDate = null;
            //string replyto = null;
            //string headerfrom = null;
            //string delivered = null;
            //var response = instance.ViewMailLog(id, origin, mx, from, to, subject, mailid, skip, limit, startDate, endDate, replyto, headerfrom, delivered);
            //Assert.IsInstanceOf<MailLog> (response, "response is MailLog");
        }
    }

}
