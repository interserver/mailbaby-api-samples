/* 
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// MailStatsTypeVolumeIp
    /// </summary>
    [DataContract]
        public partial class MailStatsTypeVolumeIp :  IEquatable<MailStatsTypeVolumeIp>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MailStatsTypeVolumeIp" /> class.
        /// </summary>
        /// <param name="_1111">_1111.</param>
        /// <param name="_2222">_2222.</param>
        /// <param name="_3333">_3333.</param>
        /// <param name="_4444">_4444.</param>
        public MailStatsTypeVolumeIp(int? _1111 = default(int?), int? _2222 = default(int?), int? _3333 = default(int?), int? _4444 = default(int?))
        {
            this._1111 = _1111;
            this._2222 = _2222;
            this._3333 = _3333;
            this._4444 = _4444;
        }
        
        /// <summary>
        /// Gets or Sets _1111
        /// </summary>
        [DataMember(Name="1.1.1.1", EmitDefaultValue=false)]
        public int? _1111 { get; set; }

        /// <summary>
        /// Gets or Sets _2222
        /// </summary>
        [DataMember(Name="2.2.2.2", EmitDefaultValue=false)]
        public int? _2222 { get; set; }

        /// <summary>
        /// Gets or Sets _3333
        /// </summary>
        [DataMember(Name="3.3.3.3", EmitDefaultValue=false)]
        public int? _3333 { get; set; }

        /// <summary>
        /// Gets or Sets _4444
        /// </summary>
        [DataMember(Name="4.4.4.4", EmitDefaultValue=false)]
        public int? _4444 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MailStatsTypeVolumeIp {\n");
            sb.Append("  _1111: ").Append(_1111).Append("\n");
            sb.Append("  _2222: ").Append(_2222).Append("\n");
            sb.Append("  _3333: ").Append(_3333).Append("\n");
            sb.Append("  _4444: ").Append(_4444).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MailStatsTypeVolumeIp);
        }

        /// <summary>
        /// Returns true if MailStatsTypeVolumeIp instances are equal
        /// </summary>
        /// <param name="input">Instance of MailStatsTypeVolumeIp to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MailStatsTypeVolumeIp input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._1111 == input._1111 ||
                    (this._1111 != null &&
                    this._1111.Equals(input._1111))
                ) && 
                (
                    this._2222 == input._2222 ||
                    (this._2222 != null &&
                    this._2222.Equals(input._2222))
                ) && 
                (
                    this._3333 == input._3333 ||
                    (this._3333 != null &&
                    this._3333.Equals(input._3333))
                ) && 
                (
                    this._4444 == input._4444 ||
                    (this._4444 != null &&
                    this._4444.Equals(input._4444))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._1111 != null)
                    hashCode = hashCode * 59 + this._1111.GetHashCode();
                if (this._2222 != null)
                    hashCode = hashCode * 59 + this._2222.GetHashCode();
                if (this._3333 != null)
                    hashCode = hashCode * 59 + this._3333.GetHashCode();
                if (this._4444 != null)
                    hashCode = hashCode * 59 + this._4444.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
