# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MailBabyAPI.Model.SendMailAdv do
  @moduledoc """
  Details for an Email
  """

  @derive [Poison.Encoder]
  defstruct [
    :"subject",
    :"body",
    :"from",
    :"to",
    :"id",
    :"replyto",
    :"cc",
    :"bcc",
    :"attachments"
  ]

  @type t :: %__MODULE__{
    :"subject" => String.t,
    :"body" => String.t,
    :"from" => [MailBabyAPI.Model.SendMailAdvFrom.t],
    :"to" => [MailBabyAPI.Model.MailContact.t],
    :"id" => integer(),
    :"replyto" => [MailBabyAPI.Model.MailContact.t] | nil,
    :"cc" => [MailBabyAPI.Model.MailContact.t] | nil,
    :"bcc" => [MailBabyAPI.Model.MailContact.t] | nil,
    :"attachments" => [MailBabyAPI.Model.MailAttachment.t] | nil
  }
end

defimpl Poison.Decoder, for: MailBabyAPI.Model.SendMailAdv do
  import MailBabyAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"from", :list, MailBabyAPI.Model.SendMailAdvFrom, options)
    |> deserialize(:"to", :list, MailBabyAPI.Model.MailContact, options)
    |> deserialize(:"replyto", :list, MailBabyAPI.Model.MailContact, options)
    |> deserialize(:"cc", :list, MailBabyAPI.Model.MailContact, options)
    |> deserialize(:"bcc", :list, MailBabyAPI.Model.MailContact, options)
    |> deserialize(:"attachments", :list, MailBabyAPI.Model.MailAttachment, options)
  end
end

