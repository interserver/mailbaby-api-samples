/** MailBaby Email Delivery and Management Service API
  * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
  *
  * The version of the OpenAPI document: 1.1.0
  * Contact: support@interserver.net
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client.models

import io.circe.*
import io.circe.syntax.*
import io.circe.{Decoder, Encoder}


/** 
  * @param `1_1_1_1` 
  * @param `2_2_2_2` 
  * @param `3_3_3_3` 
  * @param `4_4_4_4` 
  */
case class MailStatsTypeVolumeIp(
    `1_1_1_1`: Option[Int] = None,
    `2_2_2_2`: Option[Int] = None,
    `3_3_3_3`: Option[Int] = None,
    `4_4_4_4`: Option[Int] = None
)
  
object MailStatsTypeVolumeIp {
  given encoderMailStatsTypeVolumeIp: Encoder[MailStatsTypeVolumeIp] = Encoder.instance { t =>
    Json.fromFields{
      Seq(
        t.`1_1_1_1`.map(v => "1.1.1.1" -> v.asJson),
        t.`2_2_2_2`.map(v => "2.2.2.2" -> v.asJson),
        t.`3_3_3_3`.map(v => "3.3.3.3" -> v.asJson),
        t.`4_4_4_4`.map(v => "4.4.4.4" -> v.asJson)
      ).flatten
    }
  }
  given decoderMailStatsTypeVolumeIp: Decoder[MailStatsTypeVolumeIp] = Decoder.instance { c =>
    for {
      `1_1_1_1` <- c.downField("1.1.1.1").as[Option[Int]]
      `2_2_2_2` <- c.downField("2.2.2.2").as[Option[Int]]
      `3_3_3_3` <- c.downField("3.3.3.3").as[Option[Int]]
      `4_4_4_4` <- c.downField("4.4.4.4").as[Option[Int]]
    } yield MailStatsTypeVolumeIp(
      `1_1_1_1` = `1_1_1_1`,
      `2_2_2_2` = `2_2_2_2`,
      `3_3_3_3` = `3_3_3_3`,
      `4_4_4_4` = `4_4_4_4`
    )
  }
}

