note
 description:"[
		MailBaby Email Delivery API
 		**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
  		The version of the OpenAPI document: 1.0.0
 	    Contact: support@interserver.net

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MAIL_LOG_ENTRY




feature --Access

 	var_id: INTEGER_32
    	 -- internal db id
    id: detachable STRING_32
      -- mail id
    var_from: detachable STRING_32
      -- from address
    to: detachable STRING_32
      -- to address
    subject: detachable STRING_32
      -- email subject
    message_id: detachable STRING_32
      -- message id
    created: detachable STRING_32
      -- creation date
 	time: INTEGER_32
    	 -- creation timestamp
    user: detachable STRING_32
      -- user account
    transtype: detachable STRING_32
      -- transaction type
    transhost: detachable STRING_32
      -- transaction host
    originhost: detachable STRING_32
      -- origin host
    origin: detachable STRING_32
      -- origin ip
    interface: detachable STRING_32
      -- interface name
    date: detachable STRING_32
      -- date processed
    sending_zone: detachable STRING_32
      -- sending zone
 	body_size: INTEGER_32
    	 -- email body size in bytes
    source_md5: detachable STRING_32
      -- md5 sum of the email
 	seq: INTEGER_32
    	 -- delivery sequency
    domain: detachable STRING_32
      -- to address domain
    recipient: detachable STRING_32
      -- email receiver address
 	locked: INTEGER_32
    	 -- locked status
 	lock_time: INTEGER_32
    	 -- lock timestamp
    assigned: detachable STRING_32
      -- assigned server
    queued: detachable STRING_32
      -- queued timestamp
    var_lock: detachable STRING_32
      -- lock id
    logger: detachable STRING_32
      -- logger
 	mx_port: INTEGER_32
    	 -- mx port number
    connection_key: detachable STRING_32
      -- connection key
    mx_hostname: detachable STRING_32
      -- mx hostname
    sent_body_hash: detachable STRING_32
      -- body hash
 	sent_body_size: INTEGER_32
    	 -- sent body size in bytes
 	md5_match: INTEGER_32
    	 -- md5 checksum matching result

feature -- Change Element

    set_var_id (a_name: like var_id)
        -- Set 'var_id' with 'a_name'.
      do
        var_id := a_name
      ensure
        var_id_set: var_id = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_var_from (a_name: like var_from)
        -- Set 'var_from' with 'a_name'.
      do
        var_from := a_name
      ensure
        var_from_set: var_from = a_name
      end

    set_to (a_name: like to)
        -- Set 'to' with 'a_name'.
      do
        to := a_name
      ensure
        to_set: to = a_name
      end

    set_subject (a_name: like subject)
        -- Set 'subject' with 'a_name'.
      do
        subject := a_name
      ensure
        subject_set: subject = a_name
      end

    set_message_id (a_name: like message_id)
        -- Set 'message_id' with 'a_name'.
      do
        message_id := a_name
      ensure
        message_id_set: message_id = a_name
      end

    set_created (a_name: like created)
        -- Set 'created' with 'a_name'.
      do
        created := a_name
      ensure
        created_set: created = a_name
      end

    set_time (a_name: like time)
        -- Set 'time' with 'a_name'.
      do
        time := a_name
      ensure
        time_set: time = a_name
      end

    set_user (a_name: like user)
        -- Set 'user' with 'a_name'.
      do
        user := a_name
      ensure
        user_set: user = a_name
      end

    set_transtype (a_name: like transtype)
        -- Set 'transtype' with 'a_name'.
      do
        transtype := a_name
      ensure
        transtype_set: transtype = a_name
      end

    set_transhost (a_name: like transhost)
        -- Set 'transhost' with 'a_name'.
      do
        transhost := a_name
      ensure
        transhost_set: transhost = a_name
      end

    set_originhost (a_name: like originhost)
        -- Set 'originhost' with 'a_name'.
      do
        originhost := a_name
      ensure
        originhost_set: originhost = a_name
      end

    set_origin (a_name: like origin)
        -- Set 'origin' with 'a_name'.
      do
        origin := a_name
      ensure
        origin_set: origin = a_name
      end

    set_interface (a_name: like interface)
        -- Set 'interface' with 'a_name'.
      do
        interface := a_name
      ensure
        interface_set: interface = a_name
      end

    set_date (a_name: like date)
        -- Set 'date' with 'a_name'.
      do
        date := a_name
      ensure
        date_set: date = a_name
      end

    set_sending_zone (a_name: like sending_zone)
        -- Set 'sending_zone' with 'a_name'.
      do
        sending_zone := a_name
      ensure
        sending_zone_set: sending_zone = a_name
      end

    set_body_size (a_name: like body_size)
        -- Set 'body_size' with 'a_name'.
      do
        body_size := a_name
      ensure
        body_size_set: body_size = a_name
      end

    set_source_md5 (a_name: like source_md5)
        -- Set 'source_md5' with 'a_name'.
      do
        source_md5 := a_name
      ensure
        source_md5_set: source_md5 = a_name
      end

    set_seq (a_name: like seq)
        -- Set 'seq' with 'a_name'.
      do
        seq := a_name
      ensure
        seq_set: seq = a_name
      end

    set_domain (a_name: like domain)
        -- Set 'domain' with 'a_name'.
      do
        domain := a_name
      ensure
        domain_set: domain = a_name
      end

    set_recipient (a_name: like recipient)
        -- Set 'recipient' with 'a_name'.
      do
        recipient := a_name
      ensure
        recipient_set: recipient = a_name
      end

    set_locked (a_name: like locked)
        -- Set 'locked' with 'a_name'.
      do
        locked := a_name
      ensure
        locked_set: locked = a_name
      end

    set_lock_time (a_name: like lock_time)
        -- Set 'lock_time' with 'a_name'.
      do
        lock_time := a_name
      ensure
        lock_time_set: lock_time = a_name
      end

    set_assigned (a_name: like assigned)
        -- Set 'assigned' with 'a_name'.
      do
        assigned := a_name
      ensure
        assigned_set: assigned = a_name
      end

    set_queued (a_name: like queued)
        -- Set 'queued' with 'a_name'.
      do
        queued := a_name
      ensure
        queued_set: queued = a_name
      end

    set_var_lock (a_name: like var_lock)
        -- Set 'var_lock' with 'a_name'.
      do
        var_lock := a_name
      ensure
        var_lock_set: var_lock = a_name
      end

    set_logger (a_name: like logger)
        -- Set 'logger' with 'a_name'.
      do
        logger := a_name
      ensure
        logger_set: logger = a_name
      end

    set_mx_port (a_name: like mx_port)
        -- Set 'mx_port' with 'a_name'.
      do
        mx_port := a_name
      ensure
        mx_port_set: mx_port = a_name
      end

    set_connection_key (a_name: like connection_key)
        -- Set 'connection_key' with 'a_name'.
      do
        connection_key := a_name
      ensure
        connection_key_set: connection_key = a_name
      end

    set_mx_hostname (a_name: like mx_hostname)
        -- Set 'mx_hostname' with 'a_name'.
      do
        mx_hostname := a_name
      ensure
        mx_hostname_set: mx_hostname = a_name
      end

    set_sent_body_hash (a_name: like sent_body_hash)
        -- Set 'sent_body_hash' with 'a_name'.
      do
        sent_body_hash := a_name
      ensure
        sent_body_hash_set: sent_body_hash = a_name
      end

    set_sent_body_size (a_name: like sent_body_size)
        -- Set 'sent_body_size' with 'a_name'.
      do
        sent_body_size := a_name
      ensure
        sent_body_size_set: sent_body_size = a_name
      end

    set_md5_match (a_name: like md5_match)
        -- Set 'md5_match' with 'a_name'.
      do
        md5_match := a_name
      ensure
        md5_match_set: md5_match = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MAIL_LOG_ENTRY%N")
        if attached var_id as l_var_id then
          Result.append ("%Nvar_id:")
          Result.append (l_var_id.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached var_from as l_var_from then
          Result.append ("%Nvar_from:")
          Result.append (l_var_from.out)
          Result.append ("%N")
        end
        if attached to as l_to then
          Result.append ("%Nto:")
          Result.append (l_to.out)
          Result.append ("%N")
        end
        if attached subject as l_subject then
          Result.append ("%Nsubject:")
          Result.append (l_subject.out)
          Result.append ("%N")
        end
        if attached message_id as l_message_id then
          Result.append ("%Nmessage_id:")
          Result.append (l_message_id.out)
          Result.append ("%N")
        end
        if attached created as l_created then
          Result.append ("%Ncreated:")
          Result.append (l_created.out)
          Result.append ("%N")
        end
        if attached time as l_time then
          Result.append ("%Ntime:")
          Result.append (l_time.out)
          Result.append ("%N")
        end
        if attached user as l_user then
          Result.append ("%Nuser:")
          Result.append (l_user.out)
          Result.append ("%N")
        end
        if attached transtype as l_transtype then
          Result.append ("%Ntranstype:")
          Result.append (l_transtype.out)
          Result.append ("%N")
        end
        if attached transhost as l_transhost then
          Result.append ("%Ntranshost:")
          Result.append (l_transhost.out)
          Result.append ("%N")
        end
        if attached originhost as l_originhost then
          Result.append ("%Noriginhost:")
          Result.append (l_originhost.out)
          Result.append ("%N")
        end
        if attached origin as l_origin then
          Result.append ("%Norigin:")
          Result.append (l_origin.out)
          Result.append ("%N")
        end
        if attached interface as l_interface then
          Result.append ("%Ninterface:")
          Result.append (l_interface.out)
          Result.append ("%N")
        end
        if attached date as l_date then
          Result.append ("%Ndate:")
          Result.append (l_date.out)
          Result.append ("%N")
        end
        if attached sending_zone as l_sending_zone then
          Result.append ("%Nsending_zone:")
          Result.append (l_sending_zone.out)
          Result.append ("%N")
        end
        if attached body_size as l_body_size then
          Result.append ("%Nbody_size:")
          Result.append (l_body_size.out)
          Result.append ("%N")
        end
        if attached source_md5 as l_source_md5 then
          Result.append ("%Nsource_md5:")
          Result.append (l_source_md5.out)
          Result.append ("%N")
        end
        if attached seq as l_seq then
          Result.append ("%Nseq:")
          Result.append (l_seq.out)
          Result.append ("%N")
        end
        if attached domain as l_domain then
          Result.append ("%Ndomain:")
          Result.append (l_domain.out)
          Result.append ("%N")
        end
        if attached recipient as l_recipient then
          Result.append ("%Nrecipient:")
          Result.append (l_recipient.out)
          Result.append ("%N")
        end
        if attached locked as l_locked then
          Result.append ("%Nlocked:")
          Result.append (l_locked.out)
          Result.append ("%N")
        end
        if attached lock_time as l_lock_time then
          Result.append ("%Nlock_time:")
          Result.append (l_lock_time.out)
          Result.append ("%N")
        end
        if attached assigned as l_assigned then
          Result.append ("%Nassigned:")
          Result.append (l_assigned.out)
          Result.append ("%N")
        end
        if attached queued as l_queued then
          Result.append ("%Nqueued:")
          Result.append (l_queued.out)
          Result.append ("%N")
        end
        if attached var_lock as l_var_lock then
          Result.append ("%Nvar_lock:")
          Result.append (l_var_lock.out)
          Result.append ("%N")
        end
        if attached logger as l_logger then
          Result.append ("%Nlogger:")
          Result.append (l_logger.out)
          Result.append ("%N")
        end
        if attached mx_port as l_mx_port then
          Result.append ("%Nmx_port:")
          Result.append (l_mx_port.out)
          Result.append ("%N")
        end
        if attached connection_key as l_connection_key then
          Result.append ("%Nconnection_key:")
          Result.append (l_connection_key.out)
          Result.append ("%N")
        end
        if attached mx_hostname as l_mx_hostname then
          Result.append ("%Nmx_hostname:")
          Result.append (l_mx_hostname.out)
          Result.append ("%N")
        end
        if attached sent_body_hash as l_sent_body_hash then
          Result.append ("%Nsent_body_hash:")
          Result.append (l_sent_body_hash.out)
          Result.append ("%N")
        end
        if attached sent_body_size as l_sent_body_size then
          Result.append ("%Nsent_body_size:")
          Result.append (l_sent_body_size.out)
          Result.append ("%N")
        end
        if attached md5_match as l_md5_match then
          Result.append ("%Nmd5_match:")
          Result.append (l_md5_match.out)
          Result.append ("%N")
        end
      end
end

