/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MailStatsTypeVolumeTo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-19T04:15:41.503105825-04:00[America/New_York]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class MailStatsTypeVolumeTo {
  public static final String SERIALIZED_NAME_CLIENT_AT_DOMAIN_COM = "client@domain.com";
  @SerializedName(SERIALIZED_NAME_CLIENT_AT_DOMAIN_COM)
  @javax.annotation.Nullable
  private Integer clientAtDomainCom;

  public static final String SERIALIZED_NAME_USER_AT_SITE_NET = "user@site.net";
  @SerializedName(SERIALIZED_NAME_USER_AT_SITE_NET)
  @javax.annotation.Nullable
  private Integer userAtSiteNet;

  public static final String SERIALIZED_NAME_SALES_AT_COMPANY_COM = "sales@company.com";
  @SerializedName(SERIALIZED_NAME_SALES_AT_COMPANY_COM)
  @javax.annotation.Nullable
  private Integer salesAtCompanyCom;

  public static final String SERIALIZED_NAME_CLIENT_AT_ANOTHERSITE_COM = "client@anothersite.com";
  @SerializedName(SERIALIZED_NAME_CLIENT_AT_ANOTHERSITE_COM)
  @javax.annotation.Nullable
  private Integer clientAtAnothersiteCom;

  public MailStatsTypeVolumeTo() {
  }

  public MailStatsTypeVolumeTo clientAtDomainCom(@javax.annotation.Nullable Integer clientAtDomainCom) {
    this.clientAtDomainCom = clientAtDomainCom;
    return this;
  }

  /**
   * Get clientAtDomainCom
   * @return clientAtDomainCom
   */
  @javax.annotation.Nullable
  public Integer getClientAtDomainCom() {
    return clientAtDomainCom;
  }

  public void setClientAtDomainCom(@javax.annotation.Nullable Integer clientAtDomainCom) {
    this.clientAtDomainCom = clientAtDomainCom;
  }


  public MailStatsTypeVolumeTo userAtSiteNet(@javax.annotation.Nullable Integer userAtSiteNet) {
    this.userAtSiteNet = userAtSiteNet;
    return this;
  }

  /**
   * Get userAtSiteNet
   * @return userAtSiteNet
   */
  @javax.annotation.Nullable
  public Integer getUserAtSiteNet() {
    return userAtSiteNet;
  }

  public void setUserAtSiteNet(@javax.annotation.Nullable Integer userAtSiteNet) {
    this.userAtSiteNet = userAtSiteNet;
  }


  public MailStatsTypeVolumeTo salesAtCompanyCom(@javax.annotation.Nullable Integer salesAtCompanyCom) {
    this.salesAtCompanyCom = salesAtCompanyCom;
    return this;
  }

  /**
   * Get salesAtCompanyCom
   * @return salesAtCompanyCom
   */
  @javax.annotation.Nullable
  public Integer getSalesAtCompanyCom() {
    return salesAtCompanyCom;
  }

  public void setSalesAtCompanyCom(@javax.annotation.Nullable Integer salesAtCompanyCom) {
    this.salesAtCompanyCom = salesAtCompanyCom;
  }


  public MailStatsTypeVolumeTo clientAtAnothersiteCom(@javax.annotation.Nullable Integer clientAtAnothersiteCom) {
    this.clientAtAnothersiteCom = clientAtAnothersiteCom;
    return this;
  }

  /**
   * Get clientAtAnothersiteCom
   * @return clientAtAnothersiteCom
   */
  @javax.annotation.Nullable
  public Integer getClientAtAnothersiteCom() {
    return clientAtAnothersiteCom;
  }

  public void setClientAtAnothersiteCom(@javax.annotation.Nullable Integer clientAtAnothersiteCom) {
    this.clientAtAnothersiteCom = clientAtAnothersiteCom;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailStatsTypeVolumeTo mailStatsTypeVolumeTo = (MailStatsTypeVolumeTo) o;
    return Objects.equals(this.clientAtDomainCom, mailStatsTypeVolumeTo.clientAtDomainCom) &&
        Objects.equals(this.userAtSiteNet, mailStatsTypeVolumeTo.userAtSiteNet) &&
        Objects.equals(this.salesAtCompanyCom, mailStatsTypeVolumeTo.salesAtCompanyCom) &&
        Objects.equals(this.clientAtAnothersiteCom, mailStatsTypeVolumeTo.clientAtAnothersiteCom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientAtDomainCom, userAtSiteNet, salesAtCompanyCom, clientAtAnothersiteCom);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailStatsTypeVolumeTo {\n");
    sb.append("    clientAtDomainCom: ").append(toIndentedString(clientAtDomainCom)).append("\n");
    sb.append("    userAtSiteNet: ").append(toIndentedString(userAtSiteNet)).append("\n");
    sb.append("    salesAtCompanyCom: ").append(toIndentedString(salesAtCompanyCom)).append("\n");
    sb.append("    clientAtAnothersiteCom: ").append(toIndentedString(clientAtAnothersiteCom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("client@domain.com", "user@site.net", "sales@company.com", "client@anothersite.com"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MailStatsTypeVolumeTo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MailStatsTypeVolumeTo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MailStatsTypeVolumeTo is not found in the empty JSON string", MailStatsTypeVolumeTo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MailStatsTypeVolumeTo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MailStatsTypeVolumeTo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MailStatsTypeVolumeTo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MailStatsTypeVolumeTo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MailStatsTypeVolumeTo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MailStatsTypeVolumeTo.class));

       return (TypeAdapter<T>) new TypeAdapter<MailStatsTypeVolumeTo>() {
           @Override
           public void write(JsonWriter out, MailStatsTypeVolumeTo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MailStatsTypeVolumeTo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MailStatsTypeVolumeTo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MailStatsTypeVolumeTo
   * @throws IOException if the JSON string is invalid with respect to MailStatsTypeVolumeTo
   */
  public static MailStatsTypeVolumeTo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MailStatsTypeVolumeTo.class);
  }

  /**
   * Convert an instance of MailStatsTypeVolumeTo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

