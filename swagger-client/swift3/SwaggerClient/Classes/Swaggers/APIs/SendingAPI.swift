//
// SendingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SendingAPI: APIBase {
    /**
     Sends an Email with Advanced Options
     - parameter subject: (form)  
     - parameter body: (form)  
     - parameter from: (form)  
     - parameter to: (form)  
     - parameter replyto: (form)  
     - parameter cc: (form)  
     - parameter bcc: (form)  
     - parameter attachments: (form)  
     - parameter id: (form)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sendAdvMail(subject: String, body: String, from: EmailAddressName, to: [EmailAddressName], replyto: [EmailAddressName], cc: [EmailAddressName], bcc: [EmailAddressName], attachments: [MailAttachment], id: Int64, completion: @escaping ((_ data: GenericResponse?, _ error: ErrorResponse?) -> Void)) {
        sendAdvMailWithRequestBuilder(subject: subject, body: body, from: from, to: to, replyto: replyto, cc: cc, bcc: bcc, attachments: attachments, id: id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Sends an Email with Advanced Options
     - POST /mail/advsend
     - Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter subject: (form)  
     - parameter body: (form)  
     - parameter from: (form)  
     - parameter to: (form)  
     - parameter replyto: (form)  
     - parameter cc: (form)  
     - parameter bcc: (form)  
     - parameter attachments: (form)  
     - parameter id: (form)  
     - returns: RequestBuilder<GenericResponse> 
     */
    open class func sendAdvMailWithRequestBuilder(subject: String, body: String, from: EmailAddressName, to: [EmailAddressName], replyto: [EmailAddressName], cc: [EmailAddressName], bcc: [EmailAddressName], attachments: [MailAttachment], id: Int64) -> RequestBuilder<GenericResponse> {
        let path = "/mail/advsend"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Sends an Email with Advanced Options
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sendAdvMail(body: SendMailAdv, completion: @escaping ((_ data: GenericResponse?, _ error: ErrorResponse?) -> Void)) {
        sendAdvMailWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Sends an Email with Advanced Options
     - POST /mail/advsend
     - Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter body: (body)  
     - returns: RequestBuilder<GenericResponse> 
     */
    open class func sendAdvMailWithRequestBuilder(body: SendMailAdv) -> RequestBuilder<GenericResponse> {
        let path = "/mail/advsend"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Sends an Email
     - parameter to: (form)  
     - parameter from: (form)  
     - parameter subject: (form)  
     - parameter body: (form)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sendMail(to: String, from: String, subject: String, body: String, completion: @escaping ((_ data: GenericResponse?, _ error: ErrorResponse?) -> Void)) {
        sendMailWithRequestBuilder(to: to, from: from, subject: subject, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Sends an Email
     - POST /mail/send
     - Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter to: (form)  
     - parameter from: (form)  
     - parameter subject: (form)  
     - parameter body: (form)  
     - returns: RequestBuilder<GenericResponse> 
     */
    open class func sendMailWithRequestBuilder(to: String, from: String, subject: String, body: String) -> RequestBuilder<GenericResponse> {
        let path = "/mail/send"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Sends an Email
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sendMail(body: SendMail, completion: @escaping ((_ data: GenericResponse?, _ error: ErrorResponse?) -> Void)) {
        sendMailWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Sends an Email
     - POST /mail/send
     - Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter body: (body)  
     - returns: RequestBuilder<GenericResponse> 
     */
    open class func sendMailWithRequestBuilder(body: SendMail) -> RequestBuilder<GenericResponse> {
        let path = "/mail/send"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
