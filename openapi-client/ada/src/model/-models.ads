--  MailBaby Email Delivery and Management Service API
--  **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
--
--  The version of the OpenAPI document: 1.1.0
--  Contact: support@interserver.net
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.6.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-mr");



   type DenyRuleRecordAllOf_Type is
     record
       Id : Integer;
       Created : Swagger.Datetime;
     end record;

   package DenyRuleRecordAllOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => DenyRuleRecordAllOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecordAllOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecordAllOf_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecordAllOf_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecordAllOf_Type_Vectors.Vector);




   type GetMailOrders401Response_Type is
     record
       Code : Swagger.UString;
       Message : Swagger.UString;
     end record;

   package GetMailOrders401Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => GetMailOrders401Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMailOrders401Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMailOrders401Response_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetMailOrders401Response_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetMailOrders401Response_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for EmailAddress
   --  an email address
   --  ------------------------------
   type EmailAddress_Type is
     record
       Email : Swagger.Nullable_UString;
     end record;

   package EmailAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => EmailAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddress_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmailAddress_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmailAddress_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for MailBlockRspamd
   --  This is a block entry from the rspamd block list.
   --  ------------------------------
   type MailBlockRspamd_Type is
     record
       From : Swagger.UString;
       Subject : Swagger.UString;
     end record;

   package MailBlockRspamd_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailBlockRspamd_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockRspamd_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockRspamd_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockRspamd_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockRspamd_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for MailOrder
   --  A mail order record
   --  ------------------------------
   type MailOrder_Type is
     record
       Id : Integer;
       Status : Swagger.UString;
       Username : Swagger.UString;
       Comment : Swagger.Nullable_UString;
     end record;

   package MailOrder_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailOrder_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailOrder_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailOrder_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailOrder_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailOrder_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for DenyRule
   --  The data for a email deny rule record.
   --  ------------------------------
   type DenyRuleRecord_Type is
     record
       Id : Integer;
       Created : Swagger.Datetime;
       P_Type : Swagger.UString;
       Data : Swagger.UString;
       User : Swagger.Nullable_UString;
     end record;

   package DenyRuleRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => DenyRuleRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecord_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecord_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleRecord_Type_Vectors.Vector);




   type GenericResponse_Type is
     record
       Status : Swagger.Nullable_UString;
       Text : Swagger.Nullable_UString;
     end record;

   package GenericResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => GenericResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResponse_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResponse_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResponse_Type_Vectors.Vector);




   type SendMail_Type is
     record
       To : Swagger.UString;
       From : Swagger.UString;
       Subject : Swagger.UString;
       P_Body : Swagger.UString;
     end record;

   package SendMail_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => SendMail_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMail_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMail_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMail_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMail_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for DenyRule
   --  The data for a email deny rule record.
   --  ------------------------------
   type DenyRuleNew_Type is
     record
       P_Type : Swagger.UString;
       Data : Swagger.UString;
       User : Swagger.Nullable_UString;
     end record;

   package DenyRuleNew_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => DenyRuleNew_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleNew_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleNew_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleNew_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DenyRuleNew_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for MailBlockClickHouse
   --  A block entry from the clickhouse mailblocks server.
   --  ------------------------------
   type MailBlockClickHouse_Type is
     record
       Date : Swagger.Date;
       From : Swagger.UString;
       Message_Id : Swagger.UString;
       Subject : Swagger.UString;
       To : Swagger.UString;
     end record;

   package MailBlockClickHouse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailBlockClickHouse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockClickHouse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockClickHouse_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockClickHouse_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlockClickHouse_Type_Vectors.Vector);



   --  ------------------------------
   --  Root Type for MailBlocks
   --  The listing of blocked emails.
   --  ------------------------------
   type MailBlocks_Type is
     record
       Local : .Models.MailBlockClickHouse_Type_Vectors.Vector;
       Mbtrap : .Models.MailBlockClickHouse_Type_Vectors.Vector;
       Subject : .Models.MailBlockRspamd_Type_Vectors.Vector;
     end record;

   package MailBlocks_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailBlocks_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlocks_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlocks_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlocks_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailBlocks_Type_Vectors.Vector);




   type MailLogEntry_Type is
     record
       P__id : Integer;
       Id : Swagger.UString;
       From : Swagger.UString;
       To : Swagger.UString;
       Subject : Swagger.UString;
       Created : Swagger.UString;
       Time : Integer;
       User : Swagger.UString;
       Transtype : Swagger.UString;
       Origin : Swagger.UString;
       P_Interface : Swagger.UString;
       Sending_Zone : Swagger.UString;
       Body_Size : Integer;
       Seq : Integer;
       Recipient : Swagger.UString;
       Domain : Swagger.UString;
       Locked : Integer;
       Lock_Time : Integer;
       Assigned : Swagger.UString;
       Queued : Swagger.UString;
       Mx_Hostname : Swagger.UString;
       Response : Swagger.UString;
       Message_Id : Swagger.Nullable_UString;
     end record;

   package MailLogEntry_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailLogEntry_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLogEntry_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLogEntry_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLogEntry_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLogEntry_Type_Vectors.Vector);




   type MailLog_Type is
     record
       Total : Integer;
       Skip : Integer;
       Limit : Integer;
       Emails : .Models.MailLogEntry_Type_Vectors.Vector;
     end record;

   package MailLog_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => MailLog_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLog_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLog_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLog_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MailLog_Type_Vectors.Vector);




   type GetStats200ResponseInner_Type is
     record
       Id : Integer;
       Status : Swagger.UString;
       Username : Swagger.UString;
       Password : Swagger.Nullable_UString;
       Comment : Swagger.Nullable_UString;
     end record;

   package GetStats200ResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => GetStats200ResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetStats200ResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetStats200ResponseInner_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetStats200ResponseInner_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GetStats200ResponseInner_Type_Vectors.Vector);



   --  ------------------------------
   --  Email details
   --  Details for an Email
   --  ------------------------------
   type SendMailAdv_Type is
     record
       Subject : Swagger.UString;
       P_Body : Swagger.UString;
       From : .Models.EmailAddressName_Type;
       To : .Models.EmailAddressName_Type_Vectors.Vector;
       Replyto : .Models.EmailAddressName_Type_Vectors.Vector;
       Cc : .Models.EmailAddressName_Type_Vectors.Vector;
       Bcc : .Models.EmailAddressName_Type_Vectors.Vector;
       Attachments : .Models.MailAttachment_Type_Vectors.Vector;
       Id : Swagger.Nullable_Long;
     end record;

   package SendMailAdv_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => SendMailAdv_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMailAdv_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMailAdv_Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMailAdv_Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SendMailAdv_Type_Vectors.Vector);



end .Models;
