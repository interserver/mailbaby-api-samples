//
// DenyRuleNew.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The data for a email deny rule record. */
public struct DenyRuleNew: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case domain = "domain"
        case email = "email"
        case startswith = "startswith"
        case destination = "destination"
    }
    /** The type of deny rule. */
    public var type: ModelType
    /** The content of the rule.  If a domain type rule then an example would be google.com. For a begins with type an example would be msgid-.  For the email typer an example would be user@server.com. */
    public var data: String
    /** Mail account username that will be tied to this rule.  If not specified the first active mail order will be used. */
    public var user: String?

    public init(type: ModelType, data: String, user: String? = nil) {
        self.type = type
        self.data = data
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case data
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(data, forKey: .data)
        try container.encodeIfPresent(user, forKey: .user)
    }
}

