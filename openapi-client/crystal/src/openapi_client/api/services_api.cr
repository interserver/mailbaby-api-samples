# #MailBaby Email Delivery and Management Service API
#
##**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
#
#The version of the OpenAPI document: 1.1.0
#Contact: support@interserver.net
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 6.6.0
#

require "uri"

module OpenAPIClient
  class ServicesApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # displays a list of mail service orders
    # This will return a list of the mail orders you have in our system including their id, status, username, and optional comment.
    # @return [Array(MailOrder)]
    def get_mail_orders()
      data, _status_code, _headers = get_mail_orders_with_http_info()
      data
    end

    # displays a list of mail service orders
    # This will return a list of the mail orders you have in our system including their id, status, username, and optional comment.
    # @return [Array<(Array(MailOrder), Integer, Hash)>] Array(MailOrder) data, response status code and response headers
    def get_mail_orders_with_http_info()
      if @api_client.config.debugging
        Log.debug {"Calling API: ServicesApi.get_mail_orders ..."}
      end
      # resource path
      local_var_path = "/mail"

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "Array(MailOrder)"

      # auth_names
      auth_names = ["apiKeyAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ServicesApi.get_mail_orders",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ServicesApi#get_mail_orders\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return Array(MailOrder).from_json(data), status_code, headers
    end
  end
end
