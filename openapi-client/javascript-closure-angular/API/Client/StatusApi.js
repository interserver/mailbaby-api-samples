/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.StatusApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 * Version: 1.1.0
* Generator version: 7.14.0-SNAPSHOT
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license GNU GPLv3
 * https://www.gnu.org/licenses/gpl.txt
 */

goog.provide('API.Client.StatusApi');


/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.StatusApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('StatusApiBasePath') ?
                   /** @type {!string} */ ($injector.get('StatusApiBasePath')) :
                   'https://api.mailbaby.net';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('StatusApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('StatusApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.StatusApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Checks if the server is running
 * 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise}
 */
API.Client.StatusApi.prototype.pingServer = function(opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ping';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
