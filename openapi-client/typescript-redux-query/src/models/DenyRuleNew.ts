// tslint:disable
/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The data for a email deny rule record.
 * @export
 * @interface DenyRuleNew
 */
export interface DenyRuleNew  {
    /**
     * The type of deny rule.
     * @type {string}
     * @memberof DenyRuleNew
     */
    type: DenyRuleNewTypeEnum;
    /**
     * The content of the rule.  If a domain type rule then an example would be google.com. For a begins with type an example would be msgid-.  For the email typer an example would be user@server.com.
     * @type {string}
     * @memberof DenyRuleNew
     */
    data: string;
    /**
     * Mail account username that will be tied to this rule.  If not specified the first active mail order will be used.
     * @type {string}
     * @memberof DenyRuleNew
     */
    user?: string;
}

export function DenyRuleNewFromJSON(json: any): DenyRuleNew {
    return {
        'type': json['type'],
        'data': json['data'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function DenyRuleNewToJSON(value?: DenyRuleNew): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'type': value.type,
        'data': value.data,
        'user': value.user,
    };
}

/**
* @export
* @enum {string}
*/
export enum DenyRuleNewTypeEnum {
    Domain = 'domain',
    Email = 'email',
    Startswith = 'startswith',
    Destination = 'destination'
}


