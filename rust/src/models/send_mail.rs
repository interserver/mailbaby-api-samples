/*
 * Mail Baby API
 *
 * This is an API for accesssing the mail services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: detain@interserver.net
 * Generated by: https://openapi-generator.tech
 */

/// SendMail : Details for an Email



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendMail {
    /// The ID of the Mail order within our system to use as the Mail Account.
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "from")]
    pub from: Box<crate::models::MailContact>,
    /// The Contact whom is the primary recipient of this email.
    #[serde(rename = "to")]
    pub to: Vec<crate::models::MailContact>,
    /// The subject or title of the email
    #[serde(rename = "subject")]
    pub subject: String,
    /// The main email contents.
    #[serde(rename = "body")]
    pub body: String,
    /// Optional list of Contacts that specify where replies to the email should be sent instead of the _from_ address.
    #[serde(rename = "replyto", skip_serializing_if = "Option::is_none")]
    pub replyto: Option<Vec<crate::models::MailContact>>,
    /// Optional list of Contacts that should receive copies of the email.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
    #[serde(rename = "cc", skip_serializing_if = "Option::is_none")]
    pub cc: Option<Vec<crate::models::MailContact>>,
    /// Optional list of Contacts that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
    #[serde(rename = "bcc", skip_serializing_if = "Option::is_none")]
    pub bcc: Option<Vec<crate::models::MailContact>>,
    /// Optional file attachments to include in the email
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Vec<crate::models::MailAttachment>>,
}

impl SendMail {
    /// Details for an Email
    pub fn new(id: i64, from: crate::models::MailContact, to: Vec<crate::models::MailContact>, subject: String, body: String) -> SendMail {
        SendMail {
            id,
            from: Box::new(from),
            to,
            subject,
            body,
            replyto: None,
            cc: None,
            bcc: None,
            attachments: None,
        }
    }
}


