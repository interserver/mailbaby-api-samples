/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMailStatsType.h
 *
 * Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
 */

#ifndef OAIMailStatsType_H
#define OAIMailStatsType_H

#include <QJsonObject>

#include "OAIMailStatsType_volume.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMailStatsType_volume;

class OAIMailStatsType : public OAIObject {
public:
    OAIMailStatsType();
    OAIMailStatsType(QString json);
    ~OAIMailStatsType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    qint32 getUsage() const;
    void setUsage(const qint32 &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getCurrencySymbol() const;
    void setCurrencySymbol(const QString &currency_symbol);
    bool is_currency_symbol_Set() const;
    bool is_currency_symbol_Valid() const;

    double getCost() const;
    void setCost(const double &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    qint32 getReceived() const;
    void setReceived(const qint32 &received);
    bool is_received_Set() const;
    bool is_received_Valid() const;

    qint32 getSent() const;
    void setSent(const qint32 &sent);
    bool is_sent_Set() const;
    bool is_sent_Valid() const;

    OAIMailStatsType_volume getVolume() const;
    void setVolume(const OAIMailStatsType_volume &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    qint32 m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_currency_symbol;
    bool m_currency_symbol_isSet;
    bool m_currency_symbol_isValid;

    double m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    qint32 m_received;
    bool m_received_isSet;
    bool m_received_isValid;

    qint32 m_sent;
    bool m_sent_isSet;
    bool m_sent_isValid;

    OAIMailStatsType_volume m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMailStatsType)

#endif // OAIMailStatsType_H
