/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.model

import com.github.plokhotnyuk.jsoniter_scala.macros.named

  /**
   * Root Type for MailStatsType
   * Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
   */
case class MailStatsType(
  @named("time") time: Option[MailStatsTypeEnums.Time] = scala.None,
  @named("usage") usage: Option[Int] = scala.None,
  @named("currency") currency: Option[String] = scala.None,
  @named("currencySymbol") currencySymbol: Option[String] = scala.None,
  @named("cost") cost: Option[Double] = scala.None,
  @named("received") received: Option[Int] = scala.None,
  @named("sent") sent: Option[Int] = scala.None,
  @named("volume") volume: Option[MailStatsTypeVolume] = scala.None
)

object MailStatsTypeEnums:
  enum Time:
    case `all`
    case `billing`
    case `month`
    case `7d`
    case `24h`
    case `today`
    case `1h`

  object Time:
    import com.github.plokhotnyuk.jsoniter_scala.macros.*
    import com.github.plokhotnyuk.jsoniter_scala.core.*
    given timeCodec: JsonValueCodec[Time] = JsonCodecMaker.make {
      CodecMakerConfig
        .withAdtLeafClassNameMapper { x =>
          JsonCodecMaker.simpleClassName(x) match
            case "all" => "all"
            case "billing" => "billing"
            case "month" => "month"
            case "7d" => "7d"
            case "24h" => "24h"
            case "today" => "today"
            case "1h" => "1h"
        }
        .withDiscriminatorFieldName(scala.None)
    }
end MailStatsTypeEnums
