/**
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.0.1
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIDefaultApi.h"

#include "OpenAPIGenericResponse.h"
#include "OpenAPIGetMailOrders200ResponseInner.h"
#include "OpenAPIGetMailOrders401Response.h"
#include "OpenAPIMailLog.h"
#include "OpenAPISendMailAdv.h"

namespace OpenAPI
{

/* displays a list of mail service orders

*/
class OPENAPI_API OpenAPIDefaultApi::GetMailOrdersRequest : public Request
{
public:
    virtual ~GetMailOrdersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIDefaultApi::GetMailOrdersResponse : public Response
{
public:
    virtual ~GetMailOrdersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIGetMailOrders200ResponseInner> Content;
};

/* Checks if the server is running

*/
class OPENAPI_API OpenAPIDefaultApi::PingServerRequest : public Request
{
public:
    virtual ~PingServerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIDefaultApi::PingServerResponse : public Response
{
public:
    virtual ~PingServerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Sends an Email with Advanced Options
 *
 * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
*/
class OPENAPI_API OpenAPIDefaultApi::SendAdvMailRequest : public Request
{
public:
    virtual ~SendAdvMailRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPISendMailAdv OpenAPISendMailAdv;
};

class OPENAPI_API OpenAPIDefaultApi::SendAdvMailResponse : public Response
{
public:
    virtual ~SendAdvMailResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGenericResponse Content;
};

/* Sends an Email
 *
 * Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
*/
class OPENAPI_API OpenAPIDefaultApi::SendMailRequest : public Request
{
public:
    virtual ~SendMailRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The Contact whom is the primary recipient of this email. */
	FString To;
	/* The contact whom is the this email is from. */
	FString From;
	/* The subject or title of the email */
	FString Subject;
	/* The main email contents. */
	FString Body;
};

class OPENAPI_API OpenAPIDefaultApi::SendMailResponse : public Response
{
public:
    virtual ~SendMailResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGenericResponse Content;
};

/* displays the mail log
 *
 * By passing in the appropriate options, you can search for available inventory in the system 
*/
class OPENAPI_API OpenAPIDefaultApi::ViewMailLogRequest : public Request
{
public:
    virtual ~ViewMailLogRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The ID of your mail order this will be sent through. */
	TOptional<int64> Id;
	/* pass an optional search string for looking up inventory */
	TOptional<FString> Search;
	/* number of records to skip for pagination */
	TOptional<int32> Skip;
	/* maximum number of records to return */
	TOptional<int32> Limit;
	/* earliest date to get emails in unix timestamp format */
	TOptional<int64> StartDate;
	/* earliest date to get emails in unix timestamp format */
	TOptional<int64> EndDate;
};

class OPENAPI_API OpenAPIDefaultApi::ViewMailLogResponse : public Response
{
public:
    virtual ~ViewMailLogResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIMailLog Content;
};

}
