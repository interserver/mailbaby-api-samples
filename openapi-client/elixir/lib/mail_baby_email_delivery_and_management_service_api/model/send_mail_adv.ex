# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MailBabyEmailDeliveryAndManagementServiceAPI.Model.SendMailAdv do
  @moduledoc """
  Details for an Email
  """

  @derive [Poison.Encoder]
  defstruct [
    :subject,
    :body,
    :from,
    :to,
    :replyto,
    :cc,
    :bcc,
    :attachments,
    :id
  ]

  @type t :: %__MODULE__{
    :subject => String.t,
    :body => String.t,
    :from => MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t,
    :to => [MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t],
    :replyto => [MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t] | nil,
    :cc => [MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t] | nil,
    :bcc => [MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName.t] | nil,
    :attachments => [MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailAttachment.t] | nil,
    :id => integer() | nil
  }
end

defimpl Poison.Decoder, for: MailBabyEmailDeliveryAndManagementServiceAPI.Model.SendMailAdv do
  import MailBabyEmailDeliveryAndManagementServiceAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:from, :struct, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName, options)
    |> deserialize(:to, :list, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName, options)
    |> deserialize(:replyto, :list, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName, options)
    |> deserialize(:cc, :list, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName, options)
    |> deserialize(:bcc, :list, MailBabyEmailDeliveryAndManagementServiceAPI.Model.EmailAddressName, options)
    |> deserialize(:attachments, :list, MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailAttachment, options)
  end
end

