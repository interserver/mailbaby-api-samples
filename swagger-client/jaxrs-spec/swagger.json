{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "MailBaby Email Delivery and Management Service API",
    "description" : "**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n# Overview\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n# Authentication\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n",
    "termsOfService" : "https://www.interserver.net/terms-of-service.html",
    "contact" : {
      "name" : "Mail Baby",
      "url" : "https://www.mail.baby/contact/",
      "email" : "support@interserver.net"
    },
    "license" : {
      "name" : "GNU GPLv3",
      "url" : "https://www.gnu.org/licenses/gpl.txt"
    },
    "version" : "1.1.0"
  },
  "externalDocs" : {
    "description" : "FAQ",
    "url" : "https://www.mail.baby/tips/"
  },
  "servers" : [ {
    "url" : "https://api.mailbaby.net",
    "description" : "Live API Endpoint"
  } ],
  "security" : [ {
    "apiKeyAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Services",
    "description" : "Mail service orders."
  }, {
    "name" : "Sending",
    "description" : "Email delivery commands"
  }, {
    "name" : "Blocking",
    "description" : "Management of email blocking rules and block lists."
  }, {
    "name" : "History",
    "description" : "Information about already delivered emails."
  }, {
    "name" : "Status",
    "description" : "Service Status"
  } ],
  "paths" : {
    "/mail" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "displays a list of mail service orders",
        "description" : "This will return a list of the mail orders you have in our system including their id, status, username, and optional comment.",
        "operationId" : "getMailOrders",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MailOrder"
                  }
                },
                "examples" : {
                  "MailOrders" : {
                    "value" : [ {
                      "id" : 39,
                      "status" : "active",
                      "username" : "mb39"
                    }, {
                      "id" : 33,
                      "status" : "canceled",
                      "username" : "mb33",
                      "comment" : "test order"
                    } ]
                  }
                }
              }
            },
            "links" : {
              "sendMailByIdLink" : {
                "operationId" : "sendMail",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                },
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/advsend`."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/blocks" : {
      "get" : {
        "tags" : [ "Blocking" ],
        "summary" : "displays a list of blocked email addresses",
        "operationId" : "getMailBlocks",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailBlocks"
                },
                "examples" : {
                  "MailBlocksExample" : {
                    "value" : {
                      "local" : [ {
                        "date" : "2023-08-07",
                        "from" : "user@domain.com",
                        "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
                        "subject" : "Test Email",
                        "to" : "['client@site.com']"
                      } ],
                      "mbtrap" : [ {
                        "date" : "2023-08-07",
                        "from" : "user@domain.com",
                        "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
                        "subject" : "Test Email",
                        "to" : "['client@site.com']"
                      } ],
                      "subject" : [ {
                        "from" : "user@domain.com",
                        "subject" : "Test Email"
                      } ]
                    }
                  }
                }
              }
            },
            "links" : {
              "delistBlockLink" : {
                "operationId" : "delistBlock",
                "parameters" : {
                  "email" : "$response.body#/local/0/from"
                },
                "description" : "The `from` value returned in the response can be used as the `email` parameter in `DELETE /mail/blocks`."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/send" : {
      "post" : {
        "tags" : [ "Sending" ],
        "summary" : "Sends an Email",
        "description" : "Sends an email through one of your mail orders.\n\n*Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead.\n",
        "operationId" : "sendMail",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMail"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error message when there was a problem with the input parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "BadInputError" : {
                    "value" : {
                      "code" : 400,
                      "message" : "There was a problem with the input parameters."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "NotFoundError" : {
                    "value" : {
                      "code" : 404,
                      "message" : "The specified resource was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/advsend" : {
      "summary" : "Sends an Email with Advanced Options",
      "description" : "Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.",
      "post" : {
        "tags" : [ "Sending" ],
        "summary" : "Sends an Email with Advanced Options",
        "description" : "Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.\n\nHere are 9 examples showing the various ways to call the advsend operation showing the different ways you can pass the to, cc, bcc, and replyto information. The first several examples are all for the application/x-www-form-urlencoded content-type while the later ones are for application/json content-types.\n\n```BasicForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=user@domain.com \\\n--data to=support@interserver.net\n```\n\n```ArrayForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=user@domain.com \\\n--data \"to[0][name]=Joe\" \\\n--data \"to[0][email]=support@interserver.net\"\n```\n\n```NameEmailForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=\"Joe <user@domain.com>\" \\\n--data to=\"Joe <support@interserver.net>\"\n```\n\n```MultToForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=user@domain.com \\\n--data \"to=support@interserver.net, support@interserver.net\"\n```\n\n```MultToFullForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=user@domain.com \\\n--data \"to=Joe <support@interserver.net>, Joe <support@interserver.net>\"\n```\n\n```MultToArrayForm\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data 'subject=Welcome' \\\n--data 'body=Hello' \\\n--data from=user@domain.com \\\n--data \"to[0][name]=Joe\" \\\n--data \"to[0][email]=support@interserver.net\" \\\n--data \"to[1][name]=Joe\" \\\n--data \"to[1][email]=support@interserver.net\"\n```\n\n```BasicJson\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data '{\n\"subject\": \"Welcome\",\n\"body\": \"Hello\",\n\"from\": \"user@domain.com\",\n\"to\": \"support@interserver.net\"\n}'\n```\n\n```ArrayJson\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data '{\n\"subject\": \"Welcome\",\n\"body\": \"Hello\",\n\"from\": {\"name\": \"Joe\", \"email\": \"user@domain.com\"},\n\"to\": [{\"name\": \"Joe\", \"email\": \"support@interserver.net\"}]\n}'\n```\n\n```NameEmailJson\ncurl -i --request POST --url https://api.mailbaby.net/mail/advsend \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: YOUR_API_KEY' \\\n--data '{\n\"subject\": \"Welcome\",\n\"body\": \"Hello\",\n\"from\": \"Joe <user@domain.com>\",\n\"to\": \"Joe <support@interserver.net>\"\n}'\n```\n",
        "operationId" : "sendAdvMail",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMailAdv"
              },
              "examples" : {
                "AdvSendExample" : {
                  "value" : {
                    "subject" : "Welcome",
                    "body" : "Hello",
                    "from" : {
                      "email" : "user@domain.com"
                    },
                    "to" : [ {
                      "email" : "someone@client.com",
                      "name" : "Mr Client"
                    } ],
                    "attachments" : [ {
                      "filename" : "message.txt",
                      "data" : "base64_encoded_contents"
                    } ],
                    "id" : 66
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMailAdv"
              },
              "examples" : {
                "AdvSendExample" : {
                  "value" : {
                    "subject" : "Welcome",
                    "body" : "Hello",
                    "from" : {
                      "email" : "user@domain.com"
                    },
                    "to" : [ {
                      "email" : "someone@client.com",
                      "name" : "Mr Client"
                    } ],
                    "attachments" : [ {
                      "filename" : "message.txt",
                      "data" : "base64_encoded_contents"
                    } ],
                    "id" : 66
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error message when there was a problem with the input parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "BadInputError" : {
                    "value" : {
                      "code" : 400,
                      "message" : "There was a problem with the input parameters."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "NotFoundError" : {
                    "value" : {
                      "code" : 404,
                      "message" : "The specified resource was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/log" : {
      "get" : {
        "tags" : [ "History" ],
        "summary" : "displays the mail log",
        "description" : "Get a listing of the emails sent through this system\n",
        "operationId" : "viewMailLog",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The ID of your mail order this will be sent through.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 2604
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "originating ip address sending mail",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1.2.3.4"
        }, {
          "name" : "mx",
          "in" : "query",
          "description" : "mx record mail was sent to",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "mx.google.com"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from email address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "me@sender.com"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to/destination email address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "you@receiver.com"
        }, {
          "name" : "subject",
          "in" : "query",
          "description" : "subject containing this string",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Support"
        }, {
          "name" : "mailid",
          "in" : "query",
          "description" : "mail id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "185997065c60008840"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "number of records to skip for pagination",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "example" : 1000
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of records to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "example" : 1000
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "earliest date to get emails in unix timestamp format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 9999999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 1641781008
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "earliest date to get emails in unix timestamp format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 9999999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 1673317008
        }, {
          "name" : "replyto",
          "in" : "query",
          "description" : "Reply-To Email Address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "headerfrom",
          "in" : "query",
          "description" : "Header From Email Address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "delivered",
          "in" : "query",
          "description" : "Limiting the emails to wether or not they were delivered.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "0", "1" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailLog"
                },
                "examples" : {
                  "MailLogExample" : {
                    "value" : {
                      "total" : 1,
                      "skip" : 0,
                      "limit" : 100,
                      "emails" : [ {
                        "_id" : 103172,
                        "id" : "17c7eda538e0005d03",
                        "from" : "person@mysite.com",
                        "to" : "client@isp.com",
                        "subject" : "sell 0.005 shares",
                        "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
                        "created" : "2021-10-14 08:50:10",
                        "time" : 1634215809,
                        "user" : "mb5658",
                        "transtype" : "ESMTPSA",
                        "origin" : "199.231.189.154",
                        "interface" : "feeder",
                        "sendingZone" : "interserver",
                        "bodySize" : 63,
                        "seq" : 1,
                        "delivered" : 1,
                        "recipient" : "client@isp.com",
                        "domain" : "interserver.net",
                        "locked" : 1,
                        "lockTime" : "1634215818533",
                        "assigned" : "relay1",
                        "queued" : "2021-10-14T12:50:15.487Z",
                        "mxHostname" : "mx.j.is.cc",
                        "response" : "250 2.0.0 Ok queued as C91D83E128C"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/ping" : {
      "get" : {
        "tags" : [ "Status" ],
        "summary" : "Checks if the server is running",
        "operationId" : "pingServer",
        "responses" : {
          "200" : {
            "description" : "Server is up and running"
          },
          "default" : {
            "description" : "Something is wrong"
          }
        }
      }
    },
    "/mail/blocks/delete" : {
      "post" : {
        "tags" : [ "Blocking" ],
        "summary" : "Removes an email address from the blocked list",
        "description" : "Removes an email address from the various block lists.\n",
        "operationId" : "delistBlock",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAddress"
              },
              "examples" : {
                "BlocksDeleteExample" : {
                  "value" : {
                    "email" : "client@domain.com"
                  }
                }
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAddress"
              },
              "examples" : {
                "BlocksDeleteExampleForm" : {
                  "value" : {
                    "email" : "client@domain.com"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error message when there was a problem with the input parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "BadInputError" : {
                    "value" : {
                      "code" : 400,
                      "message" : "There was a problem with the input parameters."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "NotFoundError" : {
                    "value" : {
                      "code" : 404,
                      "message" : "The specified resource was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/rules" : {
      "summary" : "Deny Rules",
      "description" : "The deny rules allow you to setup assorted types of rules which will automatically deny the email from being sent through our system when  the citeria match.",
      "get" : {
        "tags" : [ "Blocking" ],
        "summary" : "Displays a listing of deny email rules.",
        "description" : "Returns a listing of all the deny block rules you have configured.",
        "operationId" : "getRules",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DenyRuleRecord"
                  }
                },
                "examples" : {
                  "ExampleMailRulesList" : {
                    "value" : [ {
                      "id" : "14",
                      "user" : "mb20682",
                      "type" : "email",
                      "data" : "domeinwo@server.guesshost.net",
                      "created" : "2022-03-22 19:16:35"
                    }, {
                      "id" : "15",
                      "user" : "mb20682",
                      "type" : "email",
                      "data" : "mamediieva@thedigital.gov.ua",
                      "created" : "2022-03-22 19:18:01"
                    } ]
                  }
                }
              }
            },
            "links" : {
              "delistBlockLink" : {
                "operationId" : "delistBlock",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                },
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/advsend`."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Blocking" ],
        "summary" : "Creates a new email deny rule.",
        "description" : "Adds a new email deny rule into the system to block new emails that match the given criteria",
        "operationId" : "addRule",
        "requestBody" : {
          "description" : "These are the fields needed to create a new email deny rule.",
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/DenyRuleNew"
              },
              "examples" : {
                "DenyRuleNewFormExample" : {
                  "value" : {
                    "user" : "mb20682",
                    "type" : "email",
                    "data" : "domeinwo@server.guesshost.net"
                  }
                }
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DenyRuleNew"
              },
              "examples" : {
                "DenyRuleNewJsonExample" : {
                  "value" : {
                    "user" : "mb20682",
                    "type" : "email",
                    "data" : "domeinwo@server.guesshost.net"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error message when there was a problem with the input parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "BadInputError" : {
                    "value" : {
                      "code" : 400,
                      "message" : "There was a problem with the input parameters."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "NotFoundError" : {
                    "value" : {
                      "code" : 404,
                      "message" : "The specified resource was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/rules/{ruleId}" : {
      "delete" : {
        "tags" : [ "Blocking" ],
        "summary" : "Removes an deny mail rule.",
        "description" : "Removes one of the configured deny mail rules from the system.",
        "operationId" : "deleteRule",
        "parameters" : [ {
          "name" : "ruleId",
          "in" : "path",
          "description" : "The ID of the Rules entry.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          },
          "examples" : {
            "RuleIdExample" : {
              "value" : "34"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error message when there was a problem with the input parameters.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "BadInputError" : {
                    "value" : {
                      "code" : 400,
                      "message" : "There was a problem with the input parameters."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "NotFoundError" : {
                    "value" : {
                      "code" : 404,
                      "message" : "The specified resource was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/stats" : {
      "get" : {
        "tags" : [ "History" ],
        "summary" : "Account usage statistics.",
        "description" : "Returns information about the usage on your mail accounts.",
        "operationId" : "getStats",
        "parameters" : [ {
          "name" : "time",
          "in" : "query",
          "description" : "The timeframe for the statistics.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "billing", "month", "7d", "24h", "1d", "1h" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailStatsType"
                }
              }
            },
            "links" : {
              "delistBlockLink" : {
                "operationId" : "delistBlock",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                },
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/advsend`."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                },
                "examples" : {
                  "UnauthorizedError" : {
                    "value" : {
                      "code" : 401,
                      "message" : "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "GenericResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "ok"
          },
          "text" : {
            "type" : "string",
            "example" : "The command completed successfully."
          }
        }
      },
      "ErrorMessage" : {
        "title" : "ErrorMessage",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "The response code associated with the error.",
            "format" : "int32",
            "example" : 400
          },
          "message" : {
            "type" : "string",
            "description" : "The details or description of the error.",
            "example" : "There was an error."
          }
        },
        "description" : "The resposne when an error occurs.",
        "example" : {
          "code" : 400,
          "message" : "There was an error."
        }
      },
      "EmailAddressName" : {
        "title" : "EmailAddressName",
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "The email address.",
            "example" : "user@domain.com"
          },
          "name" : {
            "type" : "string",
            "description" : "Name to use for the sending contact.",
            "example" : "John Smith"
          }
        },
        "description" : "An email contact.",
        "example" : {
          "email" : "user@domain.com",
          "name" : "John Smith"
        }
      },
      "DenyRuleRecord" : {
        "title" : "DenyRuleRecord",
        "type" : "object",
        "description" : "The data for a email deny rule record.",
        "example" : {
          "id" : 14,
          "user" : "mb20682",
          "type" : "email",
          "data" : "domeinwo@server.guesshost.net",
          "created" : "2022-03-22 19:16:35"
        },
        "allOf" : [ {
          "required" : [ "created", "id" ],
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "The deny rule Id number.",
              "example" : "41124"
            },
            "created" : {
              "type" : "string",
              "description" : "the date the rule was created.",
              "format" : "date-time"
            }
          }
        }, {
          "$ref" : "#/components/schemas/DenyRuleNew"
        } ]
      },
      "DenyRuleNew" : {
        "title" : "DenyRuleNew",
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "user" : {
            "type" : "string",
            "description" : "Mail account username that will be tied to this rule.  If not specified the first active mail order will be used.",
            "example" : "mb20682"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of deny rule.",
            "example" : "email",
            "enum" : [ "domain", "email", "startswith", "destination" ]
          },
          "data" : {
            "type" : "string",
            "description" : "The content of the rule.  If a domain type rule then an example would be google.com. For a begins with type an example would be msgid-.  For the email typer an example would be user@server.com.",
            "example" : "domeinwo@server.guesshost.net"
          }
        },
        "description" : "The data for a email deny rule record.",
        "example" : {
          "user" : "mb20682",
          "type" : "email",
          "data" : "domeinwo@server.guesshost.net"
        }
      },
      "MailAttachment" : {
        "title" : "MailAttachment",
        "required" : [ "data", "filename" ],
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string",
            "description" : "The filename of the attached file.",
            "example" : "message.txt"
          },
          "data" : {
            "type" : "string",
            "description" : "The file contents base64 encoded",
            "example" : "aGVsbG8gdGhlcmUK"
          }
        },
        "description" : "(optional) File attachments to include in the email.  The file contents must be base64",
        "example" : {
          "filename" : "file.txt",
          "data" : "base64_encoded_file_contents"
        }
      },
      "MailBlockClickHouse" : {
        "title" : "MailBlockClickHouse",
        "required" : [ "date", "from", "messageId", "subject", "to" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "from" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "to" : {
            "type" : "string"
          }
        },
        "description" : "A block entry from the clickhouse mailblocks server.",
        "example" : {
          "date" : "2023-08-07",
          "from" : "user@domain.com",
          "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
          "subject" : "Test Email",
          "to" : "['client@site.com']"
        }
      },
      "MailBlockRspamd" : {
        "title" : "MailBlockRspamd",
        "required" : [ "from", "subject" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          }
        },
        "description" : "This is a block entry from the rspamd block list.",
        "example" : {
          "from" : "user@domain.com",
          "subject" : "Test email"
        }
      },
      "MailBlocks" : {
        "title" : "MailBlocks",
        "required" : [ "local", "mbtrap", "subject" ],
        "type" : "object",
        "properties" : {
          "local" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MailBlockClickHouse"
            }
          },
          "mbtrap" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MailBlockClickHouse"
            }
          },
          "subject" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MailBlockRspamd"
            }
          }
        },
        "description" : "The listing of blocked emails.",
        "example" : {
          "local" : [ {
            "date" : "2023-08-07",
            "from" : "user@domain.com",
            "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
            "subject" : "Test Email",
            "to" : "['client@site.com']"
          } ],
          "mbtrap" : [ {
            "date" : "2023-08-07",
            "from" : "user@domain.com",
            "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
            "subject" : "Test Email",
            "to" : "['client@site.com']"
          } ],
          "subject" : [ {
            "from" : "user@domain.com",
            "subject" : "Test Email"
          } ]
        }
      },
      "MailLog" : {
        "title" : "MailLog",
        "required" : [ "emails", "limit", "skip", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "total number of mail log entries",
            "example" : 10234
          },
          "skip" : {
            "type" : "integer",
            "description" : "number of emails skipped in listing",
            "example" : 0
          },
          "limit" : {
            "type" : "integer",
            "description" : "number of emails to return",
            "example" : 100
          },
          "emails" : {
            "type" : "array",
            "example" : "[{\n    \"_id\": 103172,\n    \"id\": \"17c7eda538e0005d03\",\n    \"from\": \"person@mysite.com\",\n    \"to\": \"client@isp.com\",\n    \"subject\": \"sell 0.005 shares\",\n    \"messageId\": \"<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>\",\n    \"created\": \"2021-10-14 08:50:10\",\n    \"time\": 1634215809,\n    \"user\": \"mb5658\",\n    \"transtype\": \"ESMTPSA\",\n    \"origin\": \"199.231.189.154\",\n    \"interface\": \"feeder\",\n    \"sendingZone\": \"interserver\",\n    \"bodySize\": 63,\n    \"seq\": 1,\n    \"recipient\": \"client@isp.com\",\n    \"domain\": \"interserver.net\",\n    \"locked\": 1,\n    \"lockTime\": \"1634215818533\",\n    \"assigned\": \"relay1\",\n    \"queued\": \"2021-10-14T12:50:15.487Z\",\n    \"mxHostname\": \"mx.j.is.cc\",\n    \"response\": \"250 2.0.0 Ok queued as C91D83E128C\"\n}]",
            "items" : {
              "$ref" : "#/components/schemas/MailLogEntry"
            }
          }
        },
        "description" : "Mail log records",
        "example" : {
          "total" : 1,
          "skip" : 0,
          "limit" : 100,
          "emails" : [ {
            "_id" : 103172,
            "id" : "17c7eda538e0005d03",
            "from" : "person@mysite.com",
            "to" : "client@isp.com",
            "subject" : "sell 0.005 shares",
            "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
            "created" : "2021-10-14T08:50:10.000Z",
            "time" : 1634215809,
            "user" : "mb5658",
            "transtype" : "ESMTPSA",
            "origin" : "199.231.189.154",
            "interface" : "feeder",
            "sendingZone" : "interserver",
            "bodySize" : 63,
            "seq" : 1,
            "delivered" : 1,
            "recipient" : "client@isp.com",
            "domain" : "interserver.net",
            "locked" : 1,
            "lockTime" : "1634215818533",
            "assigned" : "relay1",
            "queued" : "2021-10-14T12:50:15.487Z",
            "mxHostname" : "mx.j.is.cc",
            "response" : "250 2.0.0 Ok queued as C91D83E128C"
          } ]
        }
      },
      "MailOrder" : {
        "title" : "MailOrder",
        "required" : [ "id", "status", "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The ID of the order.",
            "format" : "int32",
            "example" : 21472
          },
          "status" : {
            "type" : "string",
            "description" : "The order status.",
            "example" : "active"
          },
          "username" : {
            "type" : "string",
            "description" : "The username to use for this order.",
            "example" : "mb21472"
          },
          "comment" : {
            "type" : "string",
            "description" : "Optional order comment."
          }
        },
        "description" : "A mail order record",
        "example" : {
          "id" : 21472,
          "status" : "active",
          "username" : "mb21472"
        }
      },
      "SendMail" : {
        "title" : "SendMail",
        "required" : [ "body", "from", "subject", "to" ],
        "type" : "object",
        "properties" : {
          "to" : {
            "type" : "string",
            "description" : "The Contact whom is the primary recipient of this email.",
            "example" : "johndoe@company.com"
          },
          "from" : {
            "type" : "string",
            "description" : "The contact whom is the this email is from.",
            "example" : "janedoe@company.com"
          },
          "subject" : {
            "type" : "string",
            "description" : "The subject or title of the email",
            "example" : "Attention Client"
          },
          "body" : {
            "type" : "string",
            "description" : "The main email contents.",
            "example" : "This is an email to inform you that something noteworthy happened."
          }
        },
        "description" : "Details for an Email"
      },
      "EmailAddressNames" : {
        "title" : "EmailAddressNames",
        "type" : "array",
        "description" : "Array of Email Addresses",
        "example" : [ {
          "email" : "user@domain.com",
          "name" : "John Smith"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/EmailAddressName"
        }
      },
      "SendMailAdv" : {
        "title" : "SendMailAdv",
        "required" : [ "body", "from", "subject", "to" ],
        "type" : "object",
        "properties" : {
          "subject" : {
            "type" : "string",
            "description" : "The subject or title of the email",
            "example" : "Your Package has been Delivered!"
          },
          "body" : {
            "type" : "string",
            "description" : "The main email contents.",
            "example" : "The package you ordered on 2021-01-23 has been delivered. If the package is broken into many pieces, please blaim someone else."
          },
          "from" : {
            "$ref" : "#/components/schemas/EmailAddressTypes"
          },
          "to" : {
            "$ref" : "#/components/schemas/EmailAddressesTypes"
          },
          "replyto" : {
            "$ref" : "#/components/schemas/EmailAddressesTypes"
          },
          "cc" : {
            "$ref" : "#/components/schemas/EmailAddressesTypes"
          },
          "bcc" : {
            "$ref" : "#/components/schemas/EmailAddressesTypes"
          },
          "attachments" : {
            "type" : "array",
            "description" : "(optional) File attachments to include in the email.  The file contents must be base64 encoded!",
            "example" : "[\n        {\n            \"filename\": \"text.txt\",\n            \"data\": \"base64_encoded_contents\"\n        }\n]",
            "items" : {
              "$ref" : "#/components/schemas/MailAttachment"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "(optional)  ID of the Mail order within our system to use as the Mail Account.",
            "format" : "int64",
            "example" : 5000
          }
        },
        "description" : "Details for an Email",
        "example" : {
          "subject" : "Welcome",
          "body" : "Hello",
          "from" : "user@domain.com",
          "to" : "someone@client.com",
          "cc" : [ {
            "email" : "someone2@client.com",
            "name" : "Mr Client"
          }, {
            "email" : "someone3@client.com",
            "name" : "Mr Client"
          } ],
          "attachments" : [ {
            "filename" : "file.txt",
            "data" : "base64_encoded_contents"
          } ],
          "id" : 66
        }
      },
      "MailLogEntry" : {
        "title" : "MailLogEntry",
        "required" : [ "_id", "assigned", "bodySize", "created", "domain", "from", "id", "interface", "lockTime", "locked", "mxHostname", "origin", "queued", "recipient", "response", "sendingZone", "seq", "subject", "time", "to", "transtype", "user" ],
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "integer",
            "description" : "internal db id",
            "example" : 103172
          },
          "id" : {
            "type" : "string",
            "description" : "mail id",
            "example" : "17c7eda538e0005d03"
          },
          "from" : {
            "type" : "string",
            "description" : "from address",
            "example" : "person@mysite.com"
          },
          "to" : {
            "type" : "string",
            "description" : "to address",
            "example" : "client@isp.com"
          },
          "subject" : {
            "type" : "string",
            "description" : "email subject",
            "example" : "sell 0.005 shares"
          },
          "messageId" : {
            "type" : "string",
            "description" : "message id",
            "example" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>"
          },
          "created" : {
            "type" : "string",
            "description" : "creation date",
            "example" : "2021-10-14 08:50:10"
          },
          "time" : {
            "type" : "integer",
            "description" : "creation timestamp",
            "example" : 1634215809
          },
          "user" : {
            "type" : "string",
            "description" : "user account",
            "example" : "mb5658"
          },
          "transtype" : {
            "type" : "string",
            "description" : "transaction type",
            "example" : "ESMTPSA"
          },
          "origin" : {
            "type" : "string",
            "description" : "origin ip",
            "example" : "199.231.189.154"
          },
          "interface" : {
            "type" : "string",
            "description" : "interface name",
            "example" : "feeder"
          },
          "sendingZone" : {
            "type" : "string",
            "description" : "sending zone",
            "example" : "interserver"
          },
          "bodySize" : {
            "type" : "integer",
            "description" : "email body size in bytes",
            "example" : 63
          },
          "seq" : {
            "type" : "integer",
            "description" : "index of email in the to adderess list",
            "example" : 1
          },
          "recipient" : {
            "type" : "string",
            "description" : "to address this email is being sent to",
            "example" : "client@isp.com"
          },
          "domain" : {
            "type" : "string",
            "description" : "to address domain",
            "example" : "interserver.net"
          },
          "locked" : {
            "type" : "integer",
            "description" : "locked status",
            "example" : 1
          },
          "lockTime" : {
            "type" : "string",
            "description" : "lock timestamp",
            "example" : "1634215818533"
          },
          "assigned" : {
            "type" : "string",
            "description" : "assigned server",
            "example" : "relay1"
          },
          "queued" : {
            "type" : "string",
            "description" : "queued timestamp",
            "example" : "2021-10-14T12:50:15.487Z"
          },
          "mxHostname" : {
            "type" : "string",
            "description" : "mx hostname",
            "example" : "mx.j.is.cc"
          },
          "response" : {
            "type" : "string",
            "description" : "mail delivery response",
            "example" : "250 2.0.0 Ok queued as C91D83E128C"
          }
        },
        "description" : "An email record",
        "example" : {
          "_id" : 103172,
          "id" : "17c7eda538e0005d03",
          "from" : "person@mysite.com",
          "to" : "client@isp.com",
          "subject" : "sell 0.005 shares",
          "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
          "created" : "2021-10-14 08:50:10",
          "time" : 1634215809,
          "user" : "mb5658",
          "transtype" : "ESMTPSA",
          "origin" : "199.231.189.154",
          "interface" : "feeder",
          "sendingZone" : "interserver",
          "bodySize" : 63,
          "seq" : 1,
          "delivered" : 1,
          "recipient" : "client@isp.com",
          "domain" : "interserver.net",
          "locked" : 1,
          "lockTime" : "1634215818533",
          "assigned" : "relay1",
          "queued" : "2021-10-14T12:50:15.487Z",
          "mxHostname" : "mx.j.is.cc",
          "response" : "250 2.0.0 Ok queued as C91D83E128C"
        }
      },
      "EmailAddress" : {
        "type" : "string",
        "description" : "an email address",
        "example" : "user@domain.com"
      },
      "EmailAddressesTypes" : {
        "title" : "EmailAddressTypes",
        "description" : "",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/EmailAddress"
        }, {
          "$ref" : "#/components/schemas/EmailAddressNames"
        } ]
      },
      "EmailAddressTypes" : {
        "title" : "EmailAddressTypes",
        "description" : "",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/EmailAddress"
        }, {
          "$ref" : "#/components/schemas/EmailAddressName"
        } ]
      },
      "MailStatsType" : {
        "title" : "Root Type for MailStatsType",
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "string",
            "default" : "1h",
            "enum" : [ "all", "billing", "month", "7d", "24h", "today", "1h" ]
          },
          "usage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "currency" : {
            "type" : "string"
          },
          "currencySymbol" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "number",
            "format" : "double"
          },
          "received" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sent" : {
            "type" : "integer",
            "format" : "int32"
          },
          "volume" : {
            "$ref" : "#/components/schemas/MailStatsType_volume"
          }
        },
        "description" : "Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.",
        "example" : {
          "time" : "all",
          "usage" : 55,
          "currency" : "USD",
          "currencySymbol" : "$",
          "cost" : 1.02,
          "received" : 508,
          "sent" : 495,
          "volume" : {
            "to" : {
              "client@domain.com" : 395,
              "user@site.net" : 57,
              "sales@company.com" : 47,
              "client@anothersite.com" : 9
            },
            "from" : {
              "billing@somedomain.com" : 369,
              "sales@somedomain.com" : 139
            },
            "ip" : {
              "1.1.1.1" : 142,
              "2.2.2.2" : 132,
              "3.3.3.3" : 129,
              "4.4.4.4" : 105
            }
          }
        }
      },
      "MailStatsType_volume_to" : {
        "type" : "object",
        "properties" : {
          "client@domain.com" : {
            "type" : "integer",
            "format" : "int32"
          },
          "user@site.net" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sales@company.com" : {
            "type" : "integer",
            "format" : "int32"
          },
          "client@anothersite.com" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MailStatsType_volume_from" : {
        "type" : "object",
        "properties" : {
          "billing@somedomain.com" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sales@somedomain.com" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MailStatsType_volume_ip" : {
        "type" : "object",
        "properties" : {
          "1.1.1.1" : {
            "type" : "integer",
            "format" : "int32"
          },
          "2.2.2.2" : {
            "type" : "integer",
            "format" : "int32"
          },
          "3.3.3.3" : {
            "type" : "integer",
            "format" : "int32"
          },
          "4.4.4.4" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MailStatsType_volume" : {
        "type" : "object",
        "properties" : {
          "to" : {
            "$ref" : "#/components/schemas/MailStatsType_volume_to"
          },
          "from" : {
            "$ref" : "#/components/schemas/MailStatsType_volume_from"
          },
          "ip" : {
            "$ref" : "#/components/schemas/MailStatsType_volume_ip"
          }
        }
      }
    },
    "responses" : {
      "BadInput" : {
        "description" : "Error message when there was a problem with the input parameters.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorMessage"
            },
            "examples" : {
              "BadInputError" : {
                "value" : {
                  "code" : 400,
                  "message" : "There was a problem with the input parameters."
                }
              }
            }
          }
        }
      },
      "NotFound" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorMessage"
            },
            "examples" : {
              "NotFoundError" : {
                "value" : {
                  "code" : 404,
                  "message" : "The specified resource was not found."
                }
              }
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorMessage"
            },
            "examples" : {
              "UnauthorizedError" : {
                "value" : {
                  "code" : 401,
                  "message" : "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "apiKeyAuth" : {
        "type" : "apiKey",
        "description" : "This authentication method uses a X-API-KEY HTTP header with the API Key from your account for validation.",
        "name" : "X-API-KEY",
        "in" : "header"
      }
    }
  }
}