/*
 * MailBaby Email Delivery API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # 📌 Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # 🔐 Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

/// MailLogEntry : An email record



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MailLogEntry {
    /// internal db id
    #[serde(rename = "_id")]
    pub _id: i32,
    /// mail id
    #[serde(rename = "id")]
    pub id: String,
    /// from address
    #[serde(rename = "from")]
    pub from: String,
    /// to address
    #[serde(rename = "to")]
    pub to: String,
    /// email subject
    #[serde(rename = "subject")]
    pub subject: String,
    /// message id
    #[serde(rename = "messageId")]
    pub message_id: String,
    /// creation date
    #[serde(rename = "created")]
    pub created: String,
    /// creation timestamp
    #[serde(rename = "time")]
    pub time: i32,
    /// user account
    #[serde(rename = "user")]
    pub user: String,
    /// transaction type
    #[serde(rename = "transtype")]
    pub transtype: String,
    /// transaction host
    #[serde(rename = "transhost")]
    pub transhost: String,
    /// origin host
    #[serde(rename = "originhost")]
    pub originhost: String,
    /// origin ip
    #[serde(rename = "origin")]
    pub origin: String,
    /// interface name
    #[serde(rename = "interface")]
    pub interface: String,
    /// date processed
    #[serde(rename = "date")]
    pub date: String,
    /// sending zone
    #[serde(rename = "sendingZone")]
    pub sending_zone: String,
    /// email body size in bytes
    #[serde(rename = "bodySize")]
    pub body_size: i32,
    /// md5 sum of the email
    #[serde(rename = "sourceMd5")]
    pub source_md5: String,
    /// delivery sequency
    #[serde(rename = "seq")]
    pub seq: i32,
    /// to address domain
    #[serde(rename = "domain")]
    pub domain: String,
    /// email receiver address
    #[serde(rename = "recipient")]
    pub recipient: String,
    /// locked status
    #[serde(rename = "locked")]
    pub locked: i32,
    /// lock timestamp
    #[serde(rename = "lockTime")]
    pub lock_time: i32,
    /// assigned server
    #[serde(rename = "assigned")]
    pub assigned: String,
    /// queued timestamp
    #[serde(rename = "queued")]
    pub queued: String,
    /// lock id
    #[serde(rename = "_lock")]
    pub _lock: String,
    /// logger
    #[serde(rename = "logger")]
    pub logger: String,
    /// mx port number
    #[serde(rename = "mxPort")]
    pub mx_port: i32,
    /// connection key
    #[serde(rename = "connectionKey")]
    pub connection_key: String,
    /// mx hostname
    #[serde(rename = "mxHostname")]
    pub mx_hostname: String,
    /// body hash
    #[serde(rename = "sentBodyHash")]
    pub sent_body_hash: String,
    /// sent body size in bytes
    #[serde(rename = "sentBodySize")]
    pub sent_body_size: i32,
    /// md5 checksum matching result
    #[serde(rename = "md5Match")]
    pub md5_match: i32,
}

impl MailLogEntry {
    /// An email record
    pub fn new(_id: i32, id: String, from: String, to: String, subject: String, message_id: String, created: String, time: i32, user: String, transtype: String, transhost: String, originhost: String, origin: String, interface: String, date: String, sending_zone: String, body_size: i32, source_md5: String, seq: i32, domain: String, recipient: String, locked: i32, lock_time: i32, assigned: String, queued: String, _lock: String, logger: String, mx_port: i32, connection_key: String, mx_hostname: String, sent_body_hash: String, sent_body_size: i32, md5_match: i32) -> MailLogEntry {
        MailLogEntry {
            _id,
            id,
            from,
            to,
            subject,
            message_id,
            created,
            time,
            user,
            transtype,
            transhost,
            originhost,
            origin,
            interface,
            date,
            sending_zone,
            body_size,
            source_md5,
            seq,
            domain,
            recipient,
            locked,
            lock_time,
            assigned,
            queued,
            _lock,
            logger,
            mx_port,
            connection_key,
            mx_hostname,
            sent_body_hash,
            sent_body_size,
            md5_match,
        }
    }
}


