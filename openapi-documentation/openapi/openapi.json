{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "detain@interserver.net",
      "name" : "Joe Huss",
      "url" : "https://www.interserver.net/contact-information.html"
    },
    "description" : "This is an API defintion for accesssing the Mail.Baby mail service.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService" : "https://www.interserver.net/terms-of-service.html",
    "title" : "Mail Baby API",
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "https://www.interserver.net/blog/\n",
    "url" : "https://interserver.net/tips/"
  },
  "servers" : [ {
    "description" : "Live API Endpoint",
    "url" : "https://api.mailbaby.net/"
  }, {
    "description" : "Temporary API Endpoint",
    "url" : "http://mynew.interserver.net:8787/"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/InterServer/MailBaby/1.0.0"
  } ],
  "security" : [ {
    "apiKeyAuth" : [ ]
  } ],
  "paths" : {
    "/ping" : {
      "get" : {
        "operationId" : "pingServer",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Server is up and running"
          },
          "default" : {
            "description" : "Something is wrong"
          }
        },
        "security" : [ ],
        "summary" : "Checks if the server is running"
      }
    },
    "/mail" : {
      "get" : {
        "operationId" : "getMailOrders",
        "parameters" : [ {
          "description" : "The ID of your mail order this will be sent through.",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK",
            "links" : {
              "sendMailByIdLink" : {
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}/send`.",
                "operationId" : "sendMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                }
              },
              "getMailByIdLink" : {
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}`.",
                "operationId" : "getMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                }
              }
            }
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "displays a list of mail service orders"
      }
    },
    "/mail/order" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "validateMailOrder",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "validatess order details before placing an order"
      },
      "post" : {
        "deprecated" : true,
        "description" : "Adds an item to the system",
        "operationId" : "placeMailOrder",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailOrder"
              }
            }
          },
          "description" : "Inventory item to add"
        },
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "places a mail order"
      }
    },
    "/mail/send" : {
      "post" : {
        "description" : "Sends An email through one of your mail orders.",
        "operationId" : "sendMailById",
        "parameters" : [ {
          "description" : "The Subject of the email",
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The contents of the email",
          "explode" : true,
          "in" : "query",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The email address of who this email will be sent to.",
          "explode" : true,
          "in" : "query",
          "name" : "to",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The email address of who this email will be sent from.",
          "explode" : true,
          "in" : "query",
          "name" : "from",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The ID of your mail order this will be sent through.",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The name or title of who this email is being sent to.",
          "explode" : true,
          "in" : "query",
          "name" : "toName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The name or title of who this email is being sent from.",
          "explode" : true,
          "in" : "query",
          "name" : "fromName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            },
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "The specified resource was not found"
          }
        },
        "summary" : "Sends an Email"
      }
    },
    "/mail/advsend" : {
      "post" : {
        "description" : "Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.",
        "operationId" : "sendAdvMailById",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            },
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Unauthorized"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "The specified resource was not found"
          }
        },
        "summary" : "Sends an Email with Advanced Options"
      }
    },
    "/mail/log" : {
      "get" : {
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId" : "viewMailLogById",
        "parameters" : [ {
          "description" : "The ID of your mail order this will be sent through.",
          "explode" : true,
          "in" : "query",
          "name" : "id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "pass an optional search string for looking up inventory",
          "explode" : true,
          "in" : "query",
          "name" : "searchString",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "number of records to skip for pagination",
          "explode" : true,
          "in" : "query",
          "name" : "skip",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "maximum number of records to return",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "maximum" : 50,
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MailLog"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          }
        },
        "summary" : "displays the mail log"
      }
    }
  },
  "components" : {
    "callbacks" : { },
    "examples" : { },
    "headers" : { },
    "links" : { },
    "parameters" : {
      "offsetParam" : {
        "description" : "Number of items to skip before returning the results.",
        "explode" : true,
        "in" : "query",
        "name" : "offset",
        "required" : false,
        "schema" : {
          "default" : 0,
          "format" : "int32",
          "minimum" : 0,
          "type" : "integer"
        },
        "style" : "form"
      },
      "limitParam" : {
        "description" : "Maximum number of items to return.",
        "explode" : true,
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "default" : 20,
          "format" : "int32",
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer"
        },
        "style" : "form"
      }
    },
    "requestBodies" : { },
    "responses" : {
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description" : "The specified resource was not found"
      },
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description" : "Unauthorized"
      }
    },
    "schemas" : {
      "ErrorResponse" : {
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ],
        "type" : "object"
      },
      "GenericResponse" : {
        "properties" : {
          "status" : {
            "example" : "ok",
            "type" : "string"
          },
          "status_text" : {
            "example" : "The command completed successfully.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MailOrders" : {
        "items" : {
          "$ref" : "#/components/schemas/MailOrder"
        },
        "type" : "array"
      },
      "MailOrder" : {
        "properties" : {
          "id" : {
            "example" : 1234,
            "type" : "integer"
          },
          "status" : {
            "example" : "active",
            "type" : "string"
          },
          "username" : {
            "example" : "mb1234",
            "type" : "string"
          },
          "password" : {
            "example" : "guest123",
            "type" : "string"
          },
          "comment" : {
            "example" : "main mail account",
            "type" : "string"
          }
        },
        "required" : [ "id", "status", "username" ],
        "type" : "object"
      },
      "MailLog" : {
        "description" : "Mail Order Details",
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "MailContact" : {
        "description" : "An Email Contact",
        "properties" : {
          "email" : {
            "description" : "The email address",
            "example" : "johndoe@company.com",
            "type" : "string"
          },
          "name" : {
            "description" : "Optional contact name",
            "example" : "John Doe",
            "type" : "string"
          }
        },
        "required" : [ "email" ],
        "type" : "object"
      },
      "MailAttachment" : {
        "description" : "A File attachment for an email",
        "properties" : {
          "filename" : {
            "description" : "Optional filename to specify for the attachment.",
            "example" : "company_logo.png",
            "type" : "string"
          },
          "data" : {
            "description" : "Contents of the attached file",
            "format" : "binary",
            "type" : "string"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "SendMail" : {
        "description" : "Details for an Email",
        "properties" : {
          "id" : {
            "description" : "The ID of the Mail order within our system to use as the Mail Account.",
            "format" : "int64",
            "type" : "integer"
          },
          "from" : {
            "$ref" : "#/components/schemas/MailContact"
          },
          "to" : {
            "description" : "The Contact whom is the primary recipient of this email.",
            "items" : {
              "$ref" : "#/components/schemas/MailContact"
            },
            "type" : "array"
          },
          "subject" : {
            "description" : "The subject or title of the email",
            "example" : "Your Package has been Delivered!",
            "type" : "string"
          },
          "body" : {
            "description" : "The main email contents.",
            "example" : "The package you ordered on 2021-01-23 has been delivered. If the package is broken into many pieces, please blaim someone else.\n",
            "type" : "string"
          },
          "replyto" : {
            "description" : "Optional list of Contacts that specify where replies to the email should be sent instead of the _from_ address.",
            "items" : {
              "$ref" : "#/components/schemas/MailContact"
            },
            "type" : "array"
          },
          "cc" : {
            "description" : "Optional list of Contacts that should receive copies of the email.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.",
            "items" : {
              "$ref" : "#/components/schemas/MailContact"
            },
            "type" : "array"
          },
          "bcc" : {
            "description" : "Optional list of Contacts that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.",
            "items" : {
              "$ref" : "#/components/schemas/MailContact"
            },
            "type" : "array"
          },
          "attachments" : {
            "description" : "Optional file attachments to include in the email",
            "items" : {
              "$ref" : "#/components/schemas/MailAttachment"
            },
            "type" : "array"
          }
        },
        "required" : [ "body", "from", "id", "subject", "to" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "apiKeyAuth" : {
        "in" : "header",
        "name" : "X-API-KEY",
        "type" : "apiKey"
      }
    }
  }
}