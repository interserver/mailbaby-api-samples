#import <Foundation/Foundation.h>
#import "OAIErrorResponse.h"
#import "OAIErrorResposne.h"
#import "OAIGenericResponse.h"
#import "OAIMailLog.h"
#import "OAIMailOrder.h"
#import "OAISendMail.h"
#import "OAIApi.h"

/**
* Mail Baby API
* This is an API for accesssing the mail services.
*
* The version of the OpenAPI document: 1.0.0
* Contact: detain@interserver.net
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIDefaultApi: NSObject <OAIApi>

extern NSString* kOAIDefaultApiErrorDomain;
extern NSInteger kOAIDefaultApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Gets mail order information by id
/// returns information about a mail order in the system with the given id.
///
/// @param _id User ID
/// 
///  code:200 message:"Successful operation"
///
/// @return OAIMailOrder*
-(NSURLSessionTask*) getMailByIdWithId: (NSNumber*) _id
    completionHandler: (void (^)(OAIMailOrder* output, NSError* error)) handler;


/// displays a list of mail service orders
/// 
///
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized"
///
/// @return NSArray<OAIMailOrder>*
-(NSURLSessionTask*) getMailOrdersWithCompletionHandler: 
    (void (^)(NSArray<OAIMailOrder>* output, NSError* error)) handler;


/// Checks if the server is running
/// 
///
/// 
///  code:200 message:"Server is up and running",
///  code:0 message:"Something is wrong"
///
/// @return void
-(NSURLSessionTask*) pingServerWithCompletionHandler: 
    (void (^)(NSError* error)) handler;


/// places a mail order
/// Adds an item to the system
///
/// @param mailOrder Inventory item to add (optional)
/// 
///  code:200 message:"list of mail orders",
///  code:400 message:"invalid input, object invalid",
///  code:409 message:"an existing item already exists",
///  code:401 message:"Unauthorized"
///
/// @return void
-(NSURLSessionTask*) placeMailOrderWithMailOrder: (OAIMailOrder*) mailOrder
    completionHandler: (void (^)(NSError* error)) handler;


/// Sends an Email with Advanced Options
/// Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
///
/// @param _id User ID
/// @param sendMail 
/// 
///  code:200 message:"search results matching criteria",
///  code:400 message:"bad input parameter",
///  code:401 message:"Unauthorized",
///  code:404 message:"The specified resource was not found"
///
/// @return OAIGenericResponse*
-(NSURLSessionTask*) sendAdvMailByIdWithId: (NSNumber*) _id
    sendMail: (OAISendMail*) sendMail
    completionHandler: (void (^)(OAIGenericResponse* output, NSError* error)) handler;


/// Sends an Email
/// Sends An email through one of your mail orders.
///
/// @param _id User ID
/// @param subject  (optional)
/// @param body  (optional)
/// @param to  (optional)
/// @param toName  (optional)
/// @param from  (optional)
/// @param fromName  (optional)
/// 
///  code:200 message:"search results matching criteria",
///  code:400 message:"bad input parameter",
///  code:401 message:"Unauthorized",
///  code:404 message:"The specified resource was not found"
///
/// @return OAIGenericResponse*
-(NSURLSessionTask*) sendMailByIdWithId: (NSNumber*) _id
    subject: (NSString*) subject
    body: (NSString*) body
    to: (NSString*) to
    toName: (NSString*) toName
    from: (NSString*) from
    fromName: (NSString*) fromName
    completionHandler: (void (^)(OAIGenericResponse* output, NSError* error)) handler;


/// validatess order details before placing an order
/// 
///
/// 
///  code:200 message:"list of mail orders",
///  code:401 message:"Unauthorized"
///
/// @return void
-(NSURLSessionTask*) validateMailOrderWithCompletionHandler: 
    (void (^)(NSError* error)) handler;


/// displays the mail log
/// By passing in the appropriate options, you can search for available inventory in the system 
///
/// @param _id User ID
/// @param searchString pass an optional search string for looking up inventory (optional)
/// @param skip number of records to skip for pagination (optional)
/// @param limit maximum number of records to return (optional)
/// 
///  code:200 message:"search results matching criteria",
///  code:400 message:"bad input parameter"
///
/// @return NSArray<OAIMailLog>*
-(NSURLSessionTask*) viewMailLogByIdWithId: (NSNumber*) _id
    searchString: (NSString*) searchString
    skip: (NSNumber*) skip
    limit: (NSNumber*) limit
    completionHandler: (void (^)(NSArray<OAIMailLog>* output, NSError* error)) handler;



@end
