/*
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MailBlocks : The listing of blocked emails.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MailBlocks {
    #[serde(rename = "local")]
    pub local: Vec<models::MailBlockClickHouse>,
    #[serde(rename = "mbtrap")]
    pub mbtrap: Vec<models::MailBlockClickHouse>,
    #[serde(rename = "subject")]
    pub subject: Vec<models::MailBlockRspamd>,
}

impl MailBlocks {
    /// The listing of blocked emails.
    pub fn new(local: Vec<models::MailBlockClickHouse>, mbtrap: Vec<models::MailBlockClickHouse>, subject: Vec<models::MailBlockRspamd>) -> MailBlocks {
        MailBlocks {
            local,
            mbtrap,
            subject,
        }
    }
}

