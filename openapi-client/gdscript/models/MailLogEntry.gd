extends Resource
class_name MailLogEntry

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# MailLogEntry Model
# An email record


# internal db id
# Required: True
# Example: 103172
# isArray: false
@export var Underscoreid: int:
	set(value):
		__Underscoreid__was__set = true
		Underscoreid = value
var __Underscoreid__was__set := false

# mail id
# Required: True
# Example: 17c7eda538e0005d03
# isArray: false
@export var id: String = "":
	set(value):
		__id__was__set = true
		id = value
var __id__was__set := false

# from address
# Required: True
# Example: person@mysite.com
# isArray: false
@export var from: String = "":
	set(value):
		__from__was__set = true
		from = value
var __from__was__set := false

# to address
# Required: True
# Example: client@isp.com
# isArray: false
@export var to: String = "":
	set(value):
		__to__was__set = true
		to = value
var __to__was__set := false

# email subject
# Required: True
# Example: sell 0.005 shares
# isArray: false
@export var subject: String = "":
	set(value):
		__subject__was__set = true
		subject = value
var __subject__was__set := false

# creation date
# Required: True
# Example: 2021-10-14 08:50:10
# isArray: false
@export var created: String = "":
	set(value):
		__created__was__set = true
		created = value
var __created__was__set := false

# creation timestamp
# Required: True
# Example: 1634215809
# isArray: false
@export var some_timenull: int:
	set(value):
		__some_timenull__was__set = true
		some_timenull = value
var __some_timenull__was__set := false

# user account
# Required: True
# Example: mb5658
# isArray: false
@export var user: String = "":
	set(value):
		__user__was__set = true
		user = value
var __user__was__set := false

# transaction type
# Required: True
# Example: ESMTPSA
# isArray: false
@export var transtype: String = "":
	set(value):
		__transtype__was__set = true
		transtype = value
var __transtype__was__set := false

# origin ip
# Required: True
# Example: 199.231.189.154
# isArray: false
@export var origin: String = "":
	set(value):
		__origin__was__set = true
		origin = value
var __origin__was__set := false

# interface name
# Required: True
# Example: feeder
# isArray: false
@export var interface: String = "":
	set(value):
		__interface__was__set = true
		interface = value
var __interface__was__set := false

# sending zone
# Required: True
# Example: interserver
# isArray: false
@export var sendingZone: String = "":
	set(value):
		__sendingZone__was__set = true
		sendingZone = value
var __sendingZone__was__set := false

# email body size in bytes
# Required: True
# Example: 63
# isArray: false
@export var bodySize: int:
	set(value):
		__bodySize__was__set = true
		bodySize = value
var __bodySize__was__set := false

# index of email in the to adderess list
# Required: True
# Example: 1
# isArray: false
@export var seq: int:
	set(value):
		__seq__was__set = true
		seq = value
var __seq__was__set := false

# to address this email is being sent to
# Required: True
# Example: client@isp.com
# isArray: false
@export var recipient: String = "":
	set(value):
		__recipient__was__set = true
		recipient = value
var __recipient__was__set := false

# to address domain
# Required: True
# Example: interserver.net
# isArray: false
@export var domain: String = "":
	set(value):
		__domain__was__set = true
		domain = value
var __domain__was__set := false

# locked status
# Required: True
# Example: 1
# isArray: false
@export var locked: int:
	set(value):
		__locked__was__set = true
		locked = value
var __locked__was__set := false

# lock timestamp
# Required: True
# Example: 1634215818533
# isArray: false
@export var lockTime: String = "":
	set(value):
		__lockTime__was__set = true
		lockTime = value
var __lockTime__was__set := false

# assigned server
# Required: True
# Example: relay1
# isArray: false
@export var assigned: String = "":
	set(value):
		__assigned__was__set = true
		assigned = value
var __assigned__was__set := false

# queued timestamp
# Required: True
# Example: 2021-10-14T12:50:15.487Z
# isArray: false
@export var queued: String = "":
	set(value):
		__queued__was__set = true
		queued = value
var __queued__was__set := false

# mx hostname
# Required: True
# Example: mx.j.is.cc
# isArray: false
@export var mxHostname: String = "":
	set(value):
		__mxHostname__was__set = true
		mxHostname = value
var __mxHostname__was__set := false

# mail delivery response
# Required: True
# Example: 250 2.0.0 Ok queued as C91D83E128C
# isArray: false
@export var response: String = "":
	set(value):
		__response__was__set = true
		response = value
var __response__was__set := false

# message id
# Required: False
# Example: <vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>
# isArray: false
@export var messageId: String = "":
	set(value):
		__messageId__was__set = true
		messageId = value
var __messageId__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	if not self.__Underscoreid__was__set:
		bzz_missing_properties.append("Underscoreid")
	if not self.__id__was__set:
		bzz_missing_properties.append("id")
	if not self.__from__was__set:
		bzz_missing_properties.append("from")
	if not self.__to__was__set:
		bzz_missing_properties.append("to")
	if not self.__subject__was__set:
		bzz_missing_properties.append("subject")
	if not self.__created__was__set:
		bzz_missing_properties.append("created")
	if not self.__some_timenull__was__set:
		bzz_missing_properties.append("some_timenull")
	if not self.__user__was__set:
		bzz_missing_properties.append("user")
	if not self.__transtype__was__set:
		bzz_missing_properties.append("transtype")
	if not self.__origin__was__set:
		bzz_missing_properties.append("origin")
	if not self.__interface__was__set:
		bzz_missing_properties.append("interface")
	if not self.__sendingZone__was__set:
		bzz_missing_properties.append("sendingZone")
	if not self.__bodySize__was__set:
		bzz_missing_properties.append("bodySize")
	if not self.__seq__was__set:
		bzz_missing_properties.append("seq")
	if not self.__recipient__was__set:
		bzz_missing_properties.append("recipient")
	if not self.__domain__was__set:
		bzz_missing_properties.append("domain")
	if not self.__locked__was__set:
		bzz_missing_properties.append("locked")
	if not self.__lockTime__was__set:
		bzz_missing_properties.append("lockTime")
	if not self.__assigned__was__set:
		bzz_missing_properties.append("assigned")
	if not self.__queued__was__set:
		bzz_missing_properties.append("queued")
	if not self.__mxHostname__was__set:
		bzz_missing_properties.append("mxHostname")
	if not self.__response__was__set:
		bzz_missing_properties.append("response")
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__Underscoreid__was__set:
		bzz_dictionary["Underscoreid"] = self.Underscoreid
	if self.__id__was__set:
		bzz_dictionary["id"] = self.id
	if self.__from__was__set:
		bzz_dictionary["from"] = self.from
	if self.__to__was__set:
		bzz_dictionary["to"] = self.to
	if self.__subject__was__set:
		bzz_dictionary["subject"] = self.subject
	if self.__created__was__set:
		bzz_dictionary["created"] = self.created
	if self.__some_timenull__was__set:
		bzz_dictionary["some_timenull"] = self.some_timenull
	if self.__user__was__set:
		bzz_dictionary["user"] = self.user
	if self.__transtype__was__set:
		bzz_dictionary["transtype"] = self.transtype
	if self.__origin__was__set:
		bzz_dictionary["origin"] = self.origin
	if self.__interface__was__set:
		bzz_dictionary["interface"] = self.interface
	if self.__sendingZone__was__set:
		bzz_dictionary["sendingZone"] = self.sendingZone
	if self.__bodySize__was__set:
		bzz_dictionary["bodySize"] = self.bodySize
	if self.__seq__was__set:
		bzz_dictionary["seq"] = self.seq
	if self.__recipient__was__set:
		bzz_dictionary["recipient"] = self.recipient
	if self.__domain__was__set:
		bzz_dictionary["domain"] = self.domain
	if self.__locked__was__set:
		bzz_dictionary["locked"] = self.locked
	if self.__lockTime__was__set:
		bzz_dictionary["lockTime"] = self.lockTime
	if self.__assigned__was__set:
		bzz_dictionary["assigned"] = self.assigned
	if self.__queued__was__set:
		bzz_dictionary["queued"] = self.queued
	if self.__mxHostname__was__set:
		bzz_dictionary["mxHostname"] = self.mxHostname
	if self.__response__was__set:
		bzz_dictionary["response"] = self.response
	if self.__messageId__was__set:
		bzz_dictionary["messageId"] = self.messageId
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("Underscoreid"):
		me.Underscoreid = from_dict["Underscoreid"]
	if from_dict.has("id"):
		me.id = from_dict["id"]
	if from_dict.has("from"):
		me.from = from_dict["from"]
	if from_dict.has("to"):
		me.to = from_dict["to"]
	if from_dict.has("subject"):
		me.subject = from_dict["subject"]
	if from_dict.has("created"):
		me.created = from_dict["created"]
	if from_dict.has("some_timenull"):
		me.some_timenull = from_dict["some_timenull"]
	if from_dict.has("user"):
		me.user = from_dict["user"]
	if from_dict.has("transtype"):
		me.transtype = from_dict["transtype"]
	if from_dict.has("origin"):
		me.origin = from_dict["origin"]
	if from_dict.has("interface"):
		me.interface = from_dict["interface"]
	if from_dict.has("sendingZone"):
		me.sendingZone = from_dict["sendingZone"]
	if from_dict.has("bodySize"):
		me.bodySize = from_dict["bodySize"]
	if from_dict.has("seq"):
		me.seq = from_dict["seq"]
	if from_dict.has("recipient"):
		me.recipient = from_dict["recipient"]
	if from_dict.has("domain"):
		me.domain = from_dict["domain"]
	if from_dict.has("locked"):
		me.locked = from_dict["locked"]
	if from_dict.has("lockTime"):
		me.lockTime = from_dict["lockTime"]
	if from_dict.has("assigned"):
		me.assigned = from_dict["assigned"]
	if from_dict.has("queued"):
		me.queued = from_dict["queued"]
	if from_dict.has("mxHostname"):
		me.mxHostname = from_dict["mxHostname"]
	if from_dict.has("response"):
		me.response = from_dict["response"]
	if from_dict.has("messageId"):
		me.messageId = from_dict["messageId"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

