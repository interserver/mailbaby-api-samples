openapi: 3.0.3
info:
  title: MailBaby Email Delivery and Management Service API
  description: |
    **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**
    # Overview
    This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).
    # Authentication
    In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.
    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.
  termsOfService: https://www.interserver.net/terms-of-service.html
  contact:
    name: Mail Baby
    url: https://www.mail.baby/contact/
    email: support@interserver.net
  license:
    name: GNU GPLv3
    url: https://www.gnu.org/licenses/gpl.txt
  version: 1.1.0
externalDocs:
  description: FAQ
  url: https://www.mail.baby/tips/
servers:
- url: https://api.mailbaby.net
  description: Live API Endpoint
security:
- apiKeyAuth: []
tags:
- name: Services
  description: Mail service orders.
- name: Sending
  description: Email delivery commands
- name: Blocking
  description: Management of email blocking rules and block lists.
- name: History
  description: Information about already delivered emails.
- name: Status
  description: Service Status
paths:
  /mail:
    get:
      tags:
      - Services
      summary: displays a list of mail service orders
      description: "This will return a list of the mail orders you have in our system\
        \ including their id, status, username, and optional comment."
      operationId: getMailOrders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailOrder'
                x-content-type: application/json
              examples:
                MailOrders:
                  value:
                  - id: 39
                    status: active
                    username: mb39
                  - id: 33
                    status: canceled
                    username: mb33
                    comment: test order
          links:
            sendMailByIdLink:
              operationId: sendMail
              parameters:
                id: $response.body#/0/id
              description: The `id` value returned in the response can be used as
                the `id` parameter in `GET /mail/advsend`.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Services
  /mail/blocks:
    get:
      tags:
      - Blocking
      summary: displays a list of blocked email addresses
      operationId: getMailBlocks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailBlocks'
              examples:
                MailBlocksExample:
                  value:
                    local:
                    - date: 2023-08-07
                      from: user@domain.com
                      messageId: pFaRqFUEWkucjhTuIzYuoAgWU@domain.com
                      subject: Test Email
                      to: "['client@site.com']"
                    mbtrap:
                    - date: 2023-08-07
                      from: user@domain.com
                      messageId: pFaRqFUEWkucjhTuIzYuoAgWU@domain.com
                      subject: Test Email
                      to: "['client@site.com']"
                    subject:
                    - from: user@domain.com
                      subject: Test Email
          links:
            delistBlockLink:
              operationId: delistBlock
              parameters:
                email: $response.body#/local/0/from
              description: The `from` value returned in the response can be used as
                the `email` parameter in `DELETE /mail/blocks`.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Blocking
  /mail/stats:
    get:
      tags:
      - History
      summary: displays a list of blocked email addresses
      operationId: getStats
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
                x-content-type: application/json
          links:
            delistBlockLink:
              operationId: delistBlock
              parameters:
                id: $response.body#/0/id
              description: The `id` value returned in the response can be used as
                the `id` parameter in `GET /mail/advsend`.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: History
  /mail/send:
    post:
      tags:
      - Sending
      summary: Sends an Email
      description: |
        Sends an email through one of your mail orders.

        *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead.
      operationId: sendMail
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendMail'
          application/json:
            schema:
              $ref: '#/components/schemas/SendMail'
        required: true
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Sending
  /mail/advsend:
    summary: Sends an Email with Advanced Options
    description: "Sends An email through one of your mail orders allowing additional\
      \ options such as file attachments, cc, bcc, etc."
    post:
      tags:
      - Sending
      summary: Sends an Email with Advanced Options
      description: "Sends An email through one of your mail orders allowing additional\
        \ options such as file attachments, cc, bcc, etc."
      operationId: sendAdvMail
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendMailAdv'
            examples:
              AdvSendExample:
                value:
                  subject: Welcome
                  body: Hello
                  from:
                    email: user@domain.com
                  to:
                  - email: someone@client.com
                    name: Mr Client
                  attachments:
                  - filename: message.txt
                    data: base64_encoded_contents
                  id: 66
          application/json:
            schema:
              $ref: '#/components/schemas/SendMailAdv'
            examples:
              AdvSendExample:
                value:
                  subject: Welcome
                  body: Hello
                  from:
                    email: user@domain.com
                  to:
                  - email: someone@client.com
                    name: Mr Client
                  attachments:
                  - filename: message.txt
                    data: base64_encoded_contents
                  id: 66
        required: true
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Sending
  /mail/log:
    get:
      tags:
      - History
      summary: displays the mail log
      description: |
        Get a listing of the emails sent through this system
      operationId: viewMailLog
      parameters:
      - name: id
        in: query
        description: The ID of your mail order this will be sent through.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2604
      - name: origin
        in: query
        description: originating ip address sending mail
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 1.2.3.4
      - name: mx
        in: query
        description: mx record mail was sent to
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: mx.google.com
      - name: from
        in: query
        description: from email address
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: me@sender.com
      - name: to
        in: query
        description: to/destination email address
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: you@receiver.com
      - name: subject
        in: query
        description: subject containing this string
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Support
      - name: mailid
        in: query
        description: mail id
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 185997065c60008840
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
        example: 1000
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
          default: 100
        example: 1000
      - name: startDate
        in: query
        description: earliest date to get emails in unix timestamp format
        required: false
        style: form
        explode: true
        schema:
          maximum: 9999999999
          minimum: 0
          type: integer
          format: int64
        example: 1641781008
      - name: endDate
        in: query
        description: earliest date to get emails in unix timestamp format
        required: false
        style: form
        explode: true
        schema:
          maximum: 9999999999
          minimum: 0
          type: integer
          format: int64
        example: 1673317008
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailLog'
              examples:
                MailLogExample:
                  value:
                    total: 1
                    skip: 0
                    limit: 100
                    emails:
                    - _id: 103172
                      id: 17c7eda538e0005d03
                      from: person@mysite.com
                      to: client@isp.com
                      subject: sell 0.005 shares
                      messageId: <vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>
                      created: 2021-10-14 08:50:10
                      time: 1634215809
                      user: mb5658
                      transtype: ESMTPSA
                      origin: 199.231.189.154
                      interface: feeder
                      sendingZone: interserver
                      bodySize: 63
                      seq: 1
                      recipient: client@isp.com
                      domain: interserver.net
                      locked: 1
                      lockTime: "1634215818533"
                      assigned: relay1
                      queued: 2021-10-14T12:50:15.487Z
                      mxHostname: mx.j.is.cc
                      response: 250 2.0.0 Ok queued as C91D83E128C
        "400":
          description: bad input parameter
      x-swagger-router-controller: History
  /ping:
    get:
      tags:
      - Status
      summary: Checks if the server is running
      operationId: pingServer
      responses:
        "200":
          description: Server is up and running
        default:
          description: Something is wrong
      x-swagger-router-controller: Status
  /mail/blocks/delete:
    post:
      tags:
      - Blocking
      summary: Removes an email address from the blocked list
      description: |
        Removes an email address from the various block lists.
      operationId: delistBlock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddress'
            examples:
              BlocksDeleteExample:
                value:
                  email: client@domain.com
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAddress'
            examples:
              BlocksDeleteExampleForm:
                value:
                  email: client@domain.com
        required: true
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Blocking
  /mail/rules:
    summary: Deny Rules
    description: The deny rules allow you to setup assorted types of rules which will
      automatically deny the email from being sent through our system when  the citeria
      match.
    get:
      tags:
      - Blocking
      summary: Displays a listing of deny email rules.
      description: Returns a listing of all the deny block rules you have configured.
      operationId: getRules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DenyRuleRecord'
                x-content-type: application/json
              examples:
                ExampleMailRulesList:
                  value:
                  - id: "14"
                    user: mb20682
                    type: email
                    data: domeinwo@server.guesshost.net
                    created: 2022-03-22 19:16:35
                  - id: "15"
                    user: mb20682
                    type: email
                    data: mamediieva@thedigital.gov.ua
                    created: 2022-03-22 19:18:01
          links:
            delistBlockLink:
              operationId: delistBlock
              parameters:
                id: $response.body#/0/id
              description: The `id` value returned in the response can be used as
                the `id` parameter in `GET /mail/advsend`.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Blocking
    post:
      tags:
      - Blocking
      summary: Creates a new email deny rule.
      description: Adds a new email deny rule into the system to block new emails
        that match the given criteria
      operationId: addRule
      requestBody:
        description: These are the fields needed to create a new email deny rule.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DenyRuleNew'
            examples:
              DenyRuleNewFormExample:
                value:
                  user: mb20682
                  type: email
                  data: domeinwo@server.guesshost.net
          application/json:
            schema:
              $ref: '#/components/schemas/DenyRuleNew'
            examples:
              DenyRuleNewJsonExample:
                value:
                  user: mb20682
                  type: email
                  data: domeinwo@server.guesshost.net
        required: true
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Blocking
  /mail/rules/{ruleId}:
    delete:
      tags:
      - Blocking
      summary: Removes an deny mail rule.
      description: Removes one of the configured deny mail rules from the system.
      operationId: deleteRule
      parameters:
      - name: ruleId
        in: path
        description: The ID of the Rules entry.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        examples:
          RuleIdExample:
            value: "34"
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        "400":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      x-swagger-router-controller: Blocking
components:
  schemas:
    GenericResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
        text:
          type: string
          example: The command completed successfully.
      example:
        text: The command completed successfully.
        status: ok
    SendMail:
      required:
      - body
      - from
      - subject
      - to
      type: object
      properties:
        to:
          type: string
          description: The Contact whom is the primary recipient of this email.
          example: johndoe@company.com
        from:
          type: string
          description: The contact whom is the this email is from.
          example: janedoe@company.com
        subject:
          type: string
          description: The subject or title of the email
          example: Attention Client
        body:
          type: string
          description: The main email contents.
          example: This is an email to inform you that something noteworthy happened.
      description: Details for an Email
    DenyRuleRecord:
      title: Root Type for DenyRule
      type: object
      description: The data for a email deny rule record.
      example:
        id: 14
        user: mb20682
        type: email
        data: domeinwo@server.guesshost.net
        created: 2022-03-22 19:16:35
      allOf:
      - required:
        - created
        - id
        type: object
        properties:
          id:
            type: integer
            description: The deny rule Id number.
            example: 41124
          created:
            type: string
            description: the date the rule was created.
            format: date-time
      - $ref: '#/components/schemas/DenyRuleNew'
    DenyRuleNew:
      title: Root Type for DenyRule
      required:
      - data
      - type
      type: object
      properties:
        user:
          type: string
          description: Mail account username that will be tied to this rule.  If not
            specified the first active mail order will be used.
          example: mb20682
        type:
          type: string
          description: The type of deny rule.
          example: email
          enum:
          - domain
          - email
          - startswith
        data:
          type: string
          description: The content of the rule.  If a domain type rule then an example
            would be google.com. For a begins with type an example would be msgid-.  For
            the email typer an example would be user@server.com.
          example: domeinwo@server.guesshost.net
      description: The data for a email deny rule record.
      example:
        user: mb20682
        type: email
        data: domeinwo@server.guesshost.net
    MailOrder:
      title: Root Type for MailOrder
      required:
      - id
      - status
      - username
      type: object
      properties:
        id:
          type: integer
          description: The ID of the order.
          format: int32
          example: 21472
        status:
          type: string
          description: The order status.
          example: active
        username:
          type: string
          description: The username to use for this order.
          example: mb21472
        comment:
          type: string
          description: Optional order comment.
      description: A mail order record
      example:
        id: 21472
        status: active
        username: mb21472
    MailBlockClickHouse:
      title: Root Type for MailBlockClickHouse
      required:
      - date
      - from
      - messageId
      - subject
      - to
      type: object
      properties:
        date:
          type: string
          format: date
        from:
          type: string
        messageId:
          type: string
        subject:
          type: string
        to:
          type: string
      description: A block entry from the clickhouse mailblocks server.
      example:
        date: 2023-08-07
        from: user@domain.com
        messageId: pFaRqFUEWkucjhTuIzYuoAgWU@domain.com
        subject: Test Email
        to: "['client@site.com']"
    MailBlockRspamd:
      title: Root Type for MailBlockRspamd
      required:
      - from
      - subject
      type: object
      properties:
        from:
          type: string
        subject:
          type: string
      description: This is a block entry from the rspamd block list.
      example:
        from: user@domain.com
        subject: Test email
    MailBlocks:
      title: Root Type for MailBlocks
      required:
      - local
      - mbtrap
      - subject
      type: object
      properties:
        local:
          type: array
          items:
            $ref: '#/components/schemas/MailBlockClickHouse'
        mbtrap:
          type: array
          items:
            $ref: '#/components/schemas/MailBlockClickHouse'
        subject:
          type: array
          items:
            $ref: '#/components/schemas/MailBlockRspamd'
      description: The listing of blocked emails.
      example:
        local:
        - date: 2023-08-07
          from: user@domain.com
          messageId: pFaRqFUEWkucjhTuIzYuoAgWU@domain.com
          subject: Test Email
          to: "['client@site.com']"
        mbtrap:
        - date: 2023-08-07
          from: user@domain.com
          messageId: pFaRqFUEWkucjhTuIzYuoAgWU@domain.com
          subject: Test Email
          to: "['client@site.com']"
        subject:
        - from: user@domain.com
          subject: Test Email
    EmailAddress:
      title: Root Type for EmailAddress
      type: object
      properties:
        email:
          type: string
          description: an email address
          example: user@domain.com
      description: an email address
      example:
        email: user@domain.com
    MailLogEntry:
      required:
      - _id
      - assigned
      - bodySize
      - created
      - domain
      - from
      - id
      - interface
      - lockTime
      - locked
      - mxHostname
      - origin
      - queued
      - recipient
      - response
      - sendingZone
      - seq
      - subject
      - time
      - to
      - transtype
      - user
      type: object
      properties:
        _id:
          type: integer
          description: internal db id
          example: 103172
        id:
          type: string
          description: mail id
          example: 17c7eda538e0005d03
        from:
          type: string
          description: from address
          example: person@mysite.com
        to:
          type: string
          description: to address
          example: client@isp.com
        subject:
          type: string
          description: email subject
          example: sell 0.005 shares
        messageId:
          type: string
          description: message id
          example: <vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>
        created:
          type: string
          description: creation date
          example: 2021-10-14 08:50:10
        time:
          type: integer
          description: creation timestamp
          example: 1634215809
        user:
          type: string
          description: user account
          example: mb5658
        transtype:
          type: string
          description: transaction type
          example: ESMTPSA
        origin:
          type: string
          description: origin ip
          example: 199.231.189.154
        interface:
          type: string
          description: interface name
          example: feeder
        sendingZone:
          type: string
          description: sending zone
          example: interserver
        bodySize:
          type: integer
          description: email body size in bytes
          example: 63
        seq:
          type: integer
          description: index of email in the to adderess list
          example: 1
        recipient:
          type: string
          description: to address this email is being sent to
          example: client@isp.com
        domain:
          type: string
          description: to address domain
          example: interserver.net
        locked:
          type: integer
          description: locked status
          example: 1
        lockTime:
          type: integer
          description: lock timestamp
          example: 1634215818533
        assigned:
          type: string
          description: assigned server
          example: relay1
        queued:
          type: string
          description: queued timestamp
          example: 2021-10-14T12:50:15.487Z
        mxHostname:
          type: string
          description: mx hostname
          example: mx.j.is.cc
        response:
          type: string
          description: mail delivery response
          example: 250 2.0.0 Ok queued as C91D83E128C
      description: An email record
      example:
        _id: 103172
        id: 17c7eda538e0005d03
        from: person@mysite.com
        to: client@isp.com
        subject: sell 0.005 shares
        messageId: <vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>
        created: 2021-10-14 08:50:10
        time: 1634215809
        user: mb5658
        transtype: ESMTPSA
        origin: 199.231.189.154
        interface: feeder
        sendingZone: interserver
        bodySize: 63
        seq: 1
        recipient: client@isp.com
        domain: interserver.net
        locked: 1
        lockTime: "1634215818533"
        assigned: relay1
        queued: 2021-10-14T12:50:15.487Z
        mxHostname: mx.j.is.cc
        response: 250 2.0.0 Ok queued as C91D83E128C
    MailLog:
      required:
      - emails
      - limit
      - skip
      - total
      type: object
      properties:
        total:
          type: integer
          description: total number of mail log entries
          example: 10234
        skip:
          type: integer
          description: number of emails skipped in listing
          example: 0
        limit:
          type: integer
          description: number of emails to return
          example: 100
        emails:
          type: array
          example: |-
            [{
                "_id": 103172,
                "id": "17c7eda538e0005d03",
                "from": "person@mysite.com",
                "to": "client@isp.com",
                "subject": "sell 0.005 shares",
                "messageId": "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
                "created": "2021-10-14 08:50:10",
                "time": 1634215809,
                "user": "mb5658",
                "transtype": "ESMTPSA",
                "origin": "199.231.189.154",
                "interface": "feeder",
                "sendingZone": "interserver",
                "bodySize": 63,
                "seq": 1,
                "recipient": "client@isp.com",
                "domain": "interserver.net",
                "locked": 1,
                "lockTime": "1634215818533",
                "assigned": "relay1",
                "queued": "2021-10-14T12:50:15.487Z",
                "mxHostname": "mx.j.is.cc",
                "response": "250 2.0.0 Ok queued as C91D83E128C"
            }]
          items:
            $ref: '#/components/schemas/MailLogEntry'
      description: Mail log records
      example:
        total: 1
        skip: 0
        limit: 100
        emails:
        - _id: 103172
          id: 17c7eda538e0005d03
          from: person@mysite.com
          to: client@isp.com
          subject: sell 0.005 shares
          messageId: <vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>
          created: 2021-10-14T08:50:10.000Z
          time: 1634215809
          user: mb5658
          transtype: ESMTPSA
          origin: 199.231.189.154
          interface: feeder
          sendingZone: interserver
          bodySize: 63
          seq: 1
          recipient: client@isp.com
          domain: interserver.net
          locked: 1
          lockTime: "1634215818533"
          assigned: relay1
          queued: 2021-10-14T12:50:15.487Z
          mxHostname: mx.j.is.cc
          response: 250 2.0.0 Ok queued as C91D83E128C
    SendMailAdv:
      title: Email details
      required:
      - body
      - from
      - subject
      - to
      type: object
      properties:
        subject:
          type: string
          description: The subject or title of the email
          example: Your Package has been Delivered!
        body:
          type: string
          description: The main email contents.
          example: "The package you ordered on 2021-01-23 has been delivered. If the\
            \ package is broken into many pieces, please blaim someone else."
        from:
          $ref: '#/components/schemas/EmailAddressName'
        to:
          type: array
          description: A list of destionation email addresses to send this to
          example: "[{\"email\": \"user@domain.com\", \"name\": \"John Smith\"}]"
          items:
            $ref: '#/components/schemas/EmailAddressName'
        replyto:
          type: array
          description: (optional) A list of email addresses that specify where replies
            to the email should be sent instead of the _from_ address.
          example: "[{\"email\": \"user@domain.com\", \"name\": \"John Smith\"}]"
          items:
            $ref: '#/components/schemas/EmailAddressName'
        cc:
          type: array
          description: (optional) A list of email addresses to carbon copy this message
            to.  They are listed on the email and anyone getting the email can see
            this full list of Contacts who received the email as well.
          example: "[{\"email\": \"user@domain.com\", \"name\": \"John Smith\"}]"
          items:
            $ref: '#/components/schemas/EmailAddressName'
        bcc:
          type: array
          description: (optional) list of email addresses that should receive copies
            of the email.  They are hidden on the email and anyone gettitng the email
            would not see the other people getting the email in this list.
          example: "[{\"email\": \"user@domain.com\", \"name\": \"John Smith\"}]"
          items:
            $ref: '#/components/schemas/EmailAddressName'
        attachments:
          type: array
          description: (optional) File attachments to include in the email.  The file
            contents must be base64 encoded!
          example: |-
            [
                    {
                        "filename": "text.txt",
                        "data": "base64_encoded_contents"
                    }
            ]
          items:
            $ref: '#/components/schemas/MailAttachment'
        id:
          type: integer
          description: (optional)  ID of the Mail order within our system to use as
            the Mail Account.
          format: int64
          example: 5000
      description: Details for an Email
      example:
        subject: Welcome
        body: Hello
        from:
          email: user@domain.com
        to:
        - email: someone@client.com
          name: Mr Client
        attachments:
        - filename: file.txt
          data: base64_encoded_contents
        id: 66
    EmailAddressName:
      title: Root Type for EmailAddressName
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: The email address.
          example: user@domain.com
        name:
          type: string
          description: Name to use for the sending contact.
          example: John Smith
      description: An email contact.
      example:
        email: user@domain.com
        name: John Smith
    MailAttachment:
      title: Root Type for MailAttachment
      required:
      - data
      - filename
      type: object
      properties:
        filename:
          type: string
          description: The filename of the attached file.
          example: message.txt
        data:
          type: string
          description: The file contents base64 encoded
          example: aGVsbG8gdGhlcmUK
      description: (optional) File attachments to include in the email.  The file
        contents must be base64
      example:
        filename: file.txt
        data: base64_encoded_file_contents
    inline_response_401:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    inline_response_200:
      required:
      - id
      - status
      - username
      type: object
      properties:
        id:
          type: integer
          example: 1234
        status:
          type: string
          example: active
        username:
          type: string
          example: mb1234
        password:
          type: string
          example: guest123
        comment:
          type: string
          example: main mail account
      example:
        password: guest123
        comment: main mail account
        id: 1234
        status: active
        username: mb1234
  responses:
    BadInput:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
    AlreadyExists:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            required:
            - code
            - message
            type: object
            properties:
              code:
                type: string
              message:
                type: string
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
  parameters:
    offsetParam:
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    limitParam:
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 20
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      description: This authentication method uses a X-API-KEY HTTP header with the
        API Key from your account for validation.
      name: X-API-KEY
      in: header
