/*
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SendMailAdv : Details for an Email
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendMailAdv {
    /// The subject or title of the email
    #[serde(rename = "subject")]
    pub subject: String,
    /// The main email contents.
    #[serde(rename = "body")]
    pub body: String,
    #[serde(rename = "from")]
    pub from: Box<models::EmailAddressTypes>,
    #[serde(rename = "to")]
    pub to: Box<models::EmailAddressesTypes>,
    #[serde(rename = "replyto", skip_serializing_if = "Option::is_none")]
    pub replyto: Option<Box<models::EmailAddressesTypes>>,
    #[serde(rename = "cc", skip_serializing_if = "Option::is_none")]
    pub cc: Option<Box<models::EmailAddressesTypes>>,
    #[serde(rename = "bcc", skip_serializing_if = "Option::is_none")]
    pub bcc: Option<Box<models::EmailAddressesTypes>>,
    /// (optional) File attachments to include in the email.  The file contents must be base64 encoded!
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Vec<models::MailAttachment>>,
    /// (optional)  ID of the Mail order within our system to use as the Mail Account.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
}

impl SendMailAdv {
    /// Details for an Email
    pub fn new(subject: String, body: String, from: models::EmailAddressTypes, to: models::EmailAddressesTypes) -> SendMailAdv {
        SendMailAdv {
            subject,
            body,
            from: Box::new(from),
            to: Box::new(to),
            replyto: None,
            cc: None,
            bcc: None,
            attachments: None,
            id: None,
        }
    }
}

