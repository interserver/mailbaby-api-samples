# coding: utf-8

"""
    MailBaby Email Delivery and Management Service API

    **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

    The version of the OpenAPI document: 1.1.0
    Contact: support@interserver.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mail_stats_type_volume_ip import MailStatsTypeVolumeIp

class TestMailStatsTypeVolumeIp(unittest.TestCase):
    """MailStatsTypeVolumeIp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MailStatsTypeVolumeIp:
        """Test MailStatsTypeVolumeIp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MailStatsTypeVolumeIp`
        """
        model = MailStatsTypeVolumeIp()
        if include_optional:
            return MailStatsTypeVolumeIp(
                var_1_1_1_1 = 56,
                var_2_2_2_2 = 56,
                var_3_3_3_3 = 56,
                var_4_4_4_4 = 56
            )
        else:
            return MailStatsTypeVolumeIp(
        )
        """

    def testMailStatsTypeVolumeIp(self):
        """Test MailStatsTypeVolumeIp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
