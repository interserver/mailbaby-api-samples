{-
   Mail Baby API
   This is an API for accesssing the mail services.

   The version of the OpenAPI document: 1.0.0
   Contact: detain@interserver.net

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Default exposing
    ( getMailById
    , getMailOrders
    , pingServer
    , placeMailOrder
    , sendMailById
    , validateMailOrder
    , viewMailLogById
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| returns information about a mail order in the system with the given id.
-}
getMailById : Int -> Api.Request Api.Data.MailOrder
getMailById id_path =
    Api.request
        "GET"
        "/mail/{id}"
        [ ( "id", String.fromInt id_path ) ]
        []
        []
        Nothing
        Api.Data.mailOrderDecoder



getMailOrders : Api.Request (List Api.Data.MailOrder)
getMailOrders =
    Api.request
        "GET"
        "/mail"
        []
        []
        []
        Nothing
        (Json.Decode.list Api.Data.mailOrderDecoder)



pingServer : Api.Request ()
pingServer =
    Api.request
        "GET"
        "/ping"
        []
        []
        []
        Nothing
        (Json.Decode.succeed ())



{-| Adds an item to the system
-}
placeMailOrder : Maybe Api.Data.MailOrder -> Api.Request ()
placeMailOrder mailOrder_body =
    Api.request
        "POST"
        "/mail/order"
        []
        []
        []
        (Maybe.map Api.Data.encodeMailOrder mailOrder_body)
        (Json.Decode.succeed ())



{-| Sends An email through one of your mail orders.
-}
sendMailById : Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Api.Request Api.Data.GenericResponse
sendMailById id_path subject_query body_query to_query from_query =
    Api.request
        "POST"
        "/mail/{id}/send"
        [ ( "id", String.fromInt id_path ) ]
        [ ( "subject", Maybe.map identity subject_query ), ( "body", Maybe.map identity body_query ), ( "to", Maybe.map identity to_query ), ( "from", Maybe.map identity from_query ) ]
        []
        Nothing
        Api.Data.genericResponseDecoder



validateMailOrder : Api.Request ()
validateMailOrder =
    Api.request
        "GET"
        "/mail/order"
        []
        []
        []
        Nothing
        (Json.Decode.succeed ())



{-| By passing in the appropriate options, you can search for available inventory in the system 
-}
viewMailLogById : Int -> Maybe String -> Maybe Int -> Maybe Int -> Api.Request (List Api.Data.MailLog)
viewMailLogById id_path searchString_query skip_query limit_query =
    Api.request
        "GET"
        "/mail/{id}/log"
        [ ( "id", String.fromInt id_path ) ]
        [ ( "searchString", Maybe.map identity searchString_query ), ( "skip", Maybe.map String.fromInt skip_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.mailLogDecoder)
