//
// SendMailAdv.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Details for an Email */
public struct SendMailAdv: Codable, JSONEncodable, Hashable {

    /** The subject or title of the email */
    public var subject: String
    /** The main email contents. */
    public var body: String
    public var from: EmailAddressTypes
    public var to: EmailAddressesTypes
    public var replyto: EmailAddressesTypes?
    public var cc: EmailAddressesTypes?
    public var bcc: EmailAddressesTypes?
    /** (optional) File attachments to include in the email.  The file contents must be base64 encoded! */
    public var attachments: [MailAttachment]?
    /** (optional)  ID of the Mail order within our system to use as the Mail Account. */
    public var id: Int64?

    public init(subject: String, body: String, from: EmailAddressTypes, to: EmailAddressesTypes, replyto: EmailAddressesTypes? = nil, cc: EmailAddressesTypes? = nil, bcc: EmailAddressesTypes? = nil, attachments: [MailAttachment]? = nil, id: Int64? = nil) {
        self.subject = subject
        self.body = body
        self.from = from
        self.to = to
        self.replyto = replyto
        self.cc = cc
        self.bcc = bcc
        self.attachments = attachments
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case subject
        case body
        case from
        case to
        case replyto
        case cc
        case bcc
        case attachments
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(subject, forKey: .subject)
        try container.encode(body, forKey: .body)
        try container.encode(from, forKey: .from)
        try container.encode(to, forKey: .to)
        try container.encodeIfPresent(replyto, forKey: .replyto)
        try container.encodeIfPresent(cc, forKey: .cc)
        try container.encodeIfPresent(bcc, forKey: .bcc)
        try container.encodeIfPresent(attachments, forKey: .attachments)
        try container.encodeIfPresent(id, forKey: .id)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension SendMailAdv: Identifiable {}
