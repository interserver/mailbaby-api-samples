/*
 * Mail Baby API
 *
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * API version: 1.0.0
 * Contact: detain@interserver.net
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenericResponse struct for GenericResponse
type GenericResponse struct {
	Status *string `json:"status,omitempty"`
	StatusText *string `json:"status_text,omitempty"`
}

// NewGenericResponse instantiates a new GenericResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericResponse() *GenericResponse {
	this := GenericResponse{}
	return &this
}

// NewGenericResponseWithDefaults instantiates a new GenericResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericResponseWithDefaults() *GenericResponse {
	this := GenericResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GenericResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GenericResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GenericResponse) SetStatus(v string) {
	o.Status = &v
}

// GetStatusText returns the StatusText field value if set, zero value otherwise.
func (o *GenericResponse) GetStatusText() string {
	if o == nil || o.StatusText == nil {
		var ret string
		return ret
	}
	return *o.StatusText
}

// GetStatusTextOk returns a tuple with the StatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResponse) GetStatusTextOk() (*string, bool) {
	if o == nil || o.StatusText == nil {
		return nil, false
	}
	return o.StatusText, true
}

// HasStatusText returns a boolean if a field has been set.
func (o *GenericResponse) HasStatusText() bool {
	if o != nil && o.StatusText != nil {
		return true
	}

	return false
}

// SetStatusText gets a reference to the given string and assigns it to the StatusText field.
func (o *GenericResponse) SetStatusText(v string) {
	o.StatusText = &v
}

func (o GenericResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusText != nil {
		toSerialize["status_text"] = o.StatusText
	}
	return json.Marshal(toSerialize)
}

type NullableGenericResponse struct {
	value *GenericResponse
	isSet bool
}

func (v NullableGenericResponse) Get() *GenericResponse {
	return v.value
}

func (v *NullableGenericResponse) Set(val *GenericResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericResponse(val *GenericResponse) *NullableGenericResponse {
	return &NullableGenericResponse{value: val, isSet: true}
}

func (v NullableGenericResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


