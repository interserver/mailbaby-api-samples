extends Resource
class_name MailLog

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# MailLog Model
# Mail log records


# total number of mail log entries
# Required: True
# Example: 10234
# isArray: false
@export var total: int:
	set(value):
		__total__was__set = true
		total = value
var __total__was__set := false

# number of emails skipped in listing
# Required: True
# Example: 0
# isArray: false
@export var skip: int:
	set(value):
		__skip__was__set = true
		skip = value
var __skip__was__set := false

# number of emails to return
# Required: True
# Example: 100
# isArray: false
@export var limit: int:
	set(value):
		__limit__was__set = true
		limit = value
var __limit__was__set := false

# Required: True
# Example: [{
    \"_id\": 103172,
    \"id\": \"17c7eda538e0005d03\",
    \"from\": \"person@mysite.com\",
    \"to\": \"client@isp.com\",
    \"subject\": \"sell 0.005 shares\",
    \"messageId\": \"<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>\",
    \"created\": \"2021-10-14 08:50:10\",
    \"time\": 1634215809,
    \"user\": \"mb5658\",
    \"transtype\": \"ESMTPSA\",
    \"origin\": \"199.231.189.154\",
    \"interface\": \"feeder\",
    \"sendingZone\": \"interserver\",
    \"bodySize\": 63,
    \"seq\": 1,
    \"recipient\": \"client@isp.com\",
    \"domain\": \"interserver.net\",
    \"locked\": 1,
    \"lockTime\": \"1634215818533\",
    \"assigned\": \"relay1\",
    \"queued\": \"2021-10-14T12:50:15.487Z\",
    \"mxHostname\": \"mx.j.is.cc\",
    \"response\": \"250 2.0.0 Ok queued as C91D83E128C\"
}]
# isArray: true
@export var emails: Array:
	set(value):
		__emails__was__set = true
		emails = value
var __emails__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	if not self.__total__was__set:
		bzz_missing_properties.append("total")
	if not self.__skip__was__set:
		bzz_missing_properties.append("skip")
	if not self.__limit__was__set:
		bzz_missing_properties.append("limit")
	if not self.__emails__was__set:
		bzz_missing_properties.append("emails")
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__total__was__set:
		bzz_dictionary["total"] = self.total
	if self.__skip__was__set:
		bzz_dictionary["skip"] = self.skip
	if self.__limit__was__set:
		bzz_dictionary["limit"] = self.limit
	if self.__emails__was__set:
		bzz_dictionary["emails"] = self.emails
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("total"):
		me.total = from_dict["total"]
	if from_dict.has("skip"):
		me.skip = from_dict["skip"]
	if from_dict.has("limit"):
		me.limit = from_dict["limit"]
	if from_dict.has("emails"):
		me.emails = MailLogEntry.bzz_denormalize_multiple(from_dict["emails"])
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

