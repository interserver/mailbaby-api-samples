/**
 * Mail Baby API
 * This is an API defintion for accesssing the Mail.Baby mail service.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: detain@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI 
{

class OPENAPI_API OpenAPIDefaultApi
{
public:
	OpenAPIDefaultApi();
	~OpenAPIDefaultApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class GetMailByIdRequest;
	class GetMailByIdResponse;
	class GetMailOrdersRequest;
	class GetMailOrdersResponse;
	class PingServerRequest;
	class PingServerResponse;
	class PlaceMailOrderRequest;
	class PlaceMailOrderResponse;
	class SendAdvMailByIdRequest;
	class SendAdvMailByIdResponse;
	class SendMailByIdRequest;
	class SendMailByIdResponse;
	class ValidateMailOrderRequest;
	class ValidateMailOrderResponse;
	class ViewMailLogByIdRequest;
	class ViewMailLogByIdResponse;
	
    DECLARE_DELEGATE_OneParam(FGetMailByIdDelegate, const GetMailByIdResponse&);
    DECLARE_DELEGATE_OneParam(FGetMailOrdersDelegate, const GetMailOrdersResponse&);
    DECLARE_DELEGATE_OneParam(FPingServerDelegate, const PingServerResponse&);
    DECLARE_DELEGATE_OneParam(FPlaceMailOrderDelegate, const PlaceMailOrderResponse&);
    DECLARE_DELEGATE_OneParam(FSendAdvMailByIdDelegate, const SendAdvMailByIdResponse&);
    DECLARE_DELEGATE_OneParam(FSendMailByIdDelegate, const SendMailByIdResponse&);
    DECLARE_DELEGATE_OneParam(FValidateMailOrderDelegate, const ValidateMailOrderResponse&);
    DECLARE_DELEGATE_OneParam(FViewMailLogByIdDelegate, const ViewMailLogByIdResponse&);
    
    bool GetMailById(const GetMailByIdRequest& Request, const FGetMailByIdDelegate& Delegate = FGetMailByIdDelegate()) const;
    bool GetMailOrders(const GetMailOrdersRequest& Request, const FGetMailOrdersDelegate& Delegate = FGetMailOrdersDelegate()) const;
    bool PingServer(const PingServerRequest& Request, const FPingServerDelegate& Delegate = FPingServerDelegate()) const;
    bool PlaceMailOrder(const PlaceMailOrderRequest& Request, const FPlaceMailOrderDelegate& Delegate = FPlaceMailOrderDelegate()) const;
    bool SendAdvMailById(const SendAdvMailByIdRequest& Request, const FSendAdvMailByIdDelegate& Delegate = FSendAdvMailByIdDelegate()) const;
    bool SendMailById(const SendMailByIdRequest& Request, const FSendMailByIdDelegate& Delegate = FSendMailByIdDelegate()) const;
    bool ValidateMailOrder(const ValidateMailOrderRequest& Request, const FValidateMailOrderDelegate& Delegate = FValidateMailOrderDelegate()) const;
    bool ViewMailLogById(const ViewMailLogByIdRequest& Request, const FViewMailLogByIdDelegate& Delegate = FViewMailLogByIdDelegate()) const;
    

private:
    void OnGetMailByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetMailByIdDelegate Delegate, int AutoRetryCount) const;
    void OnGetMailOrdersResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetMailOrdersDelegate Delegate, int AutoRetryCount) const;
    void OnPingServerResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPingServerDelegate Delegate, int AutoRetryCount) const;
    void OnPlaceMailOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaceMailOrderDelegate Delegate, int AutoRetryCount) const;
    void OnSendAdvMailByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSendAdvMailByIdDelegate Delegate, int AutoRetryCount) const;
    void OnSendMailByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSendMailByIdDelegate Delegate, int AutoRetryCount) const;
    void OnValidateMailOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FValidateMailOrderDelegate Delegate, int AutoRetryCount) const;
    void OnViewMailLogByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FViewMailLogByIdDelegate Delegate, int AutoRetryCount) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
