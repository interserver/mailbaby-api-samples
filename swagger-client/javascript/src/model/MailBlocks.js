/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.71
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import MailBlockClickHouse from './MailBlockClickHouse';
import MailBlockRspamd from './MailBlockRspamd';

/**
 * The MailBlocks model module.
 * @module model/MailBlocks
 * @version 1.1.0
 */
export default class MailBlocks {
  /**
   * Constructs a new <code>MailBlocks</code>.
   * The listing of blocked emails.
   * @alias module:model/MailBlocks
   * @class
   * @param local {Array.<module:model/MailBlockClickHouse>} 
   * @param mbtrap {Array.<module:model/MailBlockClickHouse>} 
   * @param subject {Array.<module:model/MailBlockRspamd>} 
   */
  constructor(local, mbtrap, subject) {
    this.local = local;
    this.mbtrap = mbtrap;
    this.subject = subject;
  }

  /**
   * Constructs a <code>MailBlocks</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MailBlocks} obj Optional instance to populate.
   * @return {module:model/MailBlocks} The populated <code>MailBlocks</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MailBlocks();
      if (data.hasOwnProperty('local'))
        obj.local = ApiClient.convertToType(data['local'], [MailBlockClickHouse]);
      if (data.hasOwnProperty('mbtrap'))
        obj.mbtrap = ApiClient.convertToType(data['mbtrap'], [MailBlockClickHouse]);
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], [MailBlockRspamd]);
    }
    return obj;
  }
}

/**
 * @member {Array.<module:model/MailBlockClickHouse>} local
 */
MailBlocks.prototype.local = undefined;

/**
 * @member {Array.<module:model/MailBlockClickHouse>} mbtrap
 */
MailBlocks.prototype.mbtrap = undefined;

/**
 * @member {Array.<module:model/MailBlockRspamd>} subject
 */
MailBlocks.prototype.subject = undefined;

