/*
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.37-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {MailLogEntry} from './MailLogEntry';

/**
 * The MailLog model module.
 * @module model/MailLog
 * @version 1.1.0
 */
export class MailLog {
  /**
   * Constructs a new <code>MailLog</code>.
   * Mail log records
   * @alias module:model/MailLog
   * @class
   * @param total {Number} total number of mail log entries
   * @param skip {Number} number of emails skipped in listing
   * @param limit {Number} number of emails to return
   * @param emails {Array.<module:model/MailLogEntry>} 
   */
  constructor(total, skip, limit, emails) {
    this.total = total;
    this.skip = skip;
    this.limit = limit;
    this.emails = emails;
  }

  /**
   * Constructs a <code>MailLog</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MailLog} obj Optional instance to populate.
   * @return {module:model/MailLog} The populated <code>MailLog</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MailLog();
      if (data.hasOwnProperty('total'))
        obj.total = ApiClient.convertToType(data['total'], 'Number');
      if (data.hasOwnProperty('skip'))
        obj.skip = ApiClient.convertToType(data['skip'], 'Number');
      if (data.hasOwnProperty('limit'))
        obj.limit = ApiClient.convertToType(data['limit'], 'Number');
      if (data.hasOwnProperty('emails'))
        obj.emails = ApiClient.convertToType(data['emails'], [MailLogEntry]);
    }
    return obj;
  }
}

/**
 * total number of mail log entries
 * @member {Number} total
 */
MailLog.prototype.total = undefined;

/**
 * number of emails skipped in listing
 * @member {Number} skip
 */
MailLog.prototype.skip = undefined;

/**
 * number of emails to return
 * @member {Number} limit
 */
MailLog.prototype.limit = undefined;

/**
 * @member {Array.<module:model/MailLogEntry>} emails
 */
MailLog.prototype.emails = undefined;

