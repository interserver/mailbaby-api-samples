# NOTE: This file is auto generated by OpenAPI Generator 8.0.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MailBabyEmailDeliveryAndManagementServiceAPI.Api.History do
  @moduledoc """
  API calls for all endpoints tagged `History`.
  """

  alias MailBabyEmailDeliveryAndManagementServiceAPI.Connection
  import MailBabyEmailDeliveryAndManagementServiceAPI.RequestBuilder

  @doc """
  Account usage statistics.
  Returns information about the usage on your mail accounts.

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%GetStats200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_stats(Tesla.Env.client, keyword()) :: {:ok, list(MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetStats200ResponseInner.t)} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage.t} | {:error, Tesla.Env.t}
  def get_stats(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/mail/stats")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MailBabyEmailDeliveryAndManagementServiceAPI.Model.GetStats200ResponseInner},
      {401, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage},
      {404, MailBabyEmailDeliveryAndManagementServiceAPI.Model.ErrorMessage}
    ])
  end

  @doc """
  displays the mail log
  Get a listing of the emails sent through this system 

  ### Parameters

  - `connection` (MailBabyEmailDeliveryAndManagementServiceAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:id` (integer()): The ID of your mail order this will be sent through.
    - `:origin` (String.t): originating ip address sending mail
    - `:mx` (String.t): mx record mail was sent to
    - `:from` (String.t): from email address
    - `:to` (String.t): to/destination email address
    - `:subject` (String.t): subject containing this string
    - `:mailid` (String.t): mail id
    - `:skip` (integer()): number of records to skip for pagination
    - `:limit` (integer()): maximum number of records to return
    - `:startDate` (integer()): earliest date to get emails in unix timestamp format
    - `:endDate` (integer()): earliest date to get emails in unix timestamp format
    - `:replyto` (String.t): Reply-To Email Address
    - `:headerfrom` (String.t): Header From Email Address

  ### Returns

  - `{:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailLog.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec view_mail_log(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailLog.t} | {:error, Tesla.Env.t}
  def view_mail_log(connection, opts \\ []) do
    optional_params = %{
      :id => :query,
      :origin => :query,
      :mx => :query,
      :from => :query,
      :to => :query,
      :subject => :query,
      :mailid => :query,
      :skip => :query,
      :limit => :query,
      :startDate => :query,
      :endDate => :query,
      :replyto => :query,
      :headerfrom => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/mail/log")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MailBabyEmailDeliveryAndManagementServiceAPI.Model.MailLog},
      {400, false}
    ])
  end
end
