/*
 * MailBaby Email Delivery and Management Service API
 *
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@interserver.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class MailStatsTypeVolumeIp : IEquatable<MailStatsTypeVolumeIp>
    { 
        /// <summary>
        /// Gets or Sets _1111
        /// </summary>

        [DataMember(Name="1.1.1.1")]
        public int? _1111 { get; set; }

        /// <summary>
        /// Gets or Sets _2222
        /// </summary>

        [DataMember(Name="2.2.2.2")]
        public int? _2222 { get; set; }

        /// <summary>
        /// Gets or Sets _3333
        /// </summary>

        [DataMember(Name="3.3.3.3")]
        public int? _3333 { get; set; }

        /// <summary>
        /// Gets or Sets _4444
        /// </summary>

        [DataMember(Name="4.4.4.4")]
        public int? _4444 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MailStatsTypeVolumeIp {\n");
            sb.Append("  _1111: ").Append(_1111).Append("\n");
            sb.Append("  _2222: ").Append(_2222).Append("\n");
            sb.Append("  _3333: ").Append(_3333).Append("\n");
            sb.Append("  _4444: ").Append(_4444).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((MailStatsTypeVolumeIp)obj);
        }

        /// <summary>
        /// Returns true if MailStatsTypeVolumeIp instances are equal
        /// </summary>
        /// <param name="other">Instance of MailStatsTypeVolumeIp to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MailStatsTypeVolumeIp other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    _1111 == other._1111 ||
                    _1111 != null &&
                    _1111.Equals(other._1111)
                ) && 
                (
                    _2222 == other._2222 ||
                    _2222 != null &&
                    _2222.Equals(other._2222)
                ) && 
                (
                    _3333 == other._3333 ||
                    _3333 != null &&
                    _3333.Equals(other._3333)
                ) && 
                (
                    _4444 == other._4444 ||
                    _4444 != null &&
                    _4444.Equals(other._4444)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (_1111 != null)
                    hashCode = hashCode * 59 + _1111.GetHashCode();
                    if (_2222 != null)
                    hashCode = hashCode * 59 + _2222.GetHashCode();
                    if (_3333 != null)
                    hashCode = hashCode * 59 + _3333.GetHashCode();
                    if (_4444 != null)
                    hashCode = hashCode * 59 + _4444.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(MailStatsTypeVolumeIp left, MailStatsTypeVolumeIp right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(MailStatsTypeVolumeIp left, MailStatsTypeVolumeIp right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
