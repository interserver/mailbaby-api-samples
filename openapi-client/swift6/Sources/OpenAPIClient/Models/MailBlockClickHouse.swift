//
// MailBlockClickHouse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A block entry from the clickhouse mailblocks server. */
public struct MailBlockClickHouse: Sendable, Codable, ParameterConvertible, Hashable {

    public var date: Date
    public var from: String
    public var messageId: String
    public var subject: String
    public var to: String

    public init(date: Date, from: String, messageId: String, subject: String, to: String) {
        self.date = date
        self.from = from
        self.messageId = messageId
        self.subject = subject
        self.to = to
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case date
        case from
        case messageId
        case subject
        case to
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(date, forKey: .date)
        try container.encode(from, forKey: .from)
        try container.encode(messageId, forKey: .messageId)
        try container.encode(subject, forKey: .subject)
        try container.encode(to, forKey: .to)
    }
}

