{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "detain@interserver.net",
      "name" : "Joe Huss",
      "url" : "https://www.interserver.net/contact-information.html"
    },
    "description" : "This is an API for accesssing the mail services.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService" : "https://www.interserver.net/terms-of-service.html",
    "title" : "Mail Baby API",
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "https://www.interserver.net/blog/\n",
    "url" : "https://interserver.net/tips/"
  },
  "servers" : [ {
    "description" : "Live API Endpoint",
    "url" : "https://api.mailbaby.net/"
  }, {
    "description" : "Temporary API Endpoint",
    "url" : "http://mynew.interserver.net:8787/"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/InterServer/MailBaby/1.0.0"
  } ],
  "security" : [ {
    "apiLoginAuth" : [ ],
    "apiPasswordAuth" : [ ]
  }, {
    "apiLoginAuth" : [ ],
    "apiKeyAuth" : [ ]
  } ],
  "paths" : {
    "/ping" : {
      "get" : {
        "operationId" : "pingServer",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Server is up and running"
          },
          "default" : {
            "description" : "Something is wrong"
          }
        },
        "security" : [ ],
        "summary" : "Checks if the server is running"
      }
    },
    "/mail" : {
      "get" : {
        "operationId" : "getMailOrders",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrders"
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK",
            "links" : {
              "sendMailByIdLink" : {
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}/send`.",
                "operationId" : "sendMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                }
              },
              "getMailByIdLink" : {
                "description" : "The `id` value returned in the response can be used as the `id` parameter in `GET /mail/{id}`.",
                "operationId" : "getMailById",
                "parameters" : {
                  "id" : "$response.body#/0/id"
                }
              }
            }
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "displays a list of mail service orders"
      }
    },
    "/mail/order" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "validateMailOrder",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "validatess order details before placing an order"
      },
      "post" : {
        "deprecated" : true,
        "description" : "Adds an item to the system",
        "operationId" : "placeMailOrder",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailOrder"
              }
            }
          },
          "description" : "Inventory item to add"
        },
        "responses" : {
          "200" : {
            "description" : "list of mail orders"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Unauthorized"
          }
        },
        "summary" : "places a mail order"
      }
    },
    "/mail/{id}" : {
      "get" : {
        "description" : "returns information about a mail order in the system with the given id.",
        "operationId" : "getMailById",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MailOrder"
                }
              }
            },
            "description" : "Successful operation"
          }
        },
        "summary" : "Gets mail order information by id"
      }
    },
    "/mail/{id}/send" : {
      "post" : {
        "description" : "Sends An email through one of your mail orders.",
        "operationId" : "sendMailById",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "subject",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "to",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "from",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponse"
                }
              }
            },
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Unauthorized"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The specified resource was not found"
          }
        },
        "summary" : "Sends an Email"
      }
    },
    "/mail/{id}/log" : {
      "get" : {
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId" : "viewMailLogById",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "pass an optional search string for looking up inventory",
          "explode" : true,
          "in" : "query",
          "name" : "searchString",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "number of records to skip for pagination",
          "explode" : true,
          "in" : "query",
          "name" : "skip",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "maximum number of records to return",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "maximum" : 50,
            "minimum" : 0,
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MailLog"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          }
        },
        "summary" : "displays the mail log"
      }
    }
  },
  "components" : {
    "callbacks" : { },
    "examples" : { },
    "headers" : { },
    "links" : { },
    "parameters" : {
      "offsetParam" : {
        "description" : "Number of items to skip before returning the results.",
        "explode" : true,
        "in" : "query",
        "name" : "offset",
        "required" : false,
        "schema" : {
          "default" : 0,
          "format" : "int32",
          "minimum" : 0,
          "type" : "integer"
        },
        "style" : "form"
      },
      "limitParam" : {
        "description" : "Maximum number of items to return.",
        "explode" : true,
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "default" : 20,
          "format" : "int32",
          "maximum" : 100,
          "minimum" : 1,
          "type" : "integer"
        },
        "style" : "form"
      }
    },
    "requestBodies" : { },
    "responses" : {
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "The specified resource was not found"
      },
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Unauthorized"
      }
    },
    "schemas" : {
      "Error" : {
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ],
        "type" : "object"
      },
      "GenericResponse" : {
        "properties" : {
          "status" : {
            "example" : "ok",
            "type" : "string"
          },
          "status_text" : {
            "example" : "The command completed successfully.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MailOrders" : {
        "items" : {
          "$ref" : "#/components/schemas/MailOrder"
        },
        "type" : "array"
      },
      "MailOrder" : {
        "properties" : {
          "id" : {
            "example" : 1234,
            "type" : "integer"
          },
          "status" : {
            "example" : "active",
            "type" : "string"
          },
          "username" : {
            "example" : "mb1234",
            "type" : "string"
          },
          "password" : {
            "example" : "guest123",
            "type" : "string"
          },
          "comment" : {
            "example" : "main mail account",
            "type" : "string"
          }
        },
        "required" : [ "id", "status", "username" ],
        "type" : "object"
      },
      "MailLog" : {
        "description" : "Mail Order Details",
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "apiLoginAuth" : {
        "in" : "header",
        "name" : "X-API-LOGIN",
        "type" : "apiKey"
      },
      "apiPasswordAuth" : {
        "in" : "header",
        "name" : "X-API-PASS",
        "type" : "apiKey"
      },
      "apiKeyAuth" : {
        "in" : "header",
        "name" : "X-API-KEY",
        "type" : "apiKey"
      }
    }
  }
}