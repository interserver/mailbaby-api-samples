note
 description:"[
		MailBaby Email Delivery and Management Service API
 		**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
  		The version of the OpenAPI document: 1.1.0
 	    Contact: support@interserver.net

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MAIL_STATS_TYPE




feature --Access

    time: detachable STRING_32
      
    usage: INTEGER_32
      
    currency: detachable STRING_32
      
    currency_symbol: detachable STRING_32
      
    cost: REAL_64
      
    received: INTEGER_32
      
    sent: INTEGER_32
      
    volume: detachable MAIL_STATS_TYPE_VOLUME
      

feature -- Change Element

    set_time (a_name: like time)
        -- Set 'time' with 'a_name'.
      do
        time := a_name
      ensure
        time_set: time = a_name
      end

    set_usage (a_name: like usage)
        -- Set 'usage' with 'a_name'.
      do
        usage := a_name
      ensure
        usage_set: usage = a_name
      end

    set_currency (a_name: like currency)
        -- Set 'currency' with 'a_name'.
      do
        currency := a_name
      ensure
        currency_set: currency = a_name
      end

    set_currency_symbol (a_name: like currency_symbol)
        -- Set 'currency_symbol' with 'a_name'.
      do
        currency_symbol := a_name
      ensure
        currency_symbol_set: currency_symbol = a_name
      end

    set_cost (a_name: like cost)
        -- Set 'cost' with 'a_name'.
      do
        cost := a_name
      ensure
        cost_set: cost = a_name
      end

    set_received (a_name: like received)
        -- Set 'received' with 'a_name'.
      do
        received := a_name
      ensure
        received_set: received = a_name
      end

    set_sent (a_name: like sent)
        -- Set 'sent' with 'a_name'.
      do
        sent := a_name
      ensure
        sent_set: sent = a_name
      end

    set_volume (a_name: like volume)
        -- Set 'volume' with 'a_name'.
      do
        volume := a_name
      ensure
        volume_set: volume = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MAIL_STATS_TYPE%N")
        if attached time as l_time then
          Result.append ("%Ntime:")
          Result.append (l_time.out)
          Result.append ("%N")
        end
        if attached usage as l_usage then
          Result.append ("%Nusage:")
          Result.append (l_usage.out)
          Result.append ("%N")
        end
        if attached currency as l_currency then
          Result.append ("%Ncurrency:")
          Result.append (l_currency.out)
          Result.append ("%N")
        end
        if attached currency_symbol as l_currency_symbol then
          Result.append ("%Ncurrency_symbol:")
          Result.append (l_currency_symbol.out)
          Result.append ("%N")
        end
        if attached cost as l_cost then
          Result.append ("%Ncost:")
          Result.append (l_cost.out)
          Result.append ("%N")
        end
        if attached received as l_received then
          Result.append ("%Nreceived:")
          Result.append (l_received.out)
          Result.append ("%N")
        end
        if attached sent as l_sent then
          Result.append ("%Nsent:")
          Result.append (l_sent.out)
          Result.append ("%N")
        end
        if attached volume as l_volume then
          Result.append ("%Nvolume:")
          Result.append (l_volume.out)
          Result.append ("%N")
        end
      end
end

