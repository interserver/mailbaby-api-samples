/**
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.EmailAddressName
import org.openapitools.client.model.GenericResponse
import org.openapitools.client.model.GetMailOrders401Response
import org.openapitools.client.model.MailAttachment
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SendingApi {

  def apply(baseUrl: String = "https://api.mailbaby.net") = new SendingApi(baseUrl)
}

class SendingApi(baseUrl: String) {

  /**
   * Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
   * 
   * Expected answers:
   *   code 200 : GenericResponse (search results matching criteria)
   *   code 400 : GetMailOrders401Response (The specified resource was not found)
   *   code 401 : GetMailOrders401Response (Unauthorized)
   *   code 404 : GetMailOrders401Response (The specified resource was not found)
   * 
   * Available security schemes:
   *   apiKeyAuth (apiKey)
   * 
   * @param subject The subject or title of the email
   * @param body The main email contents.
   * @param from 
   * @param to A list of destionation email addresses to send this to
   * @param replyto (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
   * @param cc (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
   * @param bcc (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
   * @param attachments (optional) File attachments to include in the email.  The file contents must be base64 encoded!
   * @param id (optional)  ID of the Mail order within our system to use as the Mail Account.
   */
  def sendAdvMail(subject: String, body: String, from: EmailAddressName, to: Seq[EmailAddressName], replyto: Seq[EmailAddressName], cc: Seq[EmailAddressName], bcc: Seq[EmailAddressName], attachments: Seq[MailAttachment], id: Option[Long] = None)(implicit apiKey: ApiKeyValue): ApiRequest[GenericResponse] =
    ApiRequest[GenericResponse](ApiMethods.POST, baseUrl, "/mail/advsend", "application/x-www-form-urlencoded")
      .withApiKey(apiKey, "X-API-KEY", HEADER)
      .withFormParam("subject", subject)
      .withFormParam("body", body)
      .withFormParam("from", from)
      .withFormParam("to", ArrayValues(to, CSV))
      .withFormParam("replyto", ArrayValues(replyto, CSV))
      .withFormParam("cc", ArrayValues(cc, CSV))
      .withFormParam("bcc", ArrayValues(bcc, CSV))
      .withFormParam("attachments", ArrayValues(attachments, CSV))
      .withFormParam("id", id)
      .withSuccessResponse[GenericResponse](200)
      .withErrorResponse[GetMailOrders401Response](400)
      .withErrorResponse[GetMailOrders401Response](401)
      .withErrorResponse[GetMailOrders401Response](404)
      

  /**
   * Sends an email through one of your mail orders.  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead. 
   * 
   * Expected answers:
   *   code 200 : GenericResponse (search results matching criteria)
   *   code 400 : GetMailOrders401Response (The specified resource was not found)
   *   code 401 : GetMailOrders401Response (Unauthorized)
   *   code 404 : GetMailOrders401Response (The specified resource was not found)
   * 
   * Available security schemes:
   *   apiKeyAuth (apiKey)
   * 
   * @param to The Contact whom is the primary recipient of this email.
   * @param from The contact whom is the this email is from.
   * @param subject The subject or title of the email
   * @param body The main email contents.
   */
  def sendMail(to: String, from: String, subject: String, body: String)(implicit apiKey: ApiKeyValue): ApiRequest[GenericResponse] =
    ApiRequest[GenericResponse](ApiMethods.POST, baseUrl, "/mail/send", "application/x-www-form-urlencoded")
      .withApiKey(apiKey, "X-API-KEY", HEADER)
      .withFormParam("to", to)
      .withFormParam("from", from)
      .withFormParam("subject", subject)
      .withFormParam("body", body)
      .withSuccessResponse[GenericResponse](200)
      .withErrorResponse[GetMailOrders401Response](400)
      .withErrorResponse[GetMailOrders401Response](401)
      .withErrorResponse[GetMailOrders401Response](404)
      



}

