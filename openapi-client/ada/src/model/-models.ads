--  MailBaby Email Delivery and Management Service API
--  **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
--
--  The version of the OpenAPI document: 1.1.0
--  Contact: support@interserver.net
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.15.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");


   --  ------------------------------
   --  DenyRuleNew
   --  The data for a email deny rule record.
   --  ------------------------------
   type DenyRuleNew_Type is
     record
       P_Type : Swagger.UString;
       Data : Swagger.UString;
       User : Swagger.Nullable_UString;
     end record;


   package DenyRuleNew_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DenyRuleNew_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DenyRuleNew_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleNew_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DenyRuleNew_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DenyRuleNew_Type_Vectors.Vector);


   --  ------------------------------
   --  DenyRuleRecord
   --  The data for a email deny rule record.
   --  ------------------------------
   type DenyRuleRecord_Type is
     record
       P_Type : Swagger.UString;
       Data : Swagger.UString;
       Id : Swagger.UString;
       Created : Swagger.Datetime;
       User : Swagger.Nullable_UString;
     end record;


   package DenyRuleRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DenyRuleRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DenyRuleRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DenyRuleRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DenyRuleRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DenyRuleRecord_Type_Vectors.Vector);


   --  ------------------------------
   --  EmailAddressName
   --  An email contact.
   --  ------------------------------
   type EmailAddressName_Type is
     record
       Email : Swagger.UString;
       Name : Swagger.Nullable_UString;
     end record;


   package EmailAddressName_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EmailAddressName_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EmailAddressName_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddressName_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EmailAddressName_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EmailAddressName_Type_Vectors.Vector);


   --  ------------------------------
   --  EmailAddressTypes
   --  ------------------------------
   type EmailAddressTypes_Type is
     record
       Email : Swagger.UString;
       Name : Swagger.Nullable_UString;
     end record;


   package EmailAddressTypes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EmailAddressTypes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EmailAddressTypes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddressTypes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EmailAddressTypes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EmailAddressTypes_Type_Vectors.Vector);



   type EmailAddress_Type is new string;


   package EmailAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EmailAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EmailAddress_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddress_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EmailAddress_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EmailAddress_Type_Vectors.Vector);


   --  ------------------------------
   --  EmailAddressTypes
   --  ------------------------------
   type EmailAddressesTypes_Type is new oneOf<string,array>;


   package EmailAddressesTypes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EmailAddressesTypes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EmailAddressesTypes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmailAddressesTypes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EmailAddressesTypes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EmailAddressesTypes_Type_Vectors.Vector);


   --  ------------------------------
   --  ErrorMessage
   --  The resposne when an error occurs.
   --  ------------------------------
   type ErrorMessage_Type is
     record
       Code : Integer;
       Message : Swagger.UString;
     end record;


   package ErrorMessage_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ErrorMessage_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ErrorMessage_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ErrorMessage_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ErrorMessage_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ErrorMessage_Type_Vectors.Vector);



   type GenericResponse_Type is
     record
       Status : Swagger.Nullable_UString;
       Text : Swagger.Nullable_UString;
     end record;


   package GenericResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GenericResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GenericResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GenericResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GenericResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  MailAttachment
   --  (optional) File attachments to include in the email.  The file contents must be base64
   --  ------------------------------
   type MailAttachment_Type is
     record
       Filename : Swagger.UString;
       Data : Swagger.UString;
     end record;


   package MailAttachment_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailAttachment_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailAttachment_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailAttachment_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailAttachment_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailAttachment_Type_Vectors.Vector);


   --  ------------------------------
   --  MailBlockClickHouse
   --  A block entry from the clickhouse mailblocks server.
   --  ------------------------------
   type MailBlockClickHouse_Type is
     record
       Date : Swagger.Date;
       From : Swagger.UString;
       Message_Id : Swagger.UString;
       Subject : Swagger.UString;
       To : Swagger.UString;
     end record;


   package MailBlockClickHouse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailBlockClickHouse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailBlockClickHouse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockClickHouse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailBlockClickHouse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailBlockClickHouse_Type_Vectors.Vector);


   --  ------------------------------
   --  MailBlockRspamd
   --  This is a block entry from the rspamd block list.
   --  ------------------------------
   type MailBlockRspamd_Type is
     record
       From : Swagger.UString;
       Subject : Swagger.UString;
     end record;


   package MailBlockRspamd_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailBlockRspamd_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailBlockRspamd_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlockRspamd_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailBlockRspamd_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailBlockRspamd_Type_Vectors.Vector);


   --  ------------------------------
   --  MailLogEntry
   --  An email record
   --  ------------------------------
   type MailLogEntry_Type is
     record
       P__id : Integer;
       Id : Swagger.UString;
       From : Swagger.UString;
       To : Swagger.UString;
       Subject : Swagger.UString;
       Created : Swagger.UString;
       Time : Integer;
       User : Swagger.UString;
       Transtype : Swagger.UString;
       Origin : Swagger.UString;
       P_Interface : Swagger.UString;
       Sending_Zone : Swagger.UString;
       Body_Size : Integer;
       Seq : Integer;
       Recipient : Swagger.UString;
       Domain : Swagger.UString;
       Locked : Integer;
       Lock_Time : Swagger.UString;
       Assigned : Swagger.UString;
       Queued : Swagger.UString;
       Mx_Hostname : Swagger.UString;
       Response : Swagger.UString;
       Message_Id : Swagger.Nullable_UString;
     end record;


   package MailLogEntry_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailLogEntry_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailLogEntry_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLogEntry_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailLogEntry_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailLogEntry_Type_Vectors.Vector);


   --  ------------------------------
   --  MailOrder
   --  A mail order record
   --  ------------------------------
   type MailOrder_Type is
     record
       Id : Integer;
       Status : Swagger.UString;
       Username : Swagger.UString;
       Comment : Swagger.Nullable_UString;
     end record;


   package MailOrder_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailOrder_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailOrder_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailOrder_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailOrder_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailOrder_Type_Vectors.Vector);



   type MailStatsTypeVolumeFrom_Type is
     record
       Billingsomedomain_Com : Swagger.Nullable_Integer;
       Salessomedomain_Com : Swagger.Nullable_Integer;
     end record;


   package MailStatsTypeVolumeFrom_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailStatsTypeVolumeFrom_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailStatsTypeVolumeFrom_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailStatsTypeVolumeFrom_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailStatsTypeVolumeFrom_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailStatsTypeVolumeFrom_Type_Vectors.Vector);



   type MailStatsTypeVolumeIp_Type is
     record
       P_1_1_1_1 : Swagger.Nullable_Integer;
       P_2_2_2_2 : Swagger.Nullable_Integer;
       P_3_3_3_3 : Swagger.Nullable_Integer;
       P_4_4_4_4 : Swagger.Nullable_Integer;
     end record;


   package MailStatsTypeVolumeIp_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailStatsTypeVolumeIp_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailStatsTypeVolumeIp_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailStatsTypeVolumeIp_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailStatsTypeVolumeIp_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailStatsTypeVolumeIp_Type_Vectors.Vector);



   type MailStatsTypeVolumeTo_Type is
     record
       Clientdomain_Com : Swagger.Nullable_Integer;
       Usersite_Net : Swagger.Nullable_Integer;
       Salescompany_Com : Swagger.Nullable_Integer;
       Clientanothersite_Com : Swagger.Nullable_Integer;
     end record;


   package MailStatsTypeVolumeTo_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailStatsTypeVolumeTo_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailStatsTypeVolumeTo_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailStatsTypeVolumeTo_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailStatsTypeVolumeTo_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailStatsTypeVolumeTo_Type_Vectors.Vector);


   --  ------------------------------
   --  SendMail
   --  Details for an Email
   --  ------------------------------
   type SendMail_Type is
     record
       To : Swagger.UString;
       From : Swagger.UString;
       Subject : Swagger.UString;
       P_Body : Swagger.UString;
     end record;


   package SendMail_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SendMail_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendMail_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMail_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendMail_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendMail_Type_Vectors.Vector);


   --  ------------------------------
   --  MailLog
   --  Mail log records
   --  ------------------------------
   type MailLog_Type is
     record
       Total : Integer;
       Skip : Integer;
       Limit : Integer;
       Emails : .Models.MailLogEntry_Type_Vectors.Vector;
     end record;


   package MailLog_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailLog_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailLog_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailLog_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailLog_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailLog_Type_Vectors.Vector);



   type MailStatsTypeVolume_Type is
     record
       To : .Models.MailStatsTypeVolumeTo_Type;
       From : .Models.MailStatsTypeVolumeFrom_Type;
       Ip : .Models.MailStatsTypeVolumeIp_Type;
     end record;


   package MailStatsTypeVolume_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailStatsTypeVolume_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailStatsTypeVolume_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailStatsTypeVolume_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailStatsTypeVolume_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailStatsTypeVolume_Type_Vectors.Vector);


   --  ------------------------------
   --  Root Type for MailStatsType
   --  Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
   --  ------------------------------
   type MailStatsType_Type is
     record
       Time : Swagger.Nullable_UString;
       Usage : Swagger.Nullable_Integer;
       Currency : Swagger.Nullable_UString;
       Currency_Symbol : Swagger.Nullable_UString;
       Cost : Swagger.Number;
       Received : Swagger.Nullable_Integer;
       Sent : Swagger.Nullable_Integer;
       Volume : .Models.MailStatsTypeVolume_Type;
     end record;


   package MailStatsType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailStatsType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailStatsType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailStatsType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailStatsType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailStatsType_Type_Vectors.Vector);


   --  ------------------------------
   --  MailBlocks
   --  The listing of blocked emails.
   --  ------------------------------
   type MailBlocks_Type is
     record
       Local : .Models.MailBlockClickHouse_Type_Vectors.Vector;
       Mbtrap : .Models.MailBlockClickHouse_Type_Vectors.Vector;
       Subject : .Models.MailBlockRspamd_Type_Vectors.Vector;
     end record;


   package MailBlocks_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MailBlocks_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MailBlocks_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MailBlocks_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MailBlocks_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MailBlocks_Type_Vectors.Vector);


   --  ------------------------------
   --  SendMailAdv
   --  Details for an Email
   --  ------------------------------
   type SendMailAdv_Type is
     record
       Subject : Swagger.UString;
       P_Body : Swagger.UString;
       From : .Models.EmailAddressTypes_Type;
       To : .Models.EmailAddressesTypes_Type;
       Replyto : .Models.EmailAddressesTypes_Type;
       Cc : .Models.EmailAddressesTypes_Type;
       Bcc : .Models.EmailAddressesTypes_Type;
       Attachments : .Models.MailAttachment_Type_Vectors.Vector;
       Id : Swagger.Nullable_Long;
     end record;


   package SendMailAdv_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SendMailAdv_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SendMailAdv_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SendMailAdv_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SendMailAdv_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SendMailAdv_Type_Vectors.Vector);


end .Models;
