/*
MailBaby Email Delivery and Management Service API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.** # Overview This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net). # Authentication In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site. We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.1.0
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MailStatsTypeVolumeTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailStatsTypeVolumeTo{}

// MailStatsTypeVolumeTo struct for MailStatsTypeVolumeTo
type MailStatsTypeVolumeTo struct {
	ClientdomainCom *int32 `json:"client@domain.com,omitempty"`
	UsersiteNet *int32 `json:"user@site.net,omitempty"`
	SalescompanyCom *int32 `json:"sales@company.com,omitempty"`
	ClientanothersiteCom *int32 `json:"client@anothersite.com,omitempty"`
}

// NewMailStatsTypeVolumeTo instantiates a new MailStatsTypeVolumeTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailStatsTypeVolumeTo() *MailStatsTypeVolumeTo {
	this := MailStatsTypeVolumeTo{}
	return &this
}

// NewMailStatsTypeVolumeToWithDefaults instantiates a new MailStatsTypeVolumeTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailStatsTypeVolumeToWithDefaults() *MailStatsTypeVolumeTo {
	this := MailStatsTypeVolumeTo{}
	return &this
}

// GetClientdomainCom returns the ClientdomainCom field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeTo) GetClientdomainCom() int32 {
	if o == nil || IsNil(o.ClientdomainCom) {
		var ret int32
		return ret
	}
	return *o.ClientdomainCom
}

// GetClientdomainComOk returns a tuple with the ClientdomainCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeTo) GetClientdomainComOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientdomainCom) {
		return nil, false
	}
	return o.ClientdomainCom, true
}

// HasClientdomainCom returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeTo) HasClientdomainCom() bool {
	if o != nil && !IsNil(o.ClientdomainCom) {
		return true
	}

	return false
}

// SetClientdomainCom gets a reference to the given int32 and assigns it to the ClientdomainCom field.
func (o *MailStatsTypeVolumeTo) SetClientdomainCom(v int32) {
	o.ClientdomainCom = &v
}

// GetUsersiteNet returns the UsersiteNet field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeTo) GetUsersiteNet() int32 {
	if o == nil || IsNil(o.UsersiteNet) {
		var ret int32
		return ret
	}
	return *o.UsersiteNet
}

// GetUsersiteNetOk returns a tuple with the UsersiteNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeTo) GetUsersiteNetOk() (*int32, bool) {
	if o == nil || IsNil(o.UsersiteNet) {
		return nil, false
	}
	return o.UsersiteNet, true
}

// HasUsersiteNet returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeTo) HasUsersiteNet() bool {
	if o != nil && !IsNil(o.UsersiteNet) {
		return true
	}

	return false
}

// SetUsersiteNet gets a reference to the given int32 and assigns it to the UsersiteNet field.
func (o *MailStatsTypeVolumeTo) SetUsersiteNet(v int32) {
	o.UsersiteNet = &v
}

// GetSalescompanyCom returns the SalescompanyCom field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeTo) GetSalescompanyCom() int32 {
	if o == nil || IsNil(o.SalescompanyCom) {
		var ret int32
		return ret
	}
	return *o.SalescompanyCom
}

// GetSalescompanyComOk returns a tuple with the SalescompanyCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeTo) GetSalescompanyComOk() (*int32, bool) {
	if o == nil || IsNil(o.SalescompanyCom) {
		return nil, false
	}
	return o.SalescompanyCom, true
}

// HasSalescompanyCom returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeTo) HasSalescompanyCom() bool {
	if o != nil && !IsNil(o.SalescompanyCom) {
		return true
	}

	return false
}

// SetSalescompanyCom gets a reference to the given int32 and assigns it to the SalescompanyCom field.
func (o *MailStatsTypeVolumeTo) SetSalescompanyCom(v int32) {
	o.SalescompanyCom = &v
}

// GetClientanothersiteCom returns the ClientanothersiteCom field value if set, zero value otherwise.
func (o *MailStatsTypeVolumeTo) GetClientanothersiteCom() int32 {
	if o == nil || IsNil(o.ClientanothersiteCom) {
		var ret int32
		return ret
	}
	return *o.ClientanothersiteCom
}

// GetClientanothersiteComOk returns a tuple with the ClientanothersiteCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailStatsTypeVolumeTo) GetClientanothersiteComOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientanothersiteCom) {
		return nil, false
	}
	return o.ClientanothersiteCom, true
}

// HasClientanothersiteCom returns a boolean if a field has been set.
func (o *MailStatsTypeVolumeTo) HasClientanothersiteCom() bool {
	if o != nil && !IsNil(o.ClientanothersiteCom) {
		return true
	}

	return false
}

// SetClientanothersiteCom gets a reference to the given int32 and assigns it to the ClientanothersiteCom field.
func (o *MailStatsTypeVolumeTo) SetClientanothersiteCom(v int32) {
	o.ClientanothersiteCom = &v
}

func (o MailStatsTypeVolumeTo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailStatsTypeVolumeTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientdomainCom) {
		toSerialize["client@domain.com"] = o.ClientdomainCom
	}
	if !IsNil(o.UsersiteNet) {
		toSerialize["user@site.net"] = o.UsersiteNet
	}
	if !IsNil(o.SalescompanyCom) {
		toSerialize["sales@company.com"] = o.SalescompanyCom
	}
	if !IsNil(o.ClientanothersiteCom) {
		toSerialize["client@anothersite.com"] = o.ClientanothersiteCom
	}
	return toSerialize, nil
}

type NullableMailStatsTypeVolumeTo struct {
	value *MailStatsTypeVolumeTo
	isSet bool
}

func (v NullableMailStatsTypeVolumeTo) Get() *MailStatsTypeVolumeTo {
	return v.value
}

func (v *NullableMailStatsTypeVolumeTo) Set(val *MailStatsTypeVolumeTo) {
	v.value = val
	v.isSet = true
}

func (v NullableMailStatsTypeVolumeTo) IsSet() bool {
	return v.isSet
}

func (v *NullableMailStatsTypeVolumeTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailStatsTypeVolumeTo(val *MailStatsTypeVolumeTo) *NullableMailStatsTypeVolumeTo {
	return &NullableMailStatsTypeVolumeTo{value: val, isSet: true}
}

func (v NullableMailStatsTypeVolumeTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailStatsTypeVolumeTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


