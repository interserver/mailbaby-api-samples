/*
 * MailBaby Email Delivery and Management Service API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**\n# Overview\nThis is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).\n# Authentication\nIn order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.\nWe support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page.\n
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Statistics about the mail usage including volume by IP, To address, and From address; as well as total sent / delivered counts and cost.
 */
public class OASMailStatsType implements OAS.MappedProperties {
    /**
     * Gets or Sets r_time
     */
    public enum RTimeEnum {
        ALL,
        BILLING,
        MONTH,
        _7D,
        _24H,
        TODAY,
        _1H
    }

    /**
     * Get r_time
     * @return r_time
     */
    public RTimeEnum r_time { get; set; }

    /**
     * Get usage
     * @return usage
     */
    public Integer usage { get; set; }

    /**
     * Get r_currency
     * @return r_currency
     */
    public String r_currency { get; set; }

    /**
     * Get currencySymbol
     * @return currencySymbol
     */
    public String currencySymbol { get; set; }

    /**
     * Get cost
     * @return cost
     */
    public Double cost { get; set; }

    /**
     * Get received
     * @return received
     */
    public Integer received { get; set; }

    /**
     * Get sent
     * @return sent
     */
    public Integer sent { get; set; }

    /**
     * Get volume
     * @return volume
     */
    public OASMailStatsTypeVolume volume { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time' => 'r_time',
        'currency' => 'r_currency'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time' => 'r_time',
        'currency' => 'r_currency'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASMailStatsType() {
        r_time = RTimeEnum._1H;
    }

    public static OASMailStatsType getExample() {
        OASMailStatsType mailStatsType = new OASMailStatsType();
          mailStatsType.r_time = RTimeEnum.ALL;
          mailStatsType.usage = 0;
          mailStatsType.r_currency = '';
          mailStatsType.currencySymbol = '';
          mailStatsType.cost = 1.3579;
          mailStatsType.received = 0;
          mailStatsType.sent = 0;
          mailStatsType.volume = OASMailStatsTypeVolume.getExample();
        return mailStatsType;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMailStatsType) {           
            OASMailStatsType mailStatsType = (OASMailStatsType) obj;
            return this.r_time == mailStatsType.r_time
                && this.usage == mailStatsType.usage
                && this.r_currency == mailStatsType.r_currency
                && this.currencySymbol == mailStatsType.currencySymbol
                && this.cost == mailStatsType.cost
                && this.received == mailStatsType.received
                && this.sent == mailStatsType.sent
                && this.volume == mailStatsType.volume;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (r_time == null ? 0 : System.hashCode(r_time));
        hashCode = (17 * hashCode) + (usage == null ? 0 : System.hashCode(usage));
        hashCode = (17 * hashCode) + (r_currency == null ? 0 : System.hashCode(r_currency));
        hashCode = (17 * hashCode) + (currencySymbol == null ? 0 : System.hashCode(currencySymbol));
        hashCode = (17 * hashCode) + (cost == null ? 0 : System.hashCode(cost));
        hashCode = (17 * hashCode) + (received == null ? 0 : System.hashCode(received));
        hashCode = (17 * hashCode) + (sent == null ? 0 : System.hashCode(sent));
        hashCode = (17 * hashCode) + (volume == null ? 0 : System.hashCode(volume));
        return hashCode;
    }
}

