//
// BlockingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class BlockingAPI {
    /**
     * enum for parameter type
     */
    public enum ModelType_addRule: String { 
        case domain = "domain"
        case email = "email"
        case startswith = "startswith"
    }

    /**
     Creates a new email deny rule.

     - parameter user: (form)  
     - parameter type: (form)  
     - parameter data: (form)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addRule(user: String, type: ModelType_addRule, data: String, completion: @escaping ((_ data: GenericResponse?,_ error: Error?) -> Void)) {
        addRuleWithRequestBuilder(user: user, type: type, data: data).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a new email deny rule.
     - POST /mail/rules

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter user: (form)  
     - parameter type: (form)  
     - parameter data: (form)  

     - returns: RequestBuilder<GenericResponse> 
     */
    open class func addRuleWithRequestBuilder(user: String, type: ModelType_addRule, data: String) -> RequestBuilder<GenericResponse> {
        let path = "/mail/rules"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Creates a new email deny rule.

     - parameter body: (body) These are the fields needed to create a new email deny rule. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addRule(body: DenyRuleNew, completion: @escaping ((_ data: GenericResponse?,_ error: Error?) -> Void)) {
        addRuleWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a new email deny rule.
     - POST /mail/rules

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter body: (body) These are the fields needed to create a new email deny rule. 

     - returns: RequestBuilder<GenericResponse> 
     */
    open class func addRuleWithRequestBuilder(body: DenyRuleNew) -> RequestBuilder<GenericResponse> {
        let path = "/mail/rules"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Removes an deny mail rule.

     - parameter ruleId: (path) The ID of the Rules entry. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteRule(ruleId: Int, completion: @escaping ((_ data: GenericResponse?,_ error: Error?) -> Void)) {
        deleteRuleWithRequestBuilder(ruleId: ruleId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Removes an deny mail rule.
     - DELETE /mail/rules/{ruleId}

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter ruleId: (path) The ID of the Rules entry. 

     - returns: RequestBuilder<GenericResponse> 
     */
    open class func deleteRuleWithRequestBuilder(ruleId: Int) -> RequestBuilder<GenericResponse> {
        var path = "/mail/rules/{ruleId}"
        let ruleIdPreEscape = "\(ruleId)"
        let ruleIdPostEscape = ruleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ruleId}", with: ruleIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Removes an email address from the blocked list

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delistBlock(body: EmailAddress, completion: @escaping ((_ data: GenericResponse?,_ error: Error?) -> Void)) {
        delistBlockWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Removes an email address from the blocked list
     - POST /mail/blocks/delete

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<GenericResponse> 
     */
    open class func delistBlockWithRequestBuilder(body: EmailAddress) -> RequestBuilder<GenericResponse> {
        let path = "/mail/blocks/delete"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Removes an email address from the blocked list

     - parameter email: (form)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delistBlock(email: String, completion: @escaping ((_ data: GenericResponse?,_ error: Error?) -> Void)) {
        delistBlockWithRequestBuilder(email: email).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Removes an email address from the blocked list
     - POST /mail/blocks/delete

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "text" : "The command completed successfully.",
  "status" : "ok"
}}]
     - parameter email: (form)  

     - returns: RequestBuilder<GenericResponse> 
     */
    open class func delistBlockWithRequestBuilder(email: String) -> RequestBuilder<GenericResponse> {
        let path = "/mail/blocks/delete"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenericResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     displays a list of blocked email addresses

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMailBlocks(completion: @escaping ((_ data: MailBlocks?,_ error: Error?) -> Void)) {
        getMailBlocksWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     displays a list of blocked email addresses
     - GET /mail/blocks
     - 

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "local" : [ {
    "date" : "2023-08-07",
    "from" : "user@domain.com",
    "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
    "subject" : "Test Email",
    "to" : "['client@site.com']"
  } ],
  "mbtrap" : [ {
    "date" : "2023-08-07",
    "from" : "user@domain.com",
    "messageId" : "pFaRqFUEWkucjhTuIzYuoAgWU@domain.com",
    "subject" : "Test Email",
    "to" : "['client@site.com']"
  } ],
  "subject" : [ {
    "from" : "user@domain.com",
    "subject" : "Test Email"
  } ]
}}]

     - returns: RequestBuilder<MailBlocks> 
     */
    open class func getMailBlocksWithRequestBuilder() -> RequestBuilder<MailBlocks> {
        let path = "/mail/blocks"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<MailBlocks>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Displays a listing of deny email rules.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getRules(completion: @escaping ((_ data: [DenyRuleRecord]?,_ error: Error?) -> Void)) {
        getRulesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Displays a listing of deny email rules.
     - GET /mail/rules

     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example=[ {
  "id" : 14,
  "user" : "mb20682",
  "type" : "email",
  "data" : "domeinwo@server.guesshost.net",
  "created" : "2022-03-22 19:16:35"
}, {
  "id" : 14,
  "user" : "mb20682",
  "type" : "email",
  "data" : "domeinwo@server.guesshost.net",
  "created" : "2022-03-22 19:16:35"
} ]}]

     - returns: RequestBuilder<[DenyRuleRecord]> 
     */
    open class func getRulesWithRequestBuilder() -> RequestBuilder<[DenyRuleRecord]> {
        let path = "/mail/rules"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[DenyRuleRecord]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
