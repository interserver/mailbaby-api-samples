--  MailBaby Email Delivery API
--  **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # 📌 Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # 🔐 Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
--
--  The version of the OpenAPI document: 1.0.0
--  Contact: support@interserver.net
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.0.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  displays a list of mail service orders
   procedure Get_Mail_Orders
      (Client : in out Client_Type;
       Result : out .Models.GetMailOrders200ResponseInner_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/mail");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Mail_Orders;

   --  Checks if the server is running
   procedure Ping_Server
      (Client : in out Client_Type) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/ping");
      Client.Call (Swagger.Clients.GET, URI);
   end Ping_Server;

   --  Sends an Email with Advanced Options
   --  Sends An email through one of your mail orders allowing additional options such as file attachments, cc, bcc, etc.
   procedure Send_Adv_Mail
      (Client : in out Client_Type;
       Send_Mail_Adv_Type : in .Models.SendMailAdv_Type;
       Result : out .Models.GenericResponse_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (Swagger.Clients.APPLICATION_JSON,
                               Swagger.Clients.APPLICATION_X-WWW-FORM-URLENCODED));
      .Models.Serialize (Req.Stream, "", Send_Mail_Adv_Type);

      URI.Set_Path ("/mail/advsend");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Send_Adv_Mail;

   --  Sends an Email
   --  Sends an email through one of your mail orders.
   --  
   --  *Note*: If you want to send to multiple recipients or use file attachments use the advsend (Advanced Send) call instead.
   procedure Send_Mail
      (Client : in out Client_Type;
       To : in Swagger.UString;
       From : in Swagger.UString;
       Subject : in Swagger.UString;
       P_Body : in Swagger.UString;
       Result : out .Models.GenericResponse_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      .Models.Serialize (Req.Stream, "to", To);
      .Models.Serialize (Req.Stream, "from", From);
      .Models.Serialize (Req.Stream, "subject", Subject);
      .Models.Serialize (Req.Stream, "body", P_Body);

      URI.Set_Path ("/mail/send");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Send_Mail;

   --  displays the mail log
   --  By passing in the appropriate options, you can search for
   --  available inventory in the system
   procedure View_Mail_Log
      (Client : in out Client_Type;
       Id : in Swagger.Nullable_Long;
       Search : in Swagger.Nullable_UString;
       Skip : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Result : out .Models.MailLog_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("id", Id);
      URI.Add_Param ("search", Search);
      URI.Add_Param ("skip", Skip);
      URI.Add_Param ("limit", Limit);
      URI.Set_Path ("/mail/log");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end View_Mail_Log;
end .Clients;
