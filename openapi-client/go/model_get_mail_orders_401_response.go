/*
MailBaby Email Delivery API

**Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.  We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 

API version: 1.0.1
Contact: support@interserver.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMailOrders401Response struct for GetMailOrders401Response
type GetMailOrders401Response struct {
	Code string `json:"code"`
	Message string `json:"message"`
}

// NewGetMailOrders401Response instantiates a new GetMailOrders401Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMailOrders401Response(code string, message string) *GetMailOrders401Response {
	this := GetMailOrders401Response{}
	this.Code = code
	this.Message = message
	return &this
}

// NewGetMailOrders401ResponseWithDefaults instantiates a new GetMailOrders401Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMailOrders401ResponseWithDefaults() *GetMailOrders401Response {
	this := GetMailOrders401Response{}
	return &this
}

// GetCode returns the Code field value
func (o *GetMailOrders401Response) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *GetMailOrders401Response) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *GetMailOrders401Response) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *GetMailOrders401Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GetMailOrders401Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *GetMailOrders401Response) SetMessage(v string) {
	o.Message = v
}

func (o GetMailOrders401Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableGetMailOrders401Response struct {
	value *GetMailOrders401Response
	isSet bool
}

func (v NullableGetMailOrders401Response) Get() *GetMailOrders401Response {
	return v.value
}

func (v *NullableGetMailOrders401Response) Set(val *GetMailOrders401Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMailOrders401Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMailOrders401Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMailOrders401Response(val *GetMailOrders401Response) *NullableGetMailOrders401Response {
	return &NullableGetMailOrders401Response{value: val, isSet: true}
}

func (v NullableGetMailOrders401Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMailOrders401Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


