/**
 * MailBaby Email Delivery API
 * **Send emails fast and with confidence through our easy to use [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) API interface.**   # üìå Overview  This is the API interface to the [Mail Baby](https//mail.baby/) Mail services provided by [InterServer](https://www.interserver.net). To use this service you must have an account with us at [my.interserver.net](https://my.interserver.net).   # üîê Authentication  In order to use most of the API calls you must pass credentials from the [my.interserver.net](https://my.interserver.net/) site.    We support several different authentication methods but the preferred method is to use the **API Key** which you can get from the [Account Security](https://my.interserver.net/account_security) page. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interserver.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface GenericResponse {
  status?: string;
  text?: string;
}


export interface GetMailOrders200ResponseInner {
  id: number;
  status: string;
  username: string;
  password?: string;
  comment?: string;
}


export interface GetMailOrders401Response {
  code: string;
  message: string;
}


/**
 * Mail log records
 */
export interface MailLog {
  /**
   * total number of mail log entries
   */
  total: number;
  /**
   * number of emails skipped in listing
   */
  skip: number;
  /**
   * number of emails to return
   */
  limit: number;
  emails: Array<MailLogEntry>;
}


/**
 * An email record
 */
export interface MailLogEntry {
  /**
   * internal db id
   */
  _id: number;
  /**
   * mail id
   */
  id: string;
  /**
   * from address
   */
  from: string;
  /**
   * to address
   */
  to: string;
  /**
   * email subject
   */
  subject: string;
  /**
   * message id
   */
  messageId: string;
  /**
   * creation date
   */
  created: string;
  /**
   * creation timestamp
   */
  time: number;
  /**
   * user account
   */
  user: string;
  /**
   * transaction type
   */
  transtype: string;
  /**
   * transaction host
   */
  transhost: string;
  /**
   * origin host
   */
  originhost: string;
  /**
   * origin ip
   */
  origin: string;
  /**
   * interface name
   */
  _interface: string;
  /**
   * date processed
   */
  date: string;
  /**
   * sending zone
   */
  sendingZone: string;
  /**
   * email body size in bytes
   */
  bodySize: number;
  /**
   * md5 sum of the email
   */
  sourceMd5: string;
  /**
   * delivery sequency
   */
  seq: number;
  /**
   * to address domain
   */
  domain: string;
  /**
   * email receiver address
   */
  recipient: string;
  /**
   * locked status
   */
  locked: number;
  /**
   * lock timestamp
   */
  lockTime: number;
  /**
   * assigned server
   */
  assigned: string;
  /**
   * queued timestamp
   */
  queued: string;
  /**
   * lock id
   */
  _lock: string;
  /**
   * logger
   */
  logger: string;
  /**
   * mx port number
   */
  mxPort: number;
  /**
   * connection key
   */
  connectionKey: string;
  /**
   * mx hostname
   */
  mxHostname: string;
  /**
   * body hash
   */
  sentBodyHash: string;
  /**
   * sent body size in bytes
   */
  sentBodySize: number;
  /**
   * md5 checksum matching result
   */
  md5Match: number;
}


/**
 * Details for an Email
 */
export interface SendMail {
  /**
   * The Contact whom is the primary recipient of this email.
   */
  to: string;
  /**
   * The contact whom is the this email is from.
   */
  from: string;
  /**
   * The subject or title of the email
   */
  subject: string;
  /**
   * The main email contents.
   */
  body: string;
}


/**
 * Details for an Email
 */
export interface SendMailAdv {
  /**
   * The subject or title of the email
   */
  subject: string;
  /**
   * The main email contents.
   */
  body: string;
  from: SendMailAdvFrom;
  /**
   * A list of destionation email addresses to send this to
   */
  to: Array<SendMailAdvToInner>;
  /**
   * (optional) A list of email addresses that specify where replies to the email should be sent instead of the _from_ address.
   */
  replyto?: Array<SendMailAdvReplytoInner>;
  /**
   * (optional) A list of email addresses to carbon copy this message to.  They are listed on the email and anyone getting the email can see this full list of Contacts who received the email as well.
   */
  cc?: Array<SendMailAdvCcInner>;
  /**
   * (optional) list of email addresses that should receive copies of the email.  They are hidden on the email and anyone gettitng the email would not see the other people getting the email in this list.
   */
  bcc?: Array<SendMailAdvBccInner>;
  /**
   * (optional) File attachments to include in the email.  The file contents must be base64 encoded!
   */
  attachments?: Array<SendMailAdvAttachmentsInner>;
  /**
   * (optional)  ID of the Mail order within our system to use as the Mail Account.
   */
  id?: number;
}


/**
 * A File attachment for an email
 */
export interface SendMailAdvAttachmentsInner {
  /**
   * Contents of the attached file (must be base64 encoded)
   */
  data: any;
  /**
   * (optional) Filename to specify for the attachment.
   */
  filename?: string;
}


/**
 * An Email Contact
 */
export interface SendMailAdvBccInner {
  /**
   * The email address
   */
  email: string;
  /**
   * (optional) Name to use for the BCC contact.
   */
  name?: string;
}


/**
 * An Email Contact
 */
export interface SendMailAdvCcInner {
  /**
   * The email address
   */
  email: string;
  /**
   * (optional) Name to use for the CC contact.
   */
  name?: string;
}


/**
 * The information to use for the From address in the email. from.
 */
export interface SendMailAdvFrom {
  /**
   * The email address
   */
  email: string;
  /**
   * (optional) Name to use for the sending contact.
   */
  name?: string;
}


/**
 * An Email Contact
 */
export interface SendMailAdvReplytoInner {
  /**
   * The email address
   */
  email: string;
  /**
   * (optional) Name to use for the sending contact.
   */
  name?: string;
}


/**
 * An Email Contact
 */
export interface SendMailAdvToInner {
  /**
   * The email address
   */
  email: string;
  /**
   * (optional) Name to use for the destination contact.
   */
  name?: string;
}

