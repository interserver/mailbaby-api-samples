//
// HistoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class HistoryAPI: APIBase {
    /**
     Account usage statistics.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getStats(completion: @escaping ((_ data: [InlineResponse200]?, _ error: ErrorResponse?) -> Void)) {
        getStatsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Account usage statistics.
     - GET /mail/stats
     - Returns information about the usage on your mail accounts.
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example=[ {
  "password" : "guest123",
  "comment" : "main mail account",
  "id" : 1234,
  "status" : "active",
  "username" : "mb1234"
}, {
  "password" : "guest123",
  "comment" : "main mail account",
  "id" : 1234,
  "status" : "active",
  "username" : "mb1234"
} ]}]
     - returns: RequestBuilder<[InlineResponse200]> 
     */
    open class func getStatsWithRequestBuilder() -> RequestBuilder<[InlineResponse200]> {
        let path = "/mail/stats"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[InlineResponse200]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     displays the mail log
     - parameter id: (query) The ID of your mail order this will be sent through. (optional)
     - parameter origin: (query) originating ip address sending mail (optional)
     - parameter mx: (query) mx record mail was sent to (optional)
     - parameter from: (query) from email address (optional)
     - parameter to: (query) to/destination email address (optional)
     - parameter subject: (query) subject containing this string (optional)
     - parameter mailid: (query) mail id (optional)
     - parameter skip: (query) number of records to skip for pagination (optional, default to 0)
     - parameter limit: (query) maximum number of records to return (optional, default to 100)
     - parameter startDate: (query) earliest date to get emails in unix timestamp format (optional)
     - parameter endDate: (query) earliest date to get emails in unix timestamp format (optional)
     - parameter replyto: (query) Reply-To Email Address (optional)
     - parameter headerfrom: (query) Header From Email Address (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func viewMailLog(id: Int64? = nil, origin: String? = nil, mx: String? = nil, from: String? = nil, to: String? = nil, subject: String? = nil, mailid: String? = nil, skip: Int32? = nil, limit: Int32? = nil, startDate: Int64? = nil, endDate: Int64? = nil, replyto: String? = nil, headerfrom: String? = nil, completion: @escaping ((_ data: MailLog?, _ error: ErrorResponse?) -> Void)) {
        viewMailLogWithRequestBuilder(id: id, origin: origin, mx: mx, from: from, to: to, subject: subject, mailid: mailid, skip: skip, limit: limit, startDate: startDate, endDate: endDate, replyto: replyto, headerfrom: headerfrom).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     displays the mail log
     - GET /mail/log
     - Get a listing of the emails sent through this system 
     - API Key:
       - type: apiKey X-API-KEY 
       - name: apiKeyAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "skip" : 0,
  "limit" : 100,
  "emails" : [ {
    "_id" : 103172,
    "id" : "17c7eda538e0005d03",
    "from" : "person@mysite.com",
    "to" : "client@isp.com",
    "subject" : "sell 0.005 shares",
    "messageId" : "<vmiLEebsuCbSpUxD7oN3REpaN4VbN6BrdCAbNKIrdAo@relay0.mailbaby.net>",
    "created" : "2021-10-14T08:50:10.000Z",
    "time" : 1634215809,
    "user" : "mb5658",
    "transtype" : "ESMTPSA",
    "origin" : "199.231.189.154",
    "interface" : "feeder",
    "sendingZone" : "interserver",
    "bodySize" : 63,
    "seq" : 1,
    "recipient" : "client@isp.com",
    "domain" : "interserver.net",
    "locked" : 1,
    "lockTime" : "1634215818533",
    "assigned" : "relay1",
    "queued" : "2021-10-14T12:50:15.487Z",
    "mxHostname" : "mx.j.is.cc",
    "response" : "250 2.0.0 Ok queued as C91D83E128C"
  } ]
}}]
     - parameter id: (query) The ID of your mail order this will be sent through. (optional)
     - parameter origin: (query) originating ip address sending mail (optional)
     - parameter mx: (query) mx record mail was sent to (optional)
     - parameter from: (query) from email address (optional)
     - parameter to: (query) to/destination email address (optional)
     - parameter subject: (query) subject containing this string (optional)
     - parameter mailid: (query) mail id (optional)
     - parameter skip: (query) number of records to skip for pagination (optional, default to 0)
     - parameter limit: (query) maximum number of records to return (optional, default to 100)
     - parameter startDate: (query) earliest date to get emails in unix timestamp format (optional)
     - parameter endDate: (query) earliest date to get emails in unix timestamp format (optional)
     - parameter replyto: (query) Reply-To Email Address (optional)
     - parameter headerfrom: (query) Header From Email Address (optional)
     - returns: RequestBuilder<MailLog> 
     */
    open class func viewMailLogWithRequestBuilder(id: Int64? = nil, origin: String? = nil, mx: String? = nil, from: String? = nil, to: String? = nil, subject: String? = nil, mailid: String? = nil, skip: Int32? = nil, limit: Int32? = nil, startDate: Int64? = nil, endDate: Int64? = nil, replyto: String? = nil, headerfrom: String? = nil) -> RequestBuilder<MailLog> {
        let path = "/mail/log"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
                        "id": id?.encodeToJSON(),
                        "origin": origin,
                        "mx": mx,
                        "from": from,
                        "to": to,
                        "subject": subject,
                        "mailid": mailid,
                        "skip": skip?.encodeToJSON(),
                        "limit": limit?.encodeToJSON(),
                        "startDate": startDate?.encodeToJSON(),
                        "endDate": endDate?.encodeToJSON(),
                        "replyto": replyto,
                        "headerfrom": headerfrom
        ])

        let requestBuilder: RequestBuilder<MailLog>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
